<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBXBBF088F944F649FE8409F2A106D078CA">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">PPSh-41</string>
			<bool name="RequiresHandle">true</bool>
			<Content name="TextureId"><null></null></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="MeshPart" referent="RBXB2BEFF0AD89B45DABFD411E27821C2FA">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-11.6824799</X>
					<Y>0.447894007</Y>
					<Z>-11.9749756</Z>
					<R00>0</R00>
					<R01>0</R01>
					<R02>-1</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<token name="CollisionFidelity">0</token>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<Vector3 name="InitialSize">
					<X>145.798615</X>
					<Y>148.231735</Y>
					<Z>51.7412109</Z>
				</Vector3>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">256</token>
				<Content name="MeshID"><url>rbxassetid://451934733</url></Content>
				<string name="Name">Mag</string>
				<BinaryString name="PhysicsData"><![CDATA[Q1NHUEhTAwAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8eAAAA
BAAAAJbBT700NRRCT6LCQS+51EE0NRRCIJcgP+0c10E0NRRCzMy/Qb/AT70zi1xCSlfIQdn5
1EEzi1xCIJcgP0YC+UEzi1xCKwq6QUUC+UE0NRRCE1W0QUJw10Ezi1xC3oDFQQDAT700NRRC
e5y3QQDAT70zi1xChlG9QTAAAAAAAAAAAQAAAAIAAAAAAAAAAgAAAAMAAAAEAAAAAwAAAAUA
AAAGAAAAAQAAAAQAAAAGAAAABAAAAAUAAAAGAAAAAgAAAAEAAAAHAAAAAgAAAAYAAAAHAAAA
BgAAAAUAAAAHAAAABQAAAAMAAAAHAAAAAwAAAAIAAAAIAAAAAAAAAAMAAAAIAAAAAQAAAAAA
AAAIAAAABAAAAAEAAAAJAAAAAwAAAAQAAAAJAAAABAAAAAgAAAAJAAAACAAAAAMAAAAQAAAA
AAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/HgAAAAQAAACWwU+9UzsUQsui
wkE7ZvvBUzsUQqnpukHHmdPBUzsUQqG3YD8yWdPBtH9cQqG3YD8Y19DBtH9cQtcTy0EAwE+9
tH9cQp9QvUE7ZvvBtH9cQk2dwEHBwE+9tH9cQmFWyEFUKtHBUzsUQjRhxUEAwE+9UzsUQvec
t0EwAAAAAAAAAAEAAAACAAAAAwAAAAQAAAAFAAAAAwAAAAIAAAABAAAABgAAAAQAAAADAAAA
BgAAAAMAAAABAAAABwAAAAQAAAAAAAAABwAAAAAAAAAFAAAABwAAAAUAAAAEAAAACAAAAAQA
AAAGAAAACAAAAAYAAAABAAAACAAAAAAAAAAEAAAACAAAAAEAAAAAAAAACQAAAAIAAAADAAAA
CQAAAAMAAAAFAAAACQAAAAAAAAACAAAACQAAAAUAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAQAAAAAAAAAAAAAAAAAAAAAACAPx4AAAAEAAAAx5nTwVM7FEKgt2A/AcBPvfxYXkLEGqbB
iVfTwfxYXkKgt2A/O2b7wfxYXkIizqLBO2b7wVM7FEIjp6jBvb9PvVM7FEKH68DBBb9PvfxY
XkKZErvBah/WwVM7FEJeHL7BCsrVwfxYXkJrRLjBAsBPvVM7FELH86vBMAAAAAAAAAABAAAA
AgAAAAMAAAACAAAAAQAAAAMAAAAAAAAAAgAAAAQAAAAFAAAAAAAAAAQAAAAAAAAAAwAAAAYA
AAABAAAABQAAAAYAAAADAAAAAQAAAAcAAAAGAAAABQAAAAcAAAAFAAAABAAAAAcAAAAEAAAA
AwAAAAgAAAADAAAABgAAAAgAAAAGAAAABwAAAAgAAAAHAAAAAwAAAAkAAAAAAAAABQAAAAkA
AAAFAAAAAQAAAAkAAAABAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAgD8eAAAABAAAAALAT73OT15CfRumwTC51EE0NRRCIJcgP2371EHOT15CIJcgPwPA
T700NRRCQvSrwdQn0kE0NRRCtbDDwUcC+UHOT15C4mKpwUcC+UE0NRRCqTuvwQa/T73OT15C
UxO7wby/T700NRRCAuzAwTV90kHOT15C/ti9wTAAAAAAAAAAAQAAAAIAAAADAAAABAAAAAEA
AAADAAAAAQAAAAAAAAAFAAAAAgAAAAEAAAAFAAAAAAAAAAIAAAAGAAAAAQAAAAQAAAAGAAAA
BQAAAAEAAAAHAAAAAAAAAAUAAAAHAAAAAwAAAAAAAAAIAAAABAAAAAMAAAAIAAAAAwAAAAcA
AAAIAAAABwAAAAQAAAAJAAAABAAAAAcAAAAJAAAABwAAAAUAAAAJAAAABQAAAAYAAAAJAAAA
BgAAAAQAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/LQAAAAQA
AABHAvlB/M2CQjCXID/a+dRBMotcQiCXID/7v0+9JGeSQjCXID9HAvlBMotcQisKukFHAvlB
e0eBQgMKvUHAwE+9MotcQkhXyEExPlZBbqOPQiCXID/p3uY+TYKQQsOwzUHLTVtBp7mNQmTb
y0HvKNVBs5yIQiCXID+ZqNdBEbmGQu9byUFDcNdBMotcQt2AxUEBwE+9MotcQoZRvUEBwE+9
NmiQQia6zUEGwE+9ETCRQiCXID9OAAAAAAAAAAEAAAACAAAAAwAAAAEAAAAAAAAAAwAAAAAA
AAAEAAAAAwAAAAUAAAABAAAABgAAAAIAAAAHAAAABgAAAAAAAAACAAAACAAAAAYAAAAHAAAA
CAAAAAcAAAAFAAAACQAAAAYAAAAIAAAACQAAAAAAAAAGAAAACgAAAAQAAAAAAAAACgAAAAAA
AAAJAAAACgAAAAkAAAAIAAAACgAAAAMAAAAEAAAACgAAAAgAAAAFAAAACwAAAAUAAAADAAAA
CwAAAAMAAAAKAAAACwAAAAoAAAAFAAAADAAAAAEAAAAFAAAADAAAAAUAAAACAAAADQAAAAUA
AAAHAAAADQAAAAcAAAACAAAADQAAAAIAAAAFAAAADgAAAAIAAAABAAAADgAAAAEAAAAMAAAA
DgAAAAwAAAACAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPyoA
AAAEAAAAAMBPvbR/XEKfUL1B+r9PvQtikkKgt2A/AMBPvTZokEIlus1BO2b7wbR/XEJNncBB
MlnTwbR/XEKgt2A/O2b7wZ6cgkKgt2A/O2b7wdKMgEKYgMNB5w1SwUi8j0Kgt2A/wcBPvbR/
XEJgVshBTp7QwdXmhkIA985BsSnTwVXTiEKgt2A/GNfQwbR/XELXE8tBF/lMwYnQjUIBqc5B
BcBPvQIrkULBt2A/SAAAAAAAAAABAAAAAgAAAAMAAAAEAAAAAAAAAAUAAAABAAAABAAAAAUA
AAAEAAAAAwAAAAYAAAAFAAAAAwAAAAcAAAABAAAABQAAAAcAAAACAAAAAQAAAAgAAAADAAAA
AAAAAAgAAAAAAAAAAgAAAAgAAAACAAAACQAAAAoAAAAJAAAABwAAAAoAAAAHAAAABQAAAAoA
AAAFAAAABgAAAAoAAAAGAAAACQAAAAsAAAADAAAACAAAAAsAAAAIAAAACQAAAAsAAAAJAAAA
BgAAAAsAAAAGAAAAAwAAAAwAAAAJAAAAAgAAAAwAAAACAAAABwAAAAwAAAAHAAAACQAAAA0A
AAAAAAAABAAAAA0AAAAEAAAAAQAAAA0AAAABAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAA
EAAAAAAAAAAAAAAAAAAAAAAAgD8tAAAABAAAAPu/T70lZ5JCMpcgP2371EHOT15CIpcgP+8o
1UGynIhCIpcgPwLAT73OT15CfhumwTV90kHOT15C/ti9wQPAT700NZRCkjq1wRe80kEXcopC
XYu5wUcC+UHOT15C4mKpwUcC+UH8zYJCMpcgP0cC+UHAEoRCSAaUwQa/T73OT15CVBO7wUcC
+UGd2H5Cu9GmwTE+VkFuo49CIpcgP8l0UUGrcpFC5wu3wQbAT70SMJFCIpcgP04AAAAAAAAA
AQAAAAIAAAADAAAABAAAAAEAAAAFAAAAAwAAAAAAAAAGAAAABAAAAAUAAAAHAAAABAAAAAYA
AAAHAAAAAQAAAAQAAAAIAAAAAgAAAAEAAAAIAAAAAQAAAAcAAAAJAAAACAAAAAcAAAAJAAAA
BgAAAAIAAAAJAAAAAgAAAAgAAAAKAAAABAAAAAMAAAAKAAAAAwAAAAUAAAAKAAAABQAAAAQA
AAALAAAABwAAAAYAAAALAAAABgAAAAkAAAALAAAACQAAAAcAAAAMAAAAAgAAAAYAAAAMAAAA
AAAAAAIAAAAMAAAABQAAAAAAAAANAAAABgAAAAUAAAANAAAABQAAAAwAAAANAAAADAAAAAYA
AAAOAAAAAQAAAAAAAAAOAAAAAAAAAAMAAAAOAAAAAwAAAAEAAAAQAAAAAAAAAAAAAAAAAAAA
AAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/LQAAAAQAAAABwE+9NDWUQpI6tcEEv0+9/FheQpkS
u8HKitXB25+KQkzws8H5v0+9C2KSQqC3YD86ZvvB/FheQiLOosGIV9PB/FheQqC3YD86ZvvB
npyCQqC3YD86ZvvBTTyEQrRrjcEIytXB/FheQmtEuMHmDVLBSLyPQqC3YD8AwE+9/FheQsQa
psGwKdPBVdOIQqC3YD86ZvvBukh/QuM0oMEZ0lbBjYmRQnA+tMEEwE+9AiuRQsC3YD9OAAAA
AAAAAAEAAAACAAAAAAAAAAMAAAABAAAABAAAAAEAAAAFAAAABgAAAAQAAAAFAAAABgAAAAUA
AAADAAAABwAAAAQAAAAGAAAABwAAAAYAAAACAAAACAAAAAIAAAABAAAACAAAAAEAAAAEAAAA
CQAAAAYAAAADAAAACgAAAAUAAAABAAAACgAAAAEAAAADAAAACwAAAAIAAAAGAAAACwAAAAYA
AAAJAAAACwAAAAkAAAACAAAADAAAAAIAAAAIAAAADAAAAAgAAAAEAAAADAAAAAQAAAAHAAAA
DAAAAAcAAAACAAAADQAAAAAAAAACAAAADQAAAAIAAAAJAAAADQAAAAMAAAAAAAAADQAAAAkA
AAADAAAADgAAAAMAAAAFAAAADgAAAAUAAAAKAAAADgAAAAoAAAADAAAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPyQAAAAEAAAAin4RQgAAAABPFqhB/79PvQAA
AAD56qtBAMBPvT+66EGA4S2+lsFPvTQ1FEJOosJBTaTUQTQ1FEKA4S2+in4RQjQ1FELYx7NB
omupQeJa6EGA4S2+7RzXQTQ1FELLzL9B/prUQa/LCUKA4S2+AMBPvTQ1FEJ5nLdBndmrQeAB
4UF1jb1BrgzXQZYZBkIJsL5BPAAAAAAAAAABAAAAAgAAAAMAAAACAAAAAQAAAAQAAAADAAAA
BQAAAAQAAAAFAAAAAAAAAAYAAAAAAAAAAgAAAAYAAAACAAAABAAAAAcAAAAAAAAABQAAAAcA
AAAFAAAAAwAAAAgAAAAEAAAAAAAAAAgAAAAAAAAABgAAAAgAAAAGAAAABAAAAAkAAAACAAAA
AwAAAAkAAAADAAAABAAAAAkAAAAEAAAAAgAAAAoAAAAHAAAAAwAAAAoAAAADAAAAAQAAAAoA
AAABAAAAAAAAAAsAAAAAAAAABwAAAAsAAAAHAAAACgAAAAsAAAAKAAAAAAAAABAAAAAAAAAA
AAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8nAAAABAAAAP+/T70AAAAA+OqrQWrm
EcIAAAAAmb+vQXGtqMFUAOlB/1IPPgfAT73aoehBAVMPPgDAT71TOxRC9py3QWrmEcJTOxRC
qnG7QVYq0cFTOxRCMmHFQRut08FTOxRC/1IPPgDCT70yTOFBHdS/QZbBT71TOxRCyKLCQQ62
08GcNgpC/1IPPvg4psG9k+FB/QTCQTE60cEadQZCLUvEQUIAAAAAAAAAAQAAAAIAAAADAAAA
AAAAAAIAAAADAAAABAAAAAAAAAAFAAAABgAAAAQAAAAHAAAAAQAAAAUAAAAHAAAABQAAAAQA
AAAHAAAABAAAAAMAAAAHAAAAAwAAAAIAAAAIAAAAAAAAAAQAAAAIAAAAAQAAAAAAAAAJAAAA
BAAAAAYAAAAJAAAABgAAAAgAAAAJAAAACAAAAAQAAAAKAAAAAgAAAAEAAAAKAAAAAQAAAAcA
AAAKAAAABwAAAAIAAAALAAAAAQAAAAgAAAALAAAACAAAAAYAAAAMAAAAAQAAAAsAAAAMAAAA
CwAAAAYAAAAMAAAABgAAAAUAAAAMAAAABQAAAAEAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAA
AAAAAAAAAAAAAAAAAAAAAIA/JwAAAAQAAAAAwE+9Y6XwMsqlt8Fq5hHCAAAAACLRs8EAwE+9
JC7wQecjw8EHwE+92qHoQQFTDz4OttPBnDYKQv9SDz5q5hHCUzsUQjIfqMECwE+9UzsUQsbz
q8EbrdPBUzsUQv9SDz5pH9bBUzsUQl4cvsG9v0+9UzsUQobrwMFxrajBVADpQf9SDz6CJavB
zHfwQXPiwMGyJtbBJucNQhucvsFCAAAAAAAAAAEAAAACAAAAAQAAAAAAAAADAAAAAgAAAAMA
AAAAAAAABAAAAAUAAAABAAAABgAAAAMAAAACAAAABwAAAAQAAAADAAAABwAAAAMAAAAGAAAA
BwAAAAUAAAAEAAAABwAAAAYAAAAFAAAACAAAAAUAAAAGAAAACQAAAAYAAAACAAAACQAAAAIA
AAAIAAAACQAAAAgAAAAGAAAACgAAAAEAAAADAAAACgAAAAMAAAAEAAAACgAAAAQAAAABAAAA
CwAAAAIAAAABAAAACwAAAAgAAAACAAAADAAAAAgAAAALAAAADAAAAAsAAAABAAAADAAAAAEA
AAAFAAAADAAAAAUAAAAIAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAA
AACAPyQAAAAEAAAAin4RQgAAAAB4ervBAMBPvWKl8DLMpbfBFe2mQfPl70HUWcXBAMBPvT+6
6EGA4S2+TaTUQTQ1FEKA4S2+AsBPvTQ1FEJA9KvBin4RQjQ1FELuyK/BomupQeJa6EGA4S2+
vb9PvTQ1FEIC7MDB1CfSQTQ1FEK1sMPB/prUQa/LCUKA4S2+KSDSQaKLDUItN8TBPAAAAAAA
AAABAAAAAgAAAAMAAAAEAAAABQAAAAMAAAAFAAAAAQAAAAYAAAAFAAAABAAAAAcAAAABAAAA
AAAAAAcAAAADAAAAAQAAAAcAAAAEAAAAAwAAAAgAAAAFAAAABgAAAAgAAAACAAAAAQAAAAgA
AAABAAAABQAAAAkAAAACAAAACAAAAAkAAAAIAAAABgAAAAkAAAAGAAAAAAAAAAoAAAAEAAAA
BwAAAAoAAAAHAAAAAAAAAAoAAAAAAAAABgAAAAoAAAAGAAAABAAAAAsAAAAAAAAAAgAAAAsA
AAACAAAACQAAAAsAAAAJAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAgD85AAAABAAAADpm+8FTOxRCqum6QUkye8JTOxRC1EqTwTpm+8FTOxRCI6eowTpm
+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
AAANAAAACAAAABAAAAALAAAACQAAABAAAAAMAAAACwAAABEAAAANAAAADwAAABEAAAAPAAAA
CgAAABEAAAAKAAAABgAAABEAAAALAAAADQAAABIAAAAGAAAACwAAABIAAAALAAAAEQAAABIA
AAARAAAABgAAABMAAAAMAAAAEAAAABMAAAAJAAAAAQAAABMAAAAQAAAACQAAABMAAAABAAAA
AwAAABMAAAADAAAADAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAA
gD85AAAABAAAAIKYkUIAAAAApkGkQYp+EUIAAAAAUBaoQVAujEIAAAAAPga/wYp+EUI0NRRC
2MezQYp+EUIAAAAAeHq7wYp+EUI0NRRC78ivwTY2eUI0NRRCfHOgwXpqd0I0NRRC0BmxQVTK
ikLUn6lBU06rQRaukEIAAAAAMjOtwVL9jkIpIDtBgWupwUD3bkI0NRRCDD6yweK3iUKVl7ZB
dKGlwYhyhUJQ0rFBsqe3wcAPkEKAMCFBNISnQWYdgkINPf5BmxmvQdSOikLAAjdBS1S7wfkK
gUJymgVCLNahwZgSekKu7QFC+vmzwWYAAAAAAAAAAQAAAAIAAAABAAAAAAAAAAMAAAAEAAAA
AgAAAAEAAAAEAAAAAQAAAAMAAAAFAAAAAgAAAAQAAAAFAAAABAAAAAMAAAAGAAAABQAAAAMA
AAAHAAAAAwAAAAAAAAAHAAAABgAAAAMAAAAIAAAABwAAAAAAAAAJAAAAAAAAAAIAAAAJAAAA
CgAAAAAAAAALAAAAAgAAAAUAAAALAAAABQAAAAYAAAAMAAAACAAAAAoAAAANAAAAAgAAAAsA
AAANAAAADAAAAAoAAAAOAAAAAAAAAAoAAAAOAAAACgAAAAgAAAAOAAAACAAAAAAAAAAPAAAA
CAAAAAwAAAAPAAAABgAAAAcAAAAPAAAABwAAAAgAAAAQAAAAAgAAAA0AAAAQAAAADQAAAAoA
AAAQAAAACgAAAAkAAAAQAAAACQAAAAIAAAARAAAABgAAAA8AAAARAAAADwAAAAwAAAARAAAA
DAAAAA0AAAARAAAACwAAAAYAAAASAAAADQAAAAsAAAASAAAACwAAABEAAAASAAAAEQAAAA0A
AAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/YAAAAAQAAACCmJFC
AAAAAKVBpEEbjZDCAAAAAG+Ds0FgB9U9UzuUwq6ClEFQLoxCAAAAAD4Gv8G+VY3CAAAAAI84
sMGKTem+TF+MwonBzcFqCk5CE2VTwvbQlUED00zCzrNSwlasoEF0lopC2te+wZUYnUHkt4nC
Evu8wf+yq0F8qLLB/gSNwiYCmEE38rbBEMeJwqLtuMFwc7RBuiuNwndDk0G4KbBBxu2JwlCs
vcFf3CNCoAZjwqXfzcEdoQHCfbZ5woHyx8Hub2XCBNAjwqiLvsHg907C8zdMwl9DsMFSyorC
TgOwwcs8pcEWrpBCAAAAADIzrcEEhIlCEOCxwTPXs8HkLd2+Yv2QwhttvMGkt5HCAAAAAAru
ncHRfnlC6ZT9wYI3yMGK5UtCLulMwtIeu8FdjQXCcPyAwk9vtsFKPQJCWDWBwsJnvcGiOSrC
83pwwhFqnUEkYgRCQnOEwvGHk0Fcf2zCJl8pws28rMEdlWlC7CkqwrIoucF9WmrCCtsvwuYy
pEG0AAAAAAAAAAEAAAACAAAAAwAAAAEAAAAAAAAABAAAAAMAAAAFAAAABAAAAAEAAAADAAAA
BgAAAAAAAAACAAAABwAAAAIAAAABAAAACAAAAAAAAAAGAAAACQAAAAcAAAABAAAACgAAAAIA
AAAHAAAACgAAAAsAAAACAAAADAAAAAYAAAACAAAADAAAAAIAAAANAAAADgAAAA0AAAAFAAAA
DgAAAAUAAAADAAAADwAAAAUAAAALAAAADwAAAAQAAAAFAAAAEAAAAAQAAAAPAAAAEAAAAA8A
AAARAAAAEAAAABIAAAAEAAAAEwAAAAAAAAAIAAAAEwAAAAgAAAAUAAAAEwAAAAMAAAAAAAAA
EwAAABQAAAADAAAAFQAAAAUAAAANAAAAFQAAAA0AAAACAAAAFQAAAAIAAAALAAAAFQAAAAsA
AAAFAAAAFgAAABIAAAAJAAAAFgAAAAkAAAABAAAAFgAAAAEAAAAEAAAAFgAAAAQAAAASAAAA
FwAAABgAAAAOAAAAFwAAAAMAAAAUAAAAFwAAAA4AAAADAAAAGQAAABEAAAAPAAAAGQAAAA8A
AAALAAAAGQAAAAsAAAAKAAAAGgAAAA0AAAAOAAAAGgAAAA4AAAAYAAAAGgAAAAwAAAANAAAA
GgAAABgAAAAGAAAAGwAAAAcAAAARAAAAGwAAABEAAAAZAAAAGwAAAAoAAAAHAAAAGwAAABkA
AAAKAAAAHAAAAAYAAAAMAAAAHAAAAAwAAAAaAAAAHAAAABoAAAAGAAAAHQAAABIAAAAQAAAA
HQAAABAAAAARAAAAHQAAAAkAAAASAAAAHQAAABEAAAAHAAAAHgAAABgAAAAXAAAAHgAAABcA
AAAUAAAAHgAAABQAAAAIAAAAHgAAAAgAAAAGAAAAHgAAAAYAAAAYAAAAHwAAAAcAAAAJAAAA
HwAAAAkAAAAdAAAAHwAAAB0AAAAHAAAA]]></BinaryString>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Content name="TextureID"><url>rbxassetid://451000866</url></Content>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>0.73712945</X>
					<Y>0.749426842</Y>
					<Z>0.261592805</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="MeshPart" referent="RBX4C67247CC6D048419F0044ED3DEBDE7D">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-12.1400299</X>
					<Y>0.579061985</Y>
					<Z>-11.9454498</Z>
					<R00>0</R00>
					<R01>0</R01>
					<R02>-1</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<token name="CollisionFidelity">0</token>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<Vector3 name="InitialSize">
					<X>60.5921478</X>
					<Y>225.093521</Y>
					<Z>877.184937</Z>
				</Vector3>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">256</token>
				<Content name="MeshID"><url>rbxassetid://451934411</url></Content>
				<string name="Name">Bolt</string>
				<BinaryString name="PhysicsData"><![CDATA[Q1NHUEhTAwAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9RAAAA
BAAAAFq6CsFAeh/APbZCwtqsCsFAeh/ADvBnwmjdCsFZ8vPB5IYjwmwDKsBAeh/Au7NCwv6W
KsD8RtzBJoQXwjZnKsBtJdrB6uQ3wnnNKcBAeh/AkO1nwvrBCsFEbZDBKilSwj7fCsFhRdzB
14YXwquPKsAE9PPBNYQjwu0hKsDtbpDBeiZSwlzTCsHEI9rBpuc3wtKZKsCYF+/B0TgbwuLf
CsHkFe/BeDsbwoKBKsC5wO/Bph4swt7ZCsEJv+/BViEswlUKKsCwTWLB3khZwhy8CsFoSmLB
hktZwmDcCsHkTMrByi4awoaLKsCNTsrBGSwawus8KsAUya3BGzJIwrnICsFsx63ByzRIwjqv
CsHAO4zApNJlwgC/CsHI9IDBpeVVwgQWKsBx9oDB6uJVwlYvKsDcIZ/BAGFNwkPFCsEwIJ/B
pmNNwpYAAAAAAAAAAQAAAAIAAAADAAAAAQAAAAAAAAADAAAABAAAAAUAAAAGAAAAAQAAAAMA
AAAGAAAAAwAAAAUAAAAHAAAAAgAAAAEAAAAIAAAAAAAAAAIAAAAJAAAABQAAAAQAAAAKAAAA
BgAAAAUAAAALAAAAAgAAAAcAAAAMAAAAAgAAAAkAAAAMAAAACQAAAAQAAAAMAAAABAAAAAgA
AAANAAAACAAAAAIAAAANAAAAAgAAAAwAAAANAAAADAAAAAgAAAAOAAAACwAAAAUAAAAOAAAA
BQAAAAkAAAAOAAAACQAAAAIAAAAPAAAAAgAAAAsAAAAPAAAACwAAAA4AAAAPAAAADgAAAAIA
AAAQAAAABgAAAAoAAAARAAAABwAAAAEAAAASAAAAAAAAAAgAAAASAAAACAAAAAQAAAASAAAA
AwAAAAAAAAATAAAABAAAAAMAAAATAAAAAwAAABIAAAATAAAAEgAAAAQAAAAUAAAABQAAAAsA
AAAUAAAACgAAAAUAAAAVAAAACwAAAAcAAAAVAAAAFAAAAAsAAAAWAAAAEAAAABEAAAAWAAAA
EQAAAAEAAAAWAAAAAQAAAAYAAAAWAAAABgAAABAAAAAXAAAABwAAABEAAAAXAAAAEQAAABAA
AAAXAAAACgAAAAcAAAAYAAAAEAAAAAoAAAAYAAAACgAAABcAAAAYAAAAFwAAABAAAAAZAAAA
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
AAAIAAAADwAAAAcAAAAFAAAADwAAAAUAAAANAAAAEAAAAAsAAAAFAAAAEAAAABEAAAALAAAA
EgAAAAwAAAALAAAAEgAAAAkAAAAMAAAAEgAAABEAAAAJAAAAEwAAAAUAAAAHAAAAEwAAABAA
AAAFAAAAEwAAAAkAAAARAAAAEwAAAAcAAAAJAAAAFAAAABUAAAAPAAAAFAAAAA8AAAANAAAA
FAAAAAQAAAAVAAAAFAAAAA0AAAAEAAAAFgAAAAoAAAAGAAAAFgAAAAYAAAAOAAAAFgAAAA4A
AAAKAAAAFwAAAAYAAAALAAAAFwAAAAsAAAAMAAAAFwAAAAwAAAAGAAAAGAAAAAsAAAARAAAA
GAAAABEAAAASAAAAGAAAABIAAAALAAAAGQAAABUAAAAEAAAAGQAAAAEAAAADAAAAGgAAAAoA
AAAOAAAAGgAAAAAAAAACAAAAGgAAAAIAAAAKAAAAGwAAABoAAAAOAAAAHAAAABEAAAAQAAAA
HAAAABAAAAATAAAAHAAAABMAAAARAAAAHQAAAAQAAAABAAAAHQAAAAEAAAAZAAAAHQAAABkA
AAAEAAAAHgAAAAEAAAAEAAAAHgAAAAQAAAAKAAAAHgAAAAIAAAABAAAAHgAAAAoAAAACAAAA
HwAAAAAAAAAaAAAAHwAAABoAAAAbAAAAHwAAABsAAAAOAAAAHwAAABUAAAAZAAAAHwAAABkA
AAADAAAAHwAAAAcAAAAPAAAAHwAAAA8AAAAVAAAAHwAAAA4AAAAIAAAAHwAAAAgAAAAHAAAA
HwAAAAMAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPx4A
AAAEAAAA2QyjwfibT0HfeCRDZ/wOQfibT0HfeCRDCJpBQfibT0FlDwlDGvy1wNY7hMHfeCRD
7hzgQGCXBMHfeCRDMUWTwWl3AsHfeCRDItqywTec10BlDwlDKGK2wBk05L5lDwlDzfS8wfib
T0FlDwlDzMktQdmC2EBlDwlDMAAAAAAAAAABAAAAAgAAAAAAAAADAAAAAQAAAAQAAAACAAAA
AQAAAAQAAAABAAAAAwAAAAUAAAAGAAAAAwAAAAUAAAADAAAAAAAAAAcAAAADAAAABgAAAAcA
AAAGAAAAAgAAAAgAAAAGAAAABQAAAAgAAAAFAAAAAAAAAAgAAAACAAAABgAAAAgAAAAAAAAA
AgAAAAkAAAAEAAAAAwAAAAkAAAADAAAABwAAAAkAAAACAAAABAAAAAkAAAAHAAAAAgAAABAA
AAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9OAAAABAAAAKCHpcHZBZtC
WeK/w1QoOsHQyXhCWeK/w9vi+T9sYqdCWeK/w1phvsHQyXhC2rDBw67KS0HQyXhCBq/Bw1Cy
gEConKBCFpfNw8YfO0EIOpFCFpfNw+vgtcEZPpFCFpfNw0sJOsHQyXhCUtHIw9ObicG6z59C
FpfNw9qBOUHaAZNCWeK/w3XYS0HQyXhCx9bGwzMcUMEWZqdCWeK/w2ZZvsHQyXhCBNnGw29M
GkGxB5tCFpfNw0NwuMECKItCWeK/w/RbEj/QyXhCWeK/w80kGkH2A5tCWeK/w9FzpcGGCZtC
FpfNw7mlEz/QyXhCpNDIw/nuP0HbHYtCWeK/w345tcE8BJNCWeK/wx9BxUAbzp9CFpfNw3Cp
OUGSBZNCFpfNw64ltcH0B5NCFpfNw9bvhMH1B6BCFpfNw5AAAAAAAAAAAQAAAAIAAAADAAAA
BAAAAAEAAAAFAAAABgAAAAcAAAAIAAAABAAAAAMAAAAIAAAABwAAAAYAAAAJAAAABQAAAAcA
AAAKAAAAAgAAAAEAAAALAAAABAAAAAgAAAAMAAAAAgAAAAUAAAAMAAAAAAAAAAIAAAANAAAA
BwAAAAgAAAANAAAACAAAAAMAAAAOAAAABgAAAAUAAAAPAAAABwAAAA0AAAAPAAAADQAAAAMA
AAAPAAAAAQAAAAAAAAAPAAAAAwAAAAEAAAAQAAAAAQAAAAQAAAAQAAAACgAAAAEAAAARAAAA
AgAAAAoAAAARAAAACgAAAA4AAAARAAAADgAAAAIAAAASAAAAAAAAAAwAAAASAAAADAAAAAkA
AAASAAAACQAAAAcAAAATAAAACAAAAAYAAAATAAAABgAAAAsAAAATAAAACwAAAAgAAAAUAAAA
CgAAABAAAAAUAAAAEAAAAAQAAAAUAAAABAAAAAsAAAAUAAAACwAAAAYAAAAUAAAABgAAAAoA
AAAVAAAAAAAAABIAAAAVAAAABwAAAA8AAAAVAAAADwAAAAAAAAAWAAAABQAAAAIAAAAWAAAA
AgAAAA4AAAAWAAAADgAAAAUAAAAXAAAACgAAAAYAAAAXAAAABgAAAA4AAAAXAAAADgAAAAoA
AAAYAAAAEgAAAAcAAAAYAAAABwAAABUAAAAYAAAAFQAAABIAAAAZAAAABQAAAAkAAAAZAAAA
CQAAAAwAAAAZAAAADAAAAAUAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAA
AAAAAIA/YAAAAAQAAADmnS9B2jmZQp0tssOWJqnB2jmZQt94pMPlcLDB2jmZQp0tssP5eoXB
X9PQQpiWr8MwxbNAiNLQQp0tssMTtrNA09HQQlaVr8NFd4XBFdTQQp0tssNjuiBB2jmZQt94
pMNgU8RA5MKfQt94pMMRHlc/sRPdQp0tssNMcz7BlhTdQp0tssM7NS7BASeiQt94pMNG14nB
hMSfQt94pMPXB7HARxXhQtx+sMPAcgTB8cXfQp0tssN6AbHAkxXhQg6ZscMB0YBAdPnWQp0t
ssNudXHBMPrWQugGsMMwb3HByPrWQp0tssN/xIBA3fjWQtUFsMN81THA5MTfQp0tssPwAJXA
EPuiQt94pMNDr6XBf/6aQt94pMON1RlBffyaQt94pMNHLRbAY4/fQrR+sMMA0FY/OxPdQop+
sMPcfQvB0I/fQg5/sMMkeD7BHxTdQj5/sMOdtRtAbozaQp0tssOKnxtA5ovaQi5CsMOf9lfB
Ao3aQhNDsMMK8VfBiY3aQp0tssO0AAAAAAAAAAEAAAACAAAAAwAAAAIAAAABAAAABAAAAAUA
AAAAAAAABAAAAAAAAAACAAAABgAAAAQAAAACAAAABgAAAAIAAAADAAAABwAAAAAAAAAFAAAA
BwAAAAgAAAABAAAABwAAAAEAAAAAAAAACQAAAAQAAAAGAAAACgAAAAkAAAAGAAAACwAAAAEA
AAAIAAAADAAAAAsAAAANAAAADAAAAAEAAAALAAAADgAAAA0AAAAPAAAADgAAAAkAAAAKAAAA
EAAAAAUAAAAEAAAAEAAAAAQAAAAJAAAAEQAAAAYAAAADAAAAEgAAAAoAAAAGAAAAEgAAAAYA
AAARAAAAEwAAAAUAAAAQAAAAFAAAAAkAAAAOAAAAFAAAAA4AAAAPAAAAFAAAAA8AAAANAAAA
FQAAAAsAAAAIAAAAFQAAAAgAAAANAAAAFQAAAA0AAAALAAAAFgAAAAMAAAABAAAAFgAAABEA
AAADAAAAFgAAAAEAAAAMAAAAFwAAAAgAAAAHAAAAFwAAAAcAAAAFAAAAFwAAAAUAAAATAAAA
GAAAABkAAAAJAAAAGAAAAAkAAAAUAAAAGAAAABQAAAANAAAAGAAAAAgAAAAZAAAAGAAAAA0A
AAAIAAAAGgAAAAoAAAAbAAAAGgAAAA4AAAAKAAAAGgAAAA0AAAAOAAAAGgAAABsAAAAMAAAA
GgAAAAwAAAANAAAAHAAAABMAAAAQAAAAHAAAAAkAAAAZAAAAHAAAABAAAAAJAAAAHQAAABMA
AAAcAAAAHQAAABwAAAAZAAAAHQAAAAgAAAAXAAAAHQAAABcAAAATAAAAHQAAABkAAAAIAAAA
HgAAABEAAAAWAAAAHgAAABYAAAAMAAAAHgAAABIAAAARAAAAHgAAABsAAAAKAAAAHgAAAAwA
AAAbAAAAHwAAAAoAAAASAAAAHwAAABIAAAAeAAAAHwAAAB4AAAAKAAAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP0UAAAAEAAAA/m+6wcczXkLheCTD2G3BQA2K
EULheCTD7lBBQVQfXkLheCTDsTCKwQKKEULheCTDTMkWwXeUZkJc4j/DTGw7QR/FT0Jc4j/D
dU+Jwe9AKEJc4j/DZla3we3JT0Jc4j/DtJq+QFY+KEJc4j/DjV+zwRXvKkLheCTD4h8zQePu
KkLheCTDOJnjv3eUZkLheCTD3EalwacgMEJc4j/DRj8XQQ0dMEJc4j/D6Erjv3eUZkJc4j/D
mK2zwP79CULheCTDmGOlwbngGkLheCTD1yAXQaXgGkLheCTDtlM1QW98P0Jc4j/Dek20wZGA
P0Jc4j/DvA4XwXeUZkLheCTDKbhzwR0KJ0Jc4j/DcNCAQDQNJ0Jc4j/DfgAAAAAAAAABAAAA
AgAAAAMAAAABAAAAAAAAAAQAAAAFAAAABgAAAAcAAAAAAAAABAAAAAcAAAAEAAAABgAAAAgA
AAAGAAAABQAAAAkAAAADAAAAAAAAAAkAAAAAAAAABwAAAAoAAAAFAAAAAgAAAAoAAAACAAAA
AQAAAAsAAAAAAAAAAgAAAAwAAAAHAAAABgAAAAwAAAAGAAAAAwAAAA0AAAAIAAAABQAAAA0A
AAABAAAACAAAAA4AAAAEAAAACwAAAA4AAAALAAAAAgAAAA4AAAACAAAABQAAAA4AAAAFAAAA
BAAAAA8AAAADAAAABgAAAA8AAAABAAAAAwAAAA8AAAAIAAAAAQAAABAAAAADAAAACQAAABAA
AAAMAAAAAwAAABEAAAAKAAAAAQAAABEAAAABAAAADQAAABIAAAAKAAAAEQAAABIAAAARAAAA
DQAAABIAAAAFAAAACgAAABIAAAANAAAABQAAABMAAAAMAAAAEAAAABMAAAAQAAAACQAAABMA
AAAJAAAABwAAABMAAAAHAAAADAAAABQAAAAEAAAAAAAAABQAAAAAAAAACwAAABQAAAALAAAA
BAAAABUAAAAGAAAACAAAABUAAAAPAAAABgAAABYAAAAIAAAADwAAABYAAAAPAAAAFQAAABYA
AAAVAAAACAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9LAAAA
BAAAAMyDs8EKxJJC4XgkwziZ4793lGZC4Xgkw993wkBtrJ9C4Xgkw+R6N0G44JJCXOI/w03J
FsF3lGZCXOI/w1c6isHKsZ9CXOI/wzZKPUGIsIlC4Xgkw7kltsHO5pBCXOI/wylOisEMrp9C
4Xgkwx3HwkAqsJ9CXOI/w7wOF8F3lGZC4Xgkw+lK4793lGZCXOI/w4BiuMFDq4lC4Xgkw66E
F0F02JpC4Xgkw0bupcEf6ZpCXOI/w5B0pcGM2ppC4Xgkw4LHGEEH55pCXOI/w/GXQ8F4laFC
4XgkwywuOUFs5JBCXOI/w0Vuhz9mk6FC4Xgkw6CcM0G1wZJC4Xgkw9uIk0CNPqBCXOI/wy9L
tcEP45JCXOI/wx7VfMHsP6BCXOI/wyJcLsFqgGxCXOI/w4oAAAAAAAAAAQAAAAIAAAADAAAA
BAAAAAUAAAAGAAAAAgAAAAEAAAAHAAAABQAAAAQAAAAIAAAAAAAAAAIAAAAJAAAAAwAAAAUA
AAAKAAAABAAAAAEAAAAKAAAAAQAAAAAAAAALAAAABgAAAAEAAAALAAAAAQAAAAQAAAALAAAA
BAAAAAMAAAAMAAAABAAAAAoAAAAMAAAACgAAAAAAAAANAAAAAgAAAAYAAAAOAAAACAAAAAUA
AAAOAAAABQAAAAcAAAAPAAAAAAAAAAgAAAAPAAAACAAAAA4AAAAQAAAACQAAAAIAAAAQAAAA
AgAAAA0AAAAQAAAAAwAAAAkAAAAQAAAADQAAAAMAAAARAAAABQAAAAgAAAARAAAACAAAAAIA
AAASAAAAAwAAAAYAAAASAAAABgAAAAsAAAASAAAACwAAAAMAAAATAAAAAgAAAAkAAAATAAAA
EQAAAAIAAAAUAAAABgAAAAMAAAAUAAAAAwAAAA0AAAAUAAAADQAAAAYAAAAVAAAAEQAAABMA
AAAVAAAAEwAAAAkAAAAVAAAACQAAAAUAAAAWAAAAAAAAAA8AAAAWAAAADwAAAA4AAAAWAAAA
DgAAAAcAAAAWAAAABwAAAAwAAAAWAAAADAAAAAAAAAAXAAAABQAAABEAAAAXAAAAEQAAABUA
AAAXAAAAFQAAAAUAAAAYAAAABwAAAAQAAAAYAAAABAAAAAwAAAAYAAAADAAAAAcAAAAQAAAA
AAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/KgAAAAQAAAC/8lPBIHioQPUd
iUF40NU/IHioQNZLW0LyM/A/IHioQOUliUGXEVHBIHioQNZLW0LVQ1TBqzTQwdZLW0JYFlTB
3A+zwRzUy0FKq+0/3DnQwdZLW0I7bO4/sBzawUy0FUJ7Zu8//NyHwZuZrkG1K1TBihjawZKt
FUJHv+4/5PXPwUi190FtDFTBzNiHwQiMrkElF+8/FBSzwafhy0FQIVTBsPHPwcin90FIAAAA
AAAAAAEAAAACAAAAAwAAAAEAAAAAAAAAAwAAAAAAAAAEAAAAAwAAAAQAAAABAAAABQAAAAQA
AAAAAAAABgAAAAEAAAAEAAAABgAAAAQAAAAHAAAABgAAAAIAAAABAAAABgAAAAcAAAACAAAA
CAAAAAIAAAAHAAAACQAAAAcAAAAEAAAACQAAAAQAAAAFAAAACgAAAAcAAAAJAAAACgAAAAgA
AAAHAAAACwAAAAUAAAAAAAAACwAAAAgAAAAFAAAACwAAAAAAAAACAAAACwAAAAIAAAAIAAAA
DAAAAAUAAAAIAAAADAAAAAgAAAAKAAAADAAAAAoAAAAFAAAADQAAAAkAAAAFAAAADQAAAAUA
AAAKAAAADQAAAAoAAAAJAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAA
AACAP04AAAAEAAAA8nS1wf74kkIixJbDUGSKPpCedEIixJbDJwTEQCa/n0IixJbDxhjOwBf7
okLfeKTDPhxKQetrfELfeKTDjsm9wZCedELfeKTDQq+lwX/+mkLfeKTDi9UZQX38mkLfeKTD
f646QWbzkEIixJbDVEU2wZCedEIixJbDFuuJwcjAn0IixJbDRfBJQZCedELfeKTDX1PEQOPC
n0LfeKTDRteJwYbEn0LfeKTD7K0ZQb/4mkIixJbDKGG1wb38kkLfeKTDEsOlwdL6mkIixJbD
hjI5QVz6kkLfeKTDqEe2wcv1kEIixJbDYmhTvkImokLfeKTD4go5QZ72kkIixJbD08WUQHlN
oEIixJbDnDZ8weROoEIixJbDOjUuwQMnokLfeKTDq9K9wZesfELfeKTDWQKVwBr7okLfeKTD
kAAAAAAAAAABAAAAAgAAAAMAAAAEAAAABQAAAAYAAAADAAAABQAAAAcAAAAEAAAAAwAAAAgA
AAACAAAAAQAAAAkAAAAFAAAAAQAAAAkAAAABAAAAAAAAAAoAAAAAAAAAAgAAAAsAAAAEAAAA
CAAAAAsAAAAIAAAAAQAAAAsAAAABAAAABQAAAAsAAAAFAAAABAAAAAwAAAACAAAABwAAAAwA
AAAHAAAAAwAAAA0AAAADAAAABgAAAA0AAAAGAAAACgAAAA4AAAAHAAAAAgAAAA4AAAACAAAA
CAAAAA8AAAAAAAAABgAAAA8AAAAGAAAABQAAABAAAAAGAAAAAAAAABAAAAAAAAAACgAAABAA
AAAKAAAABgAAABEAAAAHAAAADgAAABEAAAAEAAAABwAAABEAAAAIAAAABAAAABIAAAAAAAAA
DwAAABIAAAAFAAAACQAAABIAAAAJAAAAAAAAABMAAAACAAAADAAAABMAAAAMAAAAAwAAABQA
AAAOAAAACAAAABQAAAAIAAAAEQAAABQAAAARAAAADgAAABUAAAACAAAAEwAAABUAAAAKAAAA
AgAAABYAAAAKAAAAFQAAABYAAAAVAAAAAwAAABYAAAANAAAACgAAABcAAAADAAAADQAAABcA
AAANAAAAFgAAABcAAAAWAAAAAwAAABgAAAAPAAAABQAAABgAAAAFAAAAEgAAABgAAAASAAAA
DwAAABkAAAATAAAAAwAAABkAAAADAAAAFQAAABkAAAAVAAAAEwAAABAAAAAAAAAAAAAAAAAA
AAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9UAAAABAAAAPxGSUGHY3RC1ktbw28TvsGHY3RC
1ktbw6BlNsGHY3RCUbV2w1UWw0Dps59C1ktbw7YSisFJuZ9CUbV2w5u7OEEi75JCUbV2w4Ym
isGJtZ9C1ktbw0BvtsFL7pBCUbV2w8s0dT6HY3RCUbV2w6Jlw0Cot59CUbV2w1+wtcHF7ZJC
1ktbw/qTOEFj65JC1ktbw/u+ssCwFqNC1ktbw7PqpcFd85pCUbV2ww83GUGF7ZpC1ktbw6xe
GUFD8ZpCUbV2w4L+pcGe75pC1ktbw0VfOkHo65BCUbV2w4yctcGC8ZJCUbV2w+SFfMFqR6BC
UbV2w1hIer6RF6JC21xdw7nTLsEHGKJC1ktbwyYIe75IF6JC1ktbw18nlED+RaBCUbV2w9oS
vsGHY3RCmwpcw/ZHSUGHY3RCPQZcwyrlvsGJ03hC1ktbw33qSkF0znhC1ktbw5wAAAAAAAAA
AQAAAAIAAAABAAAAAAAAAAMAAAAEAAAABQAAAAIAAAAGAAAAAQAAAAMAAAAHAAAABAAAAAIA
AAAIAAAAAAAAAAIAAAAIAAAAAgAAAAUAAAAJAAAABQAAAAQAAAAKAAAAAQAAAAYAAAALAAAA
AwAAAAAAAAAMAAAABgAAAAMAAAANAAAABAAAAAcAAAANAAAABgAAAAQAAAAOAAAAAwAAAAsA
AAAOAAAACwAAAAUAAAAOAAAACQAAAAMAAAAPAAAABQAAAAkAAAAPAAAACQAAAA4AAAAPAAAA
DgAAAAUAAAAQAAAACgAAAAYAAAAQAAAABgAAAA0AAAAQAAAADQAAAAoAAAARAAAABQAAAAsA
AAARAAAACAAAAAUAAAASAAAABwAAAAoAAAASAAAACgAAAA0AAAASAAAADQAAAAcAAAATAAAA
BAAAAAYAAAATAAAACQAAAAQAAAAUAAAAAwAAAAkAAAAVAAAABgAAAAwAAAAVAAAADAAAABMA
AAAVAAAAEwAAAAYAAAAWAAAADAAAAAMAAAAWAAAAAwAAABQAAAAWAAAAFAAAAAwAAAAXAAAA
DAAAABQAAAAXAAAAFAAAAAkAAAAXAAAACQAAABMAAAAXAAAAEwAAAAwAAAAYAAAAAgAAAAEA
AAAYAAAABwAAAAIAAAAZAAAAAAAAAAgAAAAZAAAACAAAABEAAAAaAAAABwAAABgAAAAaAAAA
GAAAAAEAAAAaAAAAAQAAAAoAAAAaAAAACgAAAAcAAAAbAAAAAAAAABkAAAAbAAAAGQAAABEA
AAAbAAAACwAAAAAAAAAbAAAAEQAAAAsAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAA
AAAAAAAAAAAAAIA/QgAAAAQAAAA1QLTBDoVAQiLElsNthZRArPwoQiLElsNQZIo+kZ50QiLE
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
tsFL7pBCUbV2w527OEEi75JCUbV2w+OFfMFqR6BCUbV2w9Axab4JHqJC3FmGw3WELsGDH6JC
Zg+Jwx03Z77FHqJCZg+Jw14nlED+RaBCUbV2w469vsF94nhCZg+Jw1MrssCpHaNCfiuHw0jA
vsFx4XhCyiyHw0A0S0FL3HhCwyqHw12MLsHHHqJCdlqGw7QAAAAAAAAAAQAAAAIAAAADAAAA
BAAAAAUAAAAGAAAAAwAAAAUAAAAHAAAABAAAAAMAAAAIAAAAAgAAAAEAAAAJAAAABQAAAAEA
AAAJAAAAAQAAAAAAAAAKAAAAAAAAAAIAAAALAAAACAAAAAEAAAALAAAAAQAAAAUAAAAMAAAA
AgAAAAcAAAAMAAAABwAAAAMAAAANAAAAAwAAAAYAAAANAAAABgAAAAoAAAAOAAAABwAAAAIA
AAAOAAAAAgAAAAgAAAAPAAAABQAAAAkAAAAQAAAAAAAAAAYAAAAQAAAABgAAAAUAAAARAAAA
BwAAAA4AAAARAAAABAAAAAcAAAARAAAACAAAAAQAAAASAAAABgAAAAAAAAASAAAAAAAAAAoA
AAASAAAACgAAAAYAAAATAAAABQAAAAQAAAATAAAABAAAAAsAAAATAAAACwAAAAUAAAAUAAAA
AAAAABAAAAAUAAAACQAAAAAAAAAUAAAADwAAAAkAAAAVAAAADgAAAAgAAAAVAAAACAAAABEA
AAAVAAAAEQAAAA4AAAAWAAAADQAAAAoAAAAWAAAACgAAAAIAAAAXAAAAAgAAAAwAAAAYAAAA
AwAAAA0AAAAYAAAADQAAABYAAAAZAAAADAAAAAMAAAAZAAAAAwAAABcAAAAZAAAAFwAAAAwA
AAAaAAAAAgAAABcAAAAaAAAAFgAAAAIAAAAbAAAAEAAAAAUAAAAbAAAAFAAAABAAAAAbAAAA
BQAAAA8AAAAcAAAAFgAAABoAAAAcAAAAFwAAAAMAAAAcAAAAGgAAABcAAAAcAAAAAwAAABgA
AAAdAAAADwAAABQAAAAdAAAAFAAAABsAAAAdAAAAGwAAAA8AAAAeAAAABAAAAAgAAAAeAAAA
CAAAAAsAAAAeAAAACwAAAAQAAAAfAAAAGAAAABYAAAAfAAAAFgAAABwAAAAfAAAAHAAAABgA
AAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/YAAAAAQAAABflklB
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
CwAAABQAAAAHAAAACwAAABQAAAALAAAAEAAAABQAAAAQAAAABwAAABUAAAALAAAAAQAAABUA
AAABAAAAEwAAABUAAAATAAAACwAAABYAAAAJAAAADQAAABYAAAANAAAAAQAAABcAAAABAAAA
CQAAABcAAAAJAAAAFgAAABcAAAAWAAAAAQAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA
AAAAAAAAAAAAAAAAgD9UAAAABAAAAG4EucG6rltCWeK/w9k94D8CRidCWeK/w/NbEj/QyXhC
WeK/w7/9QEFbuVtCWeK/w/OQiME36ClCWeK/w3XYS0HQyXhCx9bGw9SfPEE8kU9CFpfNw2ZZ
vsHQyXhCBNnGw1JIwECH7ClCFpfNwyF9iMGs7ylCFpfNw6WytsGrkk9CFpfNw1phvsHQyXhC
2rDBw8lRGEHDYjFCWeK/w67KS0HQyXhCBq/Bw2IEtMGNmkBCWeK/w7mlEz/QyXhCpNDIw2ak
pMFmbjFCFpfNw3p5GEEHajFCFpfNw+DZsMDmzSJCFpfNw1QoOsHQyXhCWeK/w324pMEdZzFC
WeK/w0sJOsHQyXhCUtHIw5YescB2xyJCEbLBw2nsNkHTlUBCWeK/ww7ws8GxoEBCFpfNwwYT
N0H6m0BCFpfNw6j4v0AO5SlCWeK/w3BITcEJSSdCWeK/w5wAAAAAAAAAAQAAAAIAAAADAAAA
AgAAAAEAAAAEAAAAAQAAAAAAAAAFAAAAAwAAAAYAAAAFAAAABwAAAAIAAAAIAAAACQAAAAYA
AAAKAAAABgAAAAkAAAAKAAAAAAAAAAcAAAALAAAAAgAAAAcAAAALAAAABwAAAAAAAAAMAAAA
AwAAAAEAAAANAAAAAgAAAAMAAAANAAAAAwAAAAUAAAANAAAABQAAAAIAAAAOAAAABAAAAAAA
AAAOAAAAAAAAAAoAAAAPAAAABwAAAAUAAAAPAAAABQAAAAYAAAAQAAAACgAAAAkAAAAQAAAA
CQAAAAQAAAARAAAACAAAAAYAAAARAAAADAAAAAgAAAASAAAACQAAAAgAAAASAAAACAAAAAEA
AAASAAAABAAAAAkAAAATAAAAAAAAAAIAAAATAAAAAgAAAAsAAAATAAAACwAAAAAAAAAUAAAA
BAAAAA4AAAAUAAAADgAAABAAAAAUAAAAEAAAAAQAAAAVAAAACgAAAAcAAAAVAAAABwAAAA8A
AAAVAAAABgAAAAoAAAAVAAAADwAAAAYAAAAWAAAABAAAABIAAAAWAAAAEgAAAAEAAAAXAAAA
DAAAABEAAAAXAAAABgAAAAMAAAAXAAAAAwAAAAwAAAAYAAAADgAAAAoAAAAYAAAACgAAABAA
AAAYAAAAEAAAAA4AAAAZAAAAEQAAAAYAAAAZAAAABgAAABcAAAAZAAAAFwAAABEAAAAaAAAA
AQAAAAgAAAAaAAAACAAAAAwAAAAaAAAADAAAAAEAAAAbAAAAAQAAAAQAAAAbAAAABAAAABYA
AAAbAAAAFgAAAAEAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/
SAAAAAQAAADq673BCnN0QmUPicO0ur5AHscpQmUPicNflklBCnN0QmUPicPuFjbBCnN0QiLE
lsNAKzxBGONPQiLElsNozIjB1NEpQiLElsPaCKXB+UkxQmUPicNsF7fB6edPQiLElsMKCr9A
nM4pQiLElsMDlYQ+CnN0QiLElsPFTDZBBXhAQmUPicMuZrLAfqgiQmUPicO12hdB8EwxQiLE
lsPD9KTBQlExQiLElsM36L3BCnN0Qt5xi8PRnElBCnN0QrFvi8MEsxdBqkUxQmUPicNdW7TB
L6VAQmUPicM64IjBWsopQmUPicM1QLTBD4VAQiLElsNGdTZB3H9AQiLElsNGWbLAuqkiQo5K
i8PWVnzBgf8oQiLElsNshZRArfwoQiLElsOEAAAAAAAAAAEAAAACAAAAAwAAAAQAAAAFAAAA
AwAAAAAAAAACAAAABgAAAAEAAAAAAAAABwAAAAMAAAAFAAAACAAAAAUAAAAEAAAACQAAAAQA
AAADAAAACQAAAAMAAAACAAAACgAAAAQAAAACAAAACgAAAAIAAAABAAAACwAAAAgAAAABAAAA
CwAAAAEAAAAGAAAADAAAAAgAAAAEAAAADAAAAAEAAAAIAAAADQAAAAUAAAAGAAAADQAAAAcA
AAAFAAAADgAAAAAAAAADAAAADgAAAAMAAAAHAAAADgAAAAcAAAAAAAAADwAAAAIAAAAEAAAA
DwAAAAQAAAAJAAAADwAAAAkAAAACAAAAEAAAAAoAAAABAAAAEAAAAAEAAAAMAAAAEAAAAAwA
AAAKAAAAEQAAAAYAAAAAAAAAEQAAAAAAAAAHAAAAEgAAAAYAAAAFAAAAEgAAAAUAAAALAAAA
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
BAAAAAIAAAAOAAAAAgAAAAcAAAAPAAAACAAAAAMAAAAPAAAADAAAAAgAAAAPAAAAAwAAAAoA
AAAPAAAACgAAAAwAAAAQAAAABQAAAAkAAAAQAAAACgAAAAUAAAARAAAAAAAAAAoAAAARAAAA
CgAAABAAAAARAAAACQAAAAAAAAARAAAAEAAAAAkAAAASAAAABAAAAA4AAAASAAAADgAAAAcA
AAASAAAACwAAAAYAAAASAAAABgAAAAQAAAATAAAAAQAAAA0AAAATAAAADQAAAAYAAAAUAAAA
BwAAAAsAAAAUAAAACwAAABIAAAAUAAAAEgAAAAcAAAAVAAAACwAAAAEAAAAVAAAAAQAAABMA
AAAVAAAABgAAAAsAAAAVAAAAEwAAAAYAAAAWAAAADQAAAAEAAAAXAAAADQAAABYAAAAXAAAA
AQAAAAkAAAAXAAAAFgAAAAEAAAAXAAAACQAAAAUAAAAXAAAABQAAAA0AAAAQAAAAAAAAAAAA
AAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/KgAAAAQAAADjpanB+ZtPQdZLW0PbDKPB
+ZtPQeB4JEP4qR1B+ZtPQdZLW0N9fbFAXBubQdZLW0PWLifBWDHwQeB4JEO6IRpBSn6eQeB4
JENn/A5B+ZtPQeB4JEMGfbfAQNK3QdZLW0Nta5tAftLZQeB4JEMkvqjB7oueQeB4JENN8IfB
3nOaQdZLW0NMnILB8eDZQeB4JEMmkIG/mDDwQeB4JEO3crfAzd7wQWfPJkNIAAAAAAAAAAEA
AAACAAAAAAAAAAIAAAADAAAABAAAAAUAAAABAAAABgAAAAIAAAABAAAABgAAAAEAAAAFAAAA
BgAAAAUAAAACAAAABwAAAAAAAAADAAAACAAAAAUAAAAEAAAACAAAAAMAAAACAAAACAAAAAIA
AAAFAAAACQAAAAEAAAAAAAAACQAAAAQAAAABAAAACgAAAAAAAAAHAAAACgAAAAcAAAAEAAAA
CwAAAAkAAAAAAAAACwAAAAAAAAAKAAAACwAAAAQAAAAJAAAACwAAAAoAAAAEAAAADAAAAAcA
AAADAAAADAAAAAMAAAAIAAAADAAAAAgAAAAEAAAADQAAAAQAAAAHAAAADQAAAAcAAAAMAAAA
DQAAAAwAAAAEAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP2AA
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
lELWS9tCIjrVQGq7oULgeKRChM6PQZx+R0LgeKRCEnS2wL9DpULWS9tCzJTJwUMfjkIWWMVC
QnaQwWi5oULWS9tC51u2wJXnq0IWeM5CpsAjQd2pnELgeKRC4pgjQRymnELWS9tCfsFcQYsc
jkLMYMVCkWKQwR29oULgeKRCOoK7wdkulELgeKRCKJa7wRcrlELWS9tCj1GQwCWKq0LgeKRC
d+3bwE+Kq0LgeKRCQI6QwEaHq0JWeM5CKSrcwHGHq0LQd85CvlFavTQ4pELWS9tCqAAAAAAA
AAABAAAAAgAAAAEAAAAAAAAAAwAAAAQAAAAFAAAAAgAAAAYAAAAAAAAAAgAAAAYAAAACAAAA
BQAAAAcAAAABAAAAAwAAAAgAAAAFAAAABAAAAAkAAAADAAAAAAAAAAoAAAABAAAABwAAAAsA
AAAEAAAAAgAAAAsAAAACAAAAAQAAAAsAAAABAAAACgAAAAwAAAADAAAACQAAAA0AAAAFAAAA
CAAAAA4AAAAGAAAABQAAAA4AAAAAAAAABgAAAA4AAAAJAAAAAAAAAA8AAAAHAAAAAwAAABAA
AAALAAAACgAAABAAAAAHAAAABAAAABEAAAAHAAAADwAAABEAAAAPAAAAEgAAABEAAAAEAAAA
BwAAABMAAAAFAAAADQAAABMAAAANAAAAAwAAABQAAAADAAAADAAAABQAAAATAAAAAwAAABUA
AAATAAAAFAAAABUAAAAUAAAADAAAABUAAAAFAAAAEwAAABUAAAAJAAAADgAAABUAAAAOAAAA
BQAAABUAAAAMAAAACQAAABYAAAAIAAAABAAAABYAAAAEAAAAEQAAABcAAAAEAAAACwAAABcA
AAALAAAAEAAAABcAAAAQAAAABAAAABgAAAAKAAAABwAAABgAAAAHAAAAEAAAABgAAAAQAAAA
CgAAABkAAAADAAAADQAAABkAAAANAAAACAAAABkAAAAIAAAAEgAAABoAAAAIAAAAFgAAABoA
AAAWAAAAEQAAABoAAAASAAAACAAAABsAAAADAAAAGQAAABsAAAAZAAAAEgAAABwAAAARAAAA
EgAAABwAAAASAAAAGgAAABwAAAAaAAAAEQAAAB0AAAADAAAAGwAAAB0AAAAbAAAAEgAAAB0A
AAASAAAADwAAAB0AAAAPAAAAAwAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAgD8qAAAABAAAAD97ucHmdoXBnI/aQ+Y6JUHmdoXBdaTaQ7fDSUHldoXBW+K/Q09z
wMHmdoXBW+K/Q+7vrMHkCDnCW+K/Q063I0HkCDnCW+K/Q6L5G0HkCDnCYozZQyAgqcHkCDnC
wrDZQyy3O0HmdoXBimbaQ2nlq0DkCDnC8dzZQ8aSpsHkCDnCcOzZQ4IHt8HmdoXBW8faQ9ve
FkHkCDnC28jZQ4vQNkHmdoXBBZ/aQ0gAAAAAAAAAAQAAAAIAAAADAAAAAgAAAAQAAAADAAAA
AAAAAAIAAAAFAAAABgAAAAQAAAAFAAAABAAAAAIAAAAFAAAAAgAAAAYAAAAHAAAAAAAAAAMA
AAAHAAAAAwAAAAQAAAAHAAAABAAAAAYAAAAIAAAAAgAAAAEAAAAIAAAABgAAAAIAAAAJAAAA
BwAAAAYAAAAKAAAAAAAAAAcAAAAKAAAABwAAAAkAAAALAAAACQAAAAEAAAALAAAACgAAAAkA
AAALAAAAAQAAAAAAAAALAAAAAAAAAAoAAAAMAAAAAQAAAAkAAAAMAAAACQAAAAYAAAAMAAAA
BgAAAAgAAAANAAAACAAAAAEAAAANAAAAAQAAAAwAAAANAAAADAAAAAgAAAAQAAAAAAAAAAAA
AAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/VAAAAAQAAADeYdnBGA1WQthLW8L2QNnB
GA1WQtZL28KM+X1BGA1WQthLW8KQO8FAcp2fQthLW8Jd/LPAuwejQtZL28LFV35BgUxjQtZL
28K4oqXBD8maQthLW8Iae6XBidCaQtZL28Ik8xZBcc6aQtZL28I/Vn5BGA1WQtZL28KLHzJB
XqySQthLW8KOdlXBvR6hQthLW8K0+MvB8l+EQtZL28LZdYrBkKafQtZL28KC2cFA8aSfQtZL
28KT2mNBCF6EQtZL28LpoxZB+MaaQthLW8LcwtDB5adzQthLW8KhnYrBD5+fQthLW8KO/31B
hj1jQthLW8J/dANAmx2hQthLW8IYYtnBg0NjQthLW8LlPtnBgFJjQtZL28L+Y7PBsa6SQthL
W8Igdi/BIgmiQtZL28IWbpG+bQiiQtZL28Lcm7TAImGhQthLW8KBDLTA+QajQmwq0MKcAAAA
AAAAAAEAAAACAAAAAAAAAAIAAAADAAAABAAAAAUAAAABAAAABgAAAAAAAAADAAAABwAAAAQA
AAABAAAACAAAAAUAAAAEAAAACQAAAAIAAAABAAAACQAAAAEAAAAFAAAACgAAAAMAAAACAAAA
CwAAAAYAAAADAAAADAAAAAYAAAAHAAAADAAAAAcAAAABAAAADQAAAAcAAAAGAAAADQAAAAQA
AAAHAAAADgAAAAMAAAAIAAAADgAAAAgAAAAEAAAADwAAAAUAAAAIAAAAEAAAAAoAAAAPAAAA
EAAAAA8AAAAIAAAAEAAAAAgAAAADAAAAEAAAAAMAAAAKAAAAEQAAAAAAAAAGAAAAEgAAAAYA
AAALAAAAEgAAAAsAAAANAAAAEgAAAA0AAAAGAAAAEwAAAAoAAAACAAAAEwAAAA8AAAAKAAAA
EwAAAAUAAAAPAAAAEwAAAAIAAAAJAAAAEwAAAAkAAAAFAAAAFAAAAAMAAAAOAAAAFAAAAAsA
AAADAAAAFQAAAAAAAAARAAAAFQAAABEAAAAMAAAAFQAAAAEAAAAAAAAAFgAAAAwAAAABAAAA
FgAAAAEAAAAVAAAAFgAAABUAAAAMAAAAFwAAAAYAAAAMAAAAFwAAAAwAAAARAAAAFwAAABEA
AAAGAAAAGAAAAAQAAAANAAAAGAAAAA0AAAALAAAAGQAAAA4AAAAEAAAAGQAAABQAAAAOAAAA
GgAAAAsAAAAUAAAAGwAAABoAAAAUAAAAGwAAAAsAAAAaAAAAGwAAABQAAAAZAAAAGwAAABkA
AAAEAAAAGwAAAAQAAAAYAAAAGwAAABgAAAALAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAA
AAAAAAAAAAAAAAAAAACAP2AAAAAEAAAAduzXwWkFVkIAAAAA32HZwWkFVkLYS1vCdpN5QWkF
VkIAAAAAnJ3AQPOVn0IAAAAAjXZVwb0eoULYS1vCj/99QYU9Y0LYS1vCXMqlwZfBmkIAAAAA
56MWQfjGmkLYS1vCuKKlwQ/JmkLYS1vCi/l9QWkFVkLYS1vCFjm1wMD4okIAAAAAStAxQeOk
kkIAAAAAugGPQWkFVkJ0IwDCOovpwWkFVkLaSwDC6xXmwaKEXEJPJ9rBacWKwY+Xn0IAAAAA
plQWQYC/mkIAAAAAkTvBQHKdn0LYS1vC3MLQweWnc0LYS1vCoZ2KwRCfn0LYS1vCuJ60wA0A
o0KRllXCaFubvr8AokKfoVjCn4uzwTCnkkIAAAAAGmLZwYRDY0LYS1vCih8yQV6skkLYS1vC
/WOzwbGukkLYS1vCfnQDQJwdoULYS1vCTQilvlL5oUIAAAAAvQwwwR36oUIAAAAAXoqLQTl+
XEIE/tnBccIvwX0BokJhpljC3Zu0wCJhoULYS1vCtAAAAAAAAAABAAAAAgAAAAAAAAACAAAA
AwAAAAQAAAAFAAAAAQAAAAYAAAAAAAAAAwAAAAcAAAAFAAAABAAAAAgAAAAEAAAAAQAAAAkA
AAACAAAAAQAAAAkAAAABAAAABQAAAAoAAAAGAAAAAwAAAAsAAAADAAAAAgAAAAwAAAACAAAA
CQAAAAwAAAAJAAAABQAAAA0AAAABAAAAAAAAAA0AAAAAAAAADgAAAA8AAAAGAAAACgAAAA8A
AAAIAAAABgAAABAAAAAHAAAAAwAAABAAAAADAAAACwAAABAAAAALAAAABwAAABEAAAADAAAA
BwAAABEAAAAHAAAABAAAABIAAAAIAAAAAQAAABMAAAAEAAAACAAAABMAAAAIAAAADwAAABMA
AAAPAAAABAAAABQAAAAKAAAAFQAAABYAAAAAAAAABgAAABYAAAAOAAAAAAAAABYAAAAGAAAA
CAAAABcAAAABAAAADQAAABcAAAANAAAAEgAAABcAAAASAAAAAQAAABgAAAAHAAAACwAAABgA
AAAFAAAABwAAABgAAAAMAAAABQAAABkAAAAOAAAAFgAAABkAAAAWAAAACAAAABkAAAAIAAAA
EgAAABkAAAASAAAADQAAABkAAAANAAAADgAAABoAAAARAAAABAAAABsAAAARAAAAGgAAABsA
AAAaAAAAFQAAABsAAAAKAAAAAwAAABsAAAAVAAAACgAAABsAAAADAAAAEQAAABwAAAAKAAAA
FAAAABwAAAAEAAAADwAAABwAAAAPAAAACgAAAB0AAAAMAAAAGAAAAB0AAAAYAAAACwAAAB0A
AAALAAAAAgAAAB0AAAACAAAADAAAAB4AAAAEAAAAHAAAAB4AAAAcAAAAFAAAAB8AAAAUAAAA
FQAAAB8AAAAeAAAAFAAAAB8AAAAaAAAABAAAAB8AAAAEAAAAHgAAAB8AAAAVAAAAGgAAABAA
AAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8hAAAABAAAAAf/fUF0FcxB
FY6DwkFWfkEYDVZC1kvbwov5fUEYDVZC2Utbwt5h2cEYDVZC2Utbwq1x2cF0FcxB2UtbwvZA
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
AAAAAAAAAAAAAAAAgD8tAAAABAAAAPQircHkCDnCpjK/Q3gqtMAykczCpjK/Q8keJEHkCDnC
pjK/Q7DpKEHkCDnC3nikQ9BJr8HkCDnC3nikQ3ZatMDXnbLC3nikQxI13UBRqrzCpjK/Q757
/UBoa6rCqpSpQxKOkcEOsrzCpjK/Q5aimcFNjqrCHrSpQyskmcGiT6LC3nikQyBi+0A5XqLC
3nikQ+ZEtMADk7rC8oqpQ4w3MEHkCDnCeaiqQ+fxsMHkCDnCOkKnQ04AAAAAAAAAAQAAAAIA
AAADAAAAAAAAAAIAAAAEAAAAAAAAAAMAAAAEAAAAAwAAAAUAAAAGAAAAAgAAAAEAAAAGAAAA
AQAAAAcAAAAIAAAAAQAAAAAAAAAIAAAACQAAAAEAAAAKAAAABAAAAAUAAAAKAAAABQAAAAkA
AAAKAAAACQAAAAQAAAALAAAABQAAAAMAAAALAAAAAwAAAAcAAAALAAAABwAAAAUAAAAMAAAA
AQAAAAkAAAAMAAAACQAAAAUAAAAMAAAABQAAAAcAAAAMAAAABwAAAAEAAAANAAAAAgAAAAYA
AAANAAAABgAAAAcAAAANAAAAAwAAAAIAAAANAAAABwAAAAMAAAAOAAAACQAAAAgAAAAOAAAA
CAAAAAAAAAAOAAAAAAAAAAQAAAAOAAAABAAAAAkAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAA
AAAAAAAAAAAAAAAAAAAAAIA/KgAAAAQAAAC5B4lBYCwXQtdLW0K6kHtBEGg7QddLW0LX9djB
nbU5QddLW0LjQ4pBYCwXQtdL20INDubBYCwXQtdL20LqquTBYCwXQtdLW0LUXdjBQ1A4QddL
20JuJXpB1gA6QddL20LsDOw/8D2oQCoi2kLwoNU/8D2oQNdLW0Khd1TB8D2oQFAe2kKqC1HB
8D2oQNdLW0Jjd1TBOF3RQNdL20LlDuw/nNbQQNdL20JIAAAAAAAAAAEAAAACAAAAAQAAAAAA
AAADAAAABAAAAAMAAAAAAAAABQAAAAAAAAACAAAABQAAAAIAAAAEAAAABQAAAAQAAAAAAAAA
BgAAAAMAAAAEAAAABgAAAAQAAAACAAAABwAAAAMAAAAGAAAABwAAAAEAAAADAAAABwAAAAgA
AAABAAAACQAAAAIAAAABAAAACQAAAAEAAAAIAAAACgAAAAYAAAACAAAACgAAAAkAAAAIAAAA
CwAAAAIAAAAJAAAACwAAAAkAAAAKAAAACwAAAAoAAAACAAAADAAAAAYAAAAKAAAADAAAAAoA
AAAIAAAADAAAAAcAAAAGAAAADQAAAAgAAAAHAAAADQAAAAcAAAAMAAAADQAAAAwAAAAIAAAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPyoAAAAEAAAAkwCJQWAs
F0IAAAAAyZOAQfHcO0EAAAAA95DbwdgrOkEAAAAAuQeJQWAsF0LWS1tC6qrkwWAsF0LWS1tC
eNDVPyB4qEDWS1tCMHfkwWAsF0IAAAAA1/XYwZ21OUHWS1tCuZB7QRBoO0HWS1tCyv/wP4ac
wkAAAAAAwPJTwSB4qED1HYlBlxFRwSB4qEDWS1tCR9lTwUWtwkAAAAAA8jPwPyB4qEDlJYlB
SAAAAAAAAAABAAAAAgAAAAEAAAAAAAAAAwAAAAQAAAAFAAAAAwAAAAQAAAADAAAAAAAAAAYA
AAAAAAAAAgAAAAYAAAACAAAABAAAAAYAAAAEAAAAAAAAAAcAAAAFAAAABAAAAAcAAAAEAAAA
AgAAAAgAAAABAAAAAwAAAAgAAAADAAAABQAAAAkAAAACAAAAAQAAAAoAAAAHAAAAAgAAAAsA
AAAFAAAABwAAAAsAAAAHAAAACgAAAAsAAAAKAAAABQAAAAwAAAACAAAACQAAAAwAAAAJAAAA
CgAAAAwAAAAKAAAAAgAAAA0AAAAFAAAACgAAAA0AAAAKAAAACQAAAA0AAAAJAAAAAQAAAA0A
AAABAAAACAAAAA0AAAAIAAAABQAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAgD8tAAAABAAAAH/qrMEMz0VB1ktbQxQctcBgMkzC1ktbQ/epHUH4m09B1ktbQ2b8
DkH4m09B4HgkQxn8tcDWO4TB4HgkQ9kMo8H4m09B4HgkQ9/e2kBhBCzC1ktbQ5PgtMCFuWLC
HT1PQ17swkAAPEPCbiVPQ/JJkcFSsyzC1ktbQ8pLi8GCeEPC6VtPQ+wc4EBglwTB4HgkQzBF
k8FpdwLB4HgkQ9+lqcH4m09B1ktbQ08HI0GFo0dB1ktbQ04AAAAAAAAAAQAAAAIAAAADAAAA
BAAAAAUAAAADAAAABQAAAAIAAAAGAAAAAQAAAAcAAAAGAAAABwAAAAgAAAAGAAAACAAAAAMA
AAAGAAAAAgAAAAEAAAAJAAAACgAAAAcAAAAJAAAABwAAAAEAAAAJAAAAAAAAAAUAAAAJAAAA
BQAAAAoAAAAJAAAAAQAAAAAAAAALAAAACAAAAAcAAAALAAAABwAAAAQAAAALAAAABAAAAAMA
AAALAAAAAwAAAAgAAAAMAAAABAAAAAcAAAAMAAAABwAAAAoAAAAMAAAABQAAAAQAAAAMAAAA
CgAAAAUAAAANAAAAAAAAAAIAAAANAAAAAgAAAAUAAAANAAAABQAAAAAAAAAOAAAAAwAAAAIA
AAAOAAAAAgAAAAYAAAAOAAAABgAAAAMAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAA
AAAAAAAAAAAAAIA/PAAAAAQAAADoquTBYCwXQtVLW0Iwd+TBYCwXQgAAAAC5B4lBYCwXQtVL
W0Kv3DdBgaiMQtVLW0I8wbbBgaiMQgAAAABDs45BadVHQgAAAADY5LbBgaiMQtVLW0LmMzhB
gaiMQgAAAACTAIlBYCwXQgAAAACVW/JB5MJ0Qkx590FuU/JB0L90QrbpKEJmNOvB/yNHQtVL
W0KYS+rBbmBHQgAAAAAacI9BjZtHQtVLW0IrVvJBL0eHQoDqKEJ7e/BB4VqMQj7iA0JAdvBB
4VmMQsjkIEJcXvJBtUiHQuR690EsP+9BgaiMQrzkIEJXSO9BgaiMQjLiA0JsAAAAAAAAAAEA
AAACAAAAAAAAAAIAAAADAAAABAAAAAUAAAABAAAABgAAAAAAAAADAAAABgAAAAMAAAAEAAAA
BwAAAAQAAAADAAAABwAAAAUAAAAEAAAACAAAAAIAAAABAAAACAAAAAEAAAAFAAAACQAAAAIA
AAAIAAAACQAAAAgAAAAFAAAACgAAAAIAAAAJAAAACwAAAAAAAAAGAAAACwAAAAYAAAAEAAAA
CwAAAAEAAAAAAAAADAAAAAQAAAABAAAADAAAAAEAAAALAAAADAAAAAsAAAAEAAAADQAAAAMA
AAACAAAADQAAAAIAAAAKAAAADgAAAA0AAAAKAAAADgAAAAMAAAANAAAADgAAAA8AAAAQAAAA
DgAAAAoAAAAJAAAAEQAAAA8AAAAOAAAAEQAAAA4AAAAJAAAAEQAAAAkAAAAFAAAAEQAAAAUA
AAAHAAAAEQAAAAcAAAAPAAAAEgAAAAMAAAAOAAAAEgAAAA4AAAAQAAAAEgAAAAcAAAADAAAA
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]]></BinaryString>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Content name="TextureID"><url>rbxassetid://451000866</url></Content>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>0.306342155</X>
					<Y>1.13802314</Y>
					<Z>4.43486404</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBXC03726D1A09C4EEF9F47F9F9BBF6D566">
			<Properties>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">SETTINGS</string>
				<string name="ScriptGuid"></string>
				<ProtectedString name="Source"><![CDATA[local Settings = { --These are the settings, change them however you like
	
	
	gunType = { --[[These are the 5 gun types you can have. Set whichever ones you want to true. (NOTE: Semi and Auto can't both be
		true, and Burst and Auto can't both be true)]]
		Semi = true; --Set this true if you want the gun to be semi-automatic. (Pistols, Snipers, etc)
		Auto = false; --Set this true if you want the gun to be fully automatic. (Assault Rifles, Submachine guns, machine guns, etc)
		Burst = false; --Set this true if you want the gun to be burst fire. (Battle rifles, assault rifles, etc)
		Shot = false; --Set this true if you want the gun to be a shotgun. (NOTE: Shot and auto can both be true)
		Explosive = false; --Set this true if you want the projectiles to be explosive. (Rocket launchers, grenade launchers, etc)
	};
	
	selectFire = true; --This is whether or not select fire is enabled
	selectFireSettings = {
		Animation = true; --This is whether or not there will be an animation for when you switch fire modes
		GUI = true; --This is whether or not a gui appears showing the fire being selected
		Modes = { --This the list of modes you can switch between
			Safety = true; --This mode doesn't allow any form of firing
			Semi = false;--This mode allows semi-automatic firing
			Burst = false; --This mode allows burst fire. The burst will be based on the burstSettings below
			Auto = true; --This mode allows fully automatic fire
		};
		animSpeed = 0.5; --This is how long it takes to switch fire if GUI or Animation is true. If neither are true, then switching will be instant
	};
	
	
	burstSettings = {
		fireRateBurst = true; --[[If this is true, then the burst time and wait will be adjusted so the bullet firing speed is the fire rate. If this
			is false, then the burst time and burst wait will be the values below]]
		Amount = 3; --This is how many bullets will be fired in one burst (if Burst is true)
		Time = 0.2; --This is how long it takes for a burst to complete
		Wait = 0.1; --This is how much time you have to wait before you can fire another burst
	};
	
	
	shotAmount = 5; --This is how many bullets will be fired in one shot (if Shot is true)
	
	
	explosionSettings = {
		Radius = 20; --This is the radius of the explosion when the bullet hits a target. (If Explosive is true)
		Pressure = 5e5; --This is the pressure of the explosion when the bullet hits the target
		Type = Enum.ExplosionType.NoCraters; --This is the type of explosion
		--[[
		(0 or "NoCraters" or Enum.ExplosionType.NoCraters) means that the explosion will not damage terrain
		(1 or "Craters" or Enum.ExplosionType.Craters) means that the explosion will leave craters in terrain
		(2 or "CratersAndDebris" or Enum.ExplosionType.CratersAndDebris) means that the explosion will leave craters and debris in terrain
		--]]
		soundId = "rbxassetid://138499093"; --This is what the sound of the explosion will be
		soundPitch = 1; --This is what the pitch of the explosion sound will be
		soundVolume = 1; --This is what the volume of the explosion sound will be
		rayCastExplosions = false; --[[This is whether or not explosions will have raycasting. If this is true, humanoids behind walls
		won't be damaged. If this is false, any humanoid within the radius will be damaged. (NOTE: RangeBasedDamage has to be true in
		order for explosions to have raycasting)]]
		rangeBasedDamage = true; --[[This is whether or not will depend on how far the object is from the center of the explosion. If this
		is true, the farther a humanoid is from the blast center, the less damage it'll take. If this is false, any object within
		the explosion's radius will have its joints broken]]
	};
	
	
	playerArms = true; --This is whether or not the fake arms will look like the Player's arms
	fakeArmSettings = {
		Transparency = 0; --This is the transparency of the fake arms
		armSize = Vector3.new(0.6, 2, 0.6); --This is the size of the fake player arms if playerArms is true
		characterMeshes = false; --This is whether or not the fake player arms will have the arm meshes if playerArms is true
		realBodyColor = true; --This is whether or not the color of the fake arm will be the color of the player's real arms
		Color = BrickColor.new("Pastel brown"); --This is what the color of the fake arms will be if realBodyColor is false
	};
	
	
	unAimedC1 = { --This table contains the CFrames of welds when the gun is not aimed
		leftArm = CFrame.new(-0.7, 1.6, -0.8) * CFrame.Angles(math.rad(-10), 0, math.rad(-30));
		rightArm = CFrame.new(0.4, 0.25, -0.3) * CFrame.Angles(0, 0, math.rad(25));
		Grip = CFrame.Angles(0, math.rad(25), 0);
	};
	aimedC1 = { --This table contains the CFrames of welds when the gun is aimed
		leftArm = CFrame.new(-0.1, 1, -0.3) * CFrame.Angles(math.rad(-10), 0, 0) * CFrame.Angles(0, 0, math.rad(-40));
		rightArm = CFrame.new(0.5, 0.3, 0.1) * CFrame.Angles(0, 0, math.rad(45));
	};
	runningC1 = { --This table contains the CFrames of welds when you're running
		leftArm = CFrame.new(-0.65, 0.85, -1) * CFrame.Angles(math.rad(1), math.rad(-8.5), math.rad(16));
		rightArm = CFrame.new(0.16, 1, -0.14) * CFrame.Angles(math.rad(15), math.rad(2), math.rad(50));
		Grip = CFrame.Angles(0, math.rad(-5), 0);
	};
	
	
	equipAnimation = true; --This is whether or not an equipping animation will play when you equip the gun
	equipSettings = {
		Time = 0.25; --This is how long it takes for the equip animation to play
		leftArmC1 = CFrame.new(0.2, 1.2, 0) * CFrame.Angles(math.rad(105), math.rad(-30), math.rad(90)); --This is the left arm C1 when you equip the gun
		rightArmC1 = CFrame.new(-0.5, 0.75, 0) * CFrame.Angles(math.rad(45), 0, math.rad(75)); --This is the right arm C1 when you equip the gun
		GripC1 = CFrame.new(); --This is the C1 of the grip when you equip the gun
	};
	
	
	stopAnimsOnFall = true; --This is whether or not the movement animation will stop when you're falling
	fallAnimation = true; --This is whether or not there will be animation for falling and landing
	fallSettings = {
		maxDist = 35; --This is the cut off fall distance for the landing animation. If you fall any farther it'll be treated as if you fell this distance
		landMultiplier = 1; --This is how far the arms go down and rotate when you land. The larger the number the bigger the effect of the animation
		fallMultiplier = 1; --This is how far the arms go up and rotate when you fall. The larger the number the bigger the effect of the animation
		aimEffect = 0.25; --[[This is how many times of an effect the falling and landing animation has when you're aimed. The smaller the number the lesser
		the effect]]
	};
	
	
	gunMomentum = true; --This is whether or not there will be a gun swaying animation for when you move your mouse around
	momentumSettings = {
		maxInput = 18; --This is the maximum mouse delta that will be used as input for the sway
		Speed = 20; --This is the speed of the gun momentum
		Damper = 0.5; --[[This is the dampening effect of the gun momentum. NOTE: This number must be between 0 and 1, 0 being forever swaying and 1 being
		instant dampening]]
		Amplitude = { --These are the amplitudes of the gun momentum
			unAimed = 5;
			Aimed = 1;
		}
	};
	
	
	cockingAnim = false; --This is whether or not a cocking animation will play between every shot (for shotguns and bolt action guns)
	movementAnims = true; --This is whether or not the player will have movement animations
	
	
	canADS = true; --This is whether or not the gun can ADS
	aimSettings = {
		Anim = true; --This is whether or not there is an animation for aiming down the sights
		Speed = 0.3; --This is how long the gun will take to fully aim down the sights
		FOV = 37; --This is the FOV that the Camera will have when the gun is fully aimed down
		holdToADS = true; --This is whether or not you have to hold the right mouse or the ADS key to ADS
		headTilt = math.rad(25); --This is what angle the head tilts at when you ADS
	};
	
	
	sensitivitySettings = {
		Default = 1; --This is what the sensitivity of the mouse will be when the gun is not aimed. 1 is the default
		Aim = 0.3; --[[This is what the sensitivity of the mouse will be when the gun is aimed. The smaller the MaxZoom,
		the smaller the sensitivity should be (i.e. Scoped guns should have a sensitivity of around 0.2 or less]]
		
		scrollToChange = true; --This is whether or not scrolling the mouse changes the aim sensitivity
		Min = 0.05; --This is the lowest the sensitivity can be
		Max = 1; --This is the highest the sensitivity can be
		Increment = 0.05; --This is what the increment for the sensitivity is when you scroll
	};
	
	
	guiScope = false; --This is whether or not your Scope will be a gui instead of a normal sight
	scopeSettings = {
		Frequency = { --This is the how fast the camera sway is. The larger the number the faster the camera moves
			Idling = 0.7; --This is the frequency when you're idling
			Walking = 2; --This is the frequency when you're walking
		};
		Amplitude = { --This is the how wide the camera sway is. The larger the number the wider the sway
			Idling = 0.75; --This is the amplitude when you're idling
			Walking = 0.75; --This is the amplitude when you're walking
		};
		steadyTime = 8; --This is how long you can hold your breath to steady the scope
		breathTime = 5; --This is how long it takes to fully retake your breath
		camSwayOnBreath = 2.5; --This is what the cam sway multiplier will be when you start your retake your breath
		unSteadyOnFire = true; --This is whether or not the camera will become unsteady when you fire the gun
	};
	
	
	roundsPerMin = 895; --This is how many bullets per minute the gun will fire
	
	
	bulletSettings = {
		instantHit = true; --[[This is whether or not the bullet will hit a target instantly. If it is false, the bullet will travel at a
			specific speed till it hits a target]]
		Range = 870; --This is how far the bullet will travel in studs before it is no longer effective
		Velocity = 1000; --This is how fast the bullet will travel in studs per second
		Acceleration = 196.2; --This is the bullet's acceleration downward (196.2 is normal roblox gravity)
		Color = BrickColor.new("Bright red"); --This is the color of the bullet
		Transparency = 0; --This is the transparency of the bullet
		Size = Vector3.new(0.1, 0.1, 5); --This is how big the bullet will look
	};
	
	
	damageSettings = {
		--[[The start and end damages are basically a representation of this: http://goo.gl/SiWaTj, which is a basically a graph showing the starting damage
		value for the gun at a distance percent from 0 to 100 and the ending damage value for the gun at a distance percent from 0 to 100. Before the bullet
		hits the starting distance percent, the damage is the starting damage. Once it goes past the starting distance percent, it steadily drops til it hits
		the ending damage. After the ending damage percent, it'll stay that damage.]]
		Start = {
			Damage = 22; --The starting damage
			Dist = 0.08; --[[A value between 0 and 1 which represents the distance percent. So if the bullet range is 1000 studs and this value is 0.5, then
			the damage will be the starting damage until the bullet travels 0.5*1000 studs or 500 studs]]
		};
		End = {
			Damage = 14; --The ending damage
			Dist = 0.5; --A value between 0 and 1 which represents the distance percent for the ending damage
		};
		Multipliers = { --[[These are the damage multipliers. There's a spread of +0.1. That means that if the multiplier is 1, the actual
			multiplier will range from 1 - 1.1]]
			Chest = 1; --This is what the damage will be multiplied by if the bullet hits the chest
			Head = 1.4; --This is what the damage will be multiplied by if the bullet hits the head or a hat
			Limbs = 1; --This is what the damage will be multiplied by if the bullet hits a limb (Arms or legs)
		};
	};
	
	
	AllowFriendlyFire = false; --This is whether or not you can damage teammates
	CanDamageNPCs = true; --This is whether or not you can damage NPC's (Zombies, fake players, anything with a humanoid)
	
	
	CanKnife = true; --This is whether or not you can knife
	AutoKnife = false; --This is whether or not the gun will automatically knife if an enemy is within a specific distance
	AutoKnifeDist = 4; --This is how many studs away an enemy has to be for the gun to auto knife
	KnifeMeshId = "http://www.roblox.com/asset/?id=121944778"; --This is the Mesh of the knife
	KnifeTextureId = "http://www.roblox.com/asset/?id=121944805"; --This is the Texture of the knife
	KnifeCooldown = 0.5; --This is how long you have to wait before you can knife again
	KnifeAnim = 1; --This is the type of knife animation
	--[[
		Type 1: An animation that swings a knife from the left of the body to the right of the body
		Type 2: An animation that stabs the knife forward from the center of the body
	--]]
	
	
	Throwables = true; --This is whether or not you have grenades
	TrajectoryAssist = true; --This is whether or not the script will show you the flight path of the grenade before you throw it
	DetonationTime = 2; --[[This is how long the grenade will wait to detonate (If DetonateOnHit is false, this is how long the
		grenade will wait after the pin is pulled. If true, this is how long the grenade will wait after it hits something]]
	TimerStartOnHit = false; --This is whether or not the timer will start when the grenade hits something
	GrenadeSize = Vector3.new(0.8, 0.8, 0.8); --This is the size of the grenade (Doesn't apply to throwing knives)
	
	
	LethalGrenadeColor = BrickColor.new("Bright green"); --This is the color of the lethal grenade
	GrenadeBlastRadius = 20; --This is the blast radius of the explosion (Doesn't apply to non-explosive grenades)
	GrenadeBlastPressure = 6e5; --This is what the blast pressure of the explosion (Doesn't apply to non-explosive grenades)
	GrenadeExplosionType = Enum.ExplosionType.NoCraters; --This is the type of explosion (Doesn't apply to non-explosive grenades)
	--[[
	(0 or "NoCraters" or Enum.ExplosionType.NoCraters) means that the explosion will not damage terrain
	(1 or "Craters" or Enum.ExplosionType.Craters) means that the explosion will leave craters in terrain
	(2 or "CratersAndDebris" or Enum.ExplosionType.CratersAndDebris) means that the explosion will leave craters and debris in terrain
	--]]
	LethalAnimationTime = 1.5; --This is how long the throwing animation for the lethal will take
	LethalGrenadeDamage = 150; --This is max damage that the grenade will do
	LethalGrenadeThrowVelocity = 200; --This is the speed at which the lethal grenade is thrown
	GrenadeRayCastExplosions = true; --[[This is whether or not grenade explosions will have raycasting. If this is true, humanoids
		behind walls won't be damaged. If this is false, any humanoid within the radius will be damaged. (NOTE: GrenadeRangeBasedDamage
		has to be true in order for explosions to have raycasting)]]
	GrenadeRangeBasedDamage = true; --[[This is whether or not will depend on how far the object is from the center of the explosion.
		If this is true, the farther a humanoid is from the blast center, the less damage it'll take. If this is false, any object
		within the explosion's radius will have its joints broken]]
	LethalGrenadeType = 4; --This is the lethal grenade type
	--[[
		Type 1: Frag grenade [An explosive grenade]
		Type 2: Sticky [An explosive grenade that sticks to a surface]
		Type 3: Throwing Knife [A throwable knife]
		Type 4: Molotov [A grenade that explodes in flames on impact]
	--]]
	
	TacticalGrenadeColor = BrickColor.new("Brick yellow"); --This is the color of the lethal grenade
	TacticalAnimationTime = 1.5; --This how long the throwing animation for the tactical will take
	TacticalGrenadeThrowVelocity = 200; --This is the speed at which the tactical grenade is thrown
	GrenadeEffectRadius = 70; --[[This is the radius of the effect of the grenade. If the Grenade is a smoke, this is the radius of
		the smoke]]
	GrenadeEffectTime = 10; --[[This is the how long the grenade effect will last. If the grenade is a smoke, this is how long the
		smoke will linger]]
	TacticalGrenadeType = 1; --This is the tactical grenade type
	--[[
		Type 1: Smoke grenade [A grenade that creates a cloud of smoke]
		Type 2: Flashbang [A grenade that temporarily blinds and deafens players]
	--]]
	
	
	GrenadeTrail = true; --This is whether or not the grenade will have a trail
	GrenadeTrailColor = BrickColor.new("Black"); --This is the color of the grenade trail
	GrenadeTrailTransparency = 0.6; --This is the transparency of the trail
	GrenadeTrailThickness = 0.3; --This is the thickness of the trail
	GrenadeTrailVisibleTime = 0.2; --This is how long the trail will be visible for
	GrenadeTrailDisappearTime = 0.2; --This is how long it will take for the trail to disappear
	
	
	bulletTrail = false; --This is whether or not there will be a trail behind the bullet
	trailSettings = {
		Color = BrickColor.new("White"); --This is the color of the bullet trail
		Transparency = 0.6; --This is the transparency of the trail
		Thickness = 0.2; --This is the thickness of the trail
		visibleTime = 0; --This is how long the trail will be visible for
		disappearTime = 0.5; --This is how long it will take for the trail to disappear
	};
	
	
	bulletHoles = true; --This is whether or not bullet holes will appear where you shot
	holeSettings = {
		Texture = "http://www.roblox.com/asset/?id=64291961"; --This is the texture of the bullet hole
		Size = 0.5; --This is how big the bullet hole will be in studs
		visibleTime = 3; --This is how long the bullet hole will be visible for
		disappearTime = 1; --This is how long it will take for the bullet hole to disappear
	};
	
	
	bulletSparks = true; --This is whether or not sparks will fly when a bullet hits a surface
	customSparks = false; --[[This is whether or not the script will use a user-created sparks. In order for the gun kit to use a user-created sparks,
	it has to be a particle emitter in the ServerStorage and it has to be called "bulletSpark"]]
	sparkSettings = { --These settings only apply if customSparks is false
		Color = {
			Start = Color3.new(1, 158 / 255, 24 / 255); --This is the start color of the sparks
			End = Color3.new(212 / 255, 242 / 255, 8 / 255); --This is the end color of the sparks
		};
		Size = 0.25; --This is the size of the sparks
		Texture = "http://www.roblox.com/asset/?id=311395391"; --This is the texture of the sparks
		Lifetime = 0.2; --This is the lifetime of each spark in seconds +-0.05 seconds
		Rate = 75; --This is the number of sparks that fly
		Speed = 25; --This is the speed at which the sparks fly +-5 studs/sec
		Spread = 45; --This is the angle in degrees at which the sparks spread out (0 means single line, 180 means all around)
		Materials = { --This is the list of the materials which cause bullet sparks. You can add or remove materials from this list
			Enum.Material.Plastic;
			Enum.Material.Slate;
			Enum.Material.Concrete;
			Enum.Material.CorrodedMetal;
			Enum.Material.DiamondPlate;
			Enum.Material.Foil;
			Enum.Material.Marble;
			Enum.Material.Granite;
			Enum.Material.Brick;
			Enum.Material.Pebble;
			Enum.Material.SmoothPlastic;
			Enum.Material.Metal;
			Enum.Material.Cobblestone;
		};
	};
	
	
	bulletSmoke = true; --This is whether or not smoke particles will fly when a bullet hits a surface
	smokeSettings = {
		objColor = true; --This is whether or not the smoke color will be the color of the object the bullet hit
		Color = Color3.new(0.5, 0.5, 0.5); --This is what the color of the smoke will be if objColor is false
		Size = {
			Start = 0.25; --This is what the starting size of the smoke will be
			End = 0.5; --This is what the ending size of the smoke will be
		};
		Texture = "http://www.roblox.com/asset/?id=244514423"; --This is what the texture of the smoke will be
		startTransparency = 0; --This is what the transparency of the particle starts at. It gradually goes to 1
		Lifetime = 0.2; --This is the lifetime of each smoke particle +-0.05 seconds
		Rate = 100; --This is the number of smoke particles that fly
		Speed = 35; --This is the speed at which the smoke particles fly +-5 studs/sec
		Spread = 15; --This is the angle in degrees at which the smoke particles spread out (0 means single line, 180 means all around)
	};
	
	
	bloodEffect = true; --This is whether or not blood particles will appear from the bullet exit position when a humanoid is shot
	bloodSettings = {
		Color = Color3.new(1, 0, 0); --This is what the color of the blood will be
		Size = 0.1; --This is what the size of the blood will be with an +-0.1
		Texture = "http://www.roblox.com/asset/?id=3419963"; --This is what the texture of the blood will be
		startTransparency = 0.125; --This is what the starting transparency of the blood will be +-0.125
		Lifetime = 0.1; --This is what the lifetime of each blood particle +-0.05 seconds
		Rate = 200; --This is the number of blood particles that appear
		Speed = 50; --This is the speed at which the blood particles fly
		Spread = 15; --This is the angle in degrees at which the blood particles spread out (0 means single line, 180 means all around)
	};
	
	
	bulletShockwave = true; --This is whether or not a shockwave will appear where you shot. (A sphere that appears when the bullet hits)
	shockwaveSettings = {
		Radius = 0.3; --This is the radius of the shockwave. (If the gun type is explosion, this radius will be the blast radius)
		Color = BrickColor.new("Light stone grey"); --This is the color of the shockwave
		Duration = 0.2; --This is how long the shockwave will take to disappear
	};
	
	
	penetrationSettings = {
		Dist = 0; --This is the maximum amount of studs a bullet can penetrate into a wall (that isn't ignored)
		transparencyThreshold = 1; --This is what the transparency of a wall has to be greater than or equal to in order to be ignored
		ignoreNonCanCollide = true; --This is whether or not the script should ignore non-cancollide parts
		ignoreCustom = {}; --This is a table of objects that will be ignored by the script. The object and it's descendants will be ignored
	};
	
	
	recoilSettings = {
		firstShotMultiplier = 2.4; --This is what the recoil multiplier for the first shot will be. The rest of the shots will be normal recoil
		aimedMultiplier = 0.5; --When you're aimed, this is what the recoil will be multiplied by
		camMultiplier = 2; --This is what the gun up recoil will be multiplied by to get you the cam recoil
		springSpeed = 15; --This is the what the speed of the gun's recoil spring will be. The lower it is the slower the gun sways around
		springDamper = 0.5; --This is a number between 0 and 1 that determines how quickly the spring will be dampened.
		Recoil = {
			Side = { --This is the side to side gun and camera recoil
				Left = -0.17;
				Right = 0.28;
			};
			Up = { --This is the up and down gun and camera recoil
				Min = 0.26;
				Max = 0.28;
			};
			Back = { --[[This is the kick back gun recoil. NOTE: The numbers below are the amount the gun moves back, so the gun will move back
				a value/2 amount of studs. So if the min is 0.25 and the max is 0.3, the gun will move back anywhere between 0.025 and 0.03 studs]]
				Min = 0.3;
				Max = 0.35;
			};
			Tilt = { --[[This is tilt camera recoil. NOTE: The numbers below are the amount of deca-degrees the camera tilts, so if the left is -1
				and the right is 1 then the gun will tilt anywhere between -10 degress and 10 degrees]]
				Left = -0.5;
				Right = 0.5;
			};
		}
	};
	
	
	spreadSettings = {
		Increase = 0.1; --This is what is added to the spread of the bullet every time you fire
		Decrease = 15; --This is what the spread of the bullet decreases by per second
		
		--[[This spread values are how many degrees offset the bullets will travel from the center, so a spread of 1 would mean that the bullet's
		max spread in any direction is 1 degree from the center. The idling category is when you're not moving, and the moving category is when
		you're moving]]
		Aimed = {
			Stand = {
				Idling = 0.2;
				Moving = 0.4;
			};
			Crouch = {
				Idling = 0.15;
				Moving = 0.3;
			};
			Prone = {
				Idling = 0.1;
				Moving = 0.3;
			};
		};
		unAimed = {
			Stand = {
				Idling = 2;
				Moving = 2.5;
			};
			Crouch = {
				Idling = 1.5;
				Moving = 2;
			};
			Prone = {
				Idling = 1;
				Moving = 2;
			};
		};
	};
	
	
	reloadSettings = {
		Anim = true; --This is whether or not there is an animation for reloading
		Times = {
			Loaded = 2.2; --This is how long it takes to reload the gun if a bullet is already chambered
			Empty = 2.2; --This is how long it takes to reload the gun if a bullet isn't chambered
		};
		autoReload = true; --This is whether or not the gun will reload automatically when the ammo reaches 0
		magIsBullet = false; --This is whether or not the mag is the bullet itself. This is useful for guns with only 1 bullet per clip
		reloadWhileRunning = true; --This is whether or not you can reload while running
	};
	
	
	sprintTime = 15; --This is the maximum time you can sprint
	staminaCoolTime = 4; --This is how long it takes for your stamina to fully recharge
	canFireWhileRunning = false; --This is whether or not you can shoot while sprinting
	
	
	dolphinDive = true; --This is whether or not you can dolphin dive (Run and crouch at the same time to dive)
	diveSettings = {
		rechargeTime = 1; --This is how long you have to wait till you can dive or run again after you've dived
		Force = 350; --This is the multiplier for the dolphin dive force. The higher it is the farther you'll dive
		Angle = math.rad(30); --This is the angle in radians from the ground that you dive at
	};
	
	
	canChangeStance = true; --This is whether or not you can change stance. That means whether or not you can crouch or go prone
	stanceSettings = {
		Anim = true; --This is whether or not there is an animation for changing stance
		Speed = 0.3; --This is how quickly you change stance
		Stances = {
			Crouch = true; --This is whether or not you can crouch
			Prone = true; --This is whether or not you can go prone
		};
		standOnDeselect = true; --This is whether or not you stand up when you deselect the tool
		crawlAnimation = true; --This is whether or not you crawl while moving when you're prone
	};
	
	
	walkSpeeds = {
		Base = 16; --This is the base walkspeed
		Sprinting = 30; --This is the walkspeed when you're sprinting
		Aimed = 10; --[[This is the base walkspeed when the gun is aimed down. If you crouch or go prone, the speed will change
		based on the Aimed walkspeed to Base walkspeed ratio]]
		Crouched = 7; --This is the walkspeed when you're crouched
		Prone = 4; --This is the walkspeed when you're prone
	};
	
	
	--NOTE: For extra keys, go here: http://wiki.roblox.com/index.php?title=Taking_keyboard_input
	Keys = {
		lowerStance = "c"; --This is the key you press to lower your stance (Stand > Crouch > Prone)
		raiseStance = "x"; --This is the key you press to raise your stance (Prone > Crouch > Stand)
		selectFire = "e"; --This is the key you press to switch fire modes
		Reload = "r"; --This is the key you press to reload
		Sprint = string.char(48); --This is the key you press to sprint
		Knife = "f"; --This is the key you press to knife
		lethalGrenade = "g"; --This is the key you press to throw the lethal grenade
		tacticalGrenade = "t"; --This is the key you press to throw the tactical grenade
		ADS = "q"; --This is the key you press to ADS. If you want ADS to just be right mouse, then make this key ""
		scopeSteady = string.char(48); --This is the key you press to steady the scope
	};
	
	
}

return Settings]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXAAB42B6DF4414A3D9562F8204D41BF13">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">1009</int>
				<CoordinateFrame name="CFrame">
					<X>-12.5579224</X>
					<Y>0.206454992</Y>
					<Z>-11.983242</Z>
					<R00>-3.26636873e-005</R00>
					<R01>8.63172318e-005</R01>
					<R02>-1</R02>
					<R10>4.31604603e-005</R10>
					<R11>1</R11>
					<R12>8.63158202e-005</R12>
					<R20>1</R20>
					<R21>-4.31576409e-005</R21>
					<R22>-3.26674126e-005</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">272</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">1</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.200000003</X>
					<Y>0.200000003</Y>
					<Z>0.200000003</Z>
				</Vector3>
			</Properties>
			<Item class="BlockMesh" referent="RBXC5876FBF759D4AF09F469FEC48A1663F">
				<Properties>
					<float name="Bevel">0</float>
					<float name="Bevel Roundness">0</float>
					<float name="Bulge">0</float>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.895302653</X>
						<Y>0.895303011</Y>
						<Z>0.895303011</Z>
					</Vector3>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX33380F4B87DA40D3A0CDCA63DAB1B548">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">FireSound</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<bool name="Playing">false</bool>
					<Content name="SoundId"><url>rbxassetid://134318669</url></Content>
					<double name="TimePosition">0</double>
					<float name="Volume">0.800000012</float>
					<float name="xmlRead_MaxDistance_3">10000</float>
					<float name="xmlRead_MinDistance_3">10</float>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX69006A419A7B41EA8BC0D7D52F9D3D72">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">ReloadSound</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<bool name="Playing">false</bool>
					<Content name="SoundId"><url>rbxassetid://132456124</url></Content>
					<double name="TimePosition">0</double>
					<float name="Volume">0.5</float>
					<float name="xmlRead_MaxDistance_3">10000</float>
					<float name="xmlRead_MinDistance_3">10</float>
				</Properties>
			</Item>
		</Item>
		<Item class="Part" referent="RBXB67E409E77754ACFBD3A564152723303">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">1009</int>
				<CoordinateFrame name="CFrame">
					<X>-13.4236298</X>
					<Y>1.06083596</Y>
					<Z>-11.9732275</Z>
					<R00>-3.26636873e-005</R00>
					<R01>8.63172318e-005</R01>
					<R02>-1</R02>
					<R10>4.31604603e-005</R10>
					<R11>1</R11>
					<R12>8.63158202e-005</R12>
					<R20>1</R20>
					<R21>-4.31576409e-005</R21>
					<R22>-3.26674126e-005</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">272</token>
				<string name="Name">AimPart</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">1</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.200000003</X>
					<Y>0.200000003</Y>
					<Z>0.200000003</Z>
				</Vector3>
			</Properties>
			<Item class="BlockMesh" referent="RBXA9AF19075774448F8A1FA13ECCA044C1">
				<Properties>
					<float name="Bevel">0</float>
					<float name="Bevel Roundness">0</float>
					<float name="Bulge">0</float>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.895302653</X>
						<Y>0.895303011</Y>
						<Z>0.895303011</Z>
					</Vector3>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="MeshPart" referent="RBX24742589D2A84F61A330898BB3A41A4C">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-12.1399984</X>
					<Y>0.579035997</Y>
					<Z>-11.9449997</Z>
					<R00>0</R00>
					<R01>0</R01>
					<R02>-1</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>1</R20>
					<R21>0</R21>
					<R22>0</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<token name="CollisionFidelity">0</token>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<Vector3 name="InitialSize">
					<X>60.5921478</X>
					<Y>225.093521</Y>
					<Z>877.184937</Z>
				</Vector3>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">256</token>
				<Content name="MeshID"><url>rbxassetid://451934411</url></Content>
				<string name="Name">BoltBack</string>
				<BinaryString name="PhysicsData"><![CDATA[Q1NHUEhTAwAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9RAAAA
BAAAAFq6CsFAeh/APbZCwtqsCsFAeh/ADvBnwmjdCsFZ8vPB5IYjwmwDKsBAeh/Au7NCwv6W
KsD8RtzBJoQXwjZnKsBtJdrB6uQ3wnnNKcBAeh/AkO1nwvrBCsFEbZDBKilSwj7fCsFhRdzB
14YXwquPKsAE9PPBNYQjwu0hKsDtbpDBeiZSwlzTCsHEI9rBpuc3wtKZKsCYF+/B0TgbwuLf
CsHkFe/BeDsbwoKBKsC5wO/Bph4swt7ZCsEJv+/BViEswlUKKsCwTWLB3khZwhy8CsFoSmLB
hktZwmDcCsHkTMrByi4awoaLKsCNTsrBGSwawus8KsAUya3BGzJIwrnICsFsx63ByzRIwjqv
CsHAO4zApNJlwgC/CsHI9IDBpeVVwgQWKsBx9oDB6uJVwlYvKsDcIZ/BAGFNwkPFCsEwIJ/B
pmNNwpYAAAAAAAAAAQAAAAIAAAADAAAAAQAAAAAAAAADAAAABAAAAAUAAAAGAAAAAQAAAAMA
AAAGAAAAAwAAAAUAAAAHAAAAAgAAAAEAAAAIAAAAAAAAAAIAAAAJAAAABQAAAAQAAAAKAAAA
BgAAAAUAAAALAAAAAgAAAAcAAAAMAAAAAgAAAAkAAAAMAAAACQAAAAQAAAAMAAAABAAAAAgA
AAANAAAACAAAAAIAAAANAAAAAgAAAAwAAAANAAAADAAAAAgAAAAOAAAACwAAAAUAAAAOAAAA
BQAAAAkAAAAOAAAACQAAAAIAAAAPAAAAAgAAAAsAAAAPAAAACwAAAA4AAAAPAAAADgAAAAIA
AAAQAAAABgAAAAoAAAARAAAABwAAAAEAAAASAAAAAAAAAAgAAAASAAAACAAAAAQAAAASAAAA
AwAAAAAAAAATAAAABAAAAAMAAAATAAAAAwAAABIAAAATAAAAEgAAAAQAAAAUAAAABQAAAAsA
AAAUAAAACgAAAAUAAAAVAAAACwAAAAcAAAAVAAAAFAAAAAsAAAAWAAAAEAAAABEAAAAWAAAA
EQAAAAEAAAAWAAAAAQAAAAYAAAAWAAAABgAAABAAAAAXAAAABwAAABEAAAAXAAAAEQAAABAA
AAAXAAAACgAAAAcAAAAYAAAAEAAAAAoAAAAYAAAACgAAABcAAAAYAAAAFwAAABAAAAAZAAAA
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
AAAIAAAADwAAAAcAAAAFAAAADwAAAAUAAAANAAAAEAAAAAsAAAAFAAAAEAAAABEAAAALAAAA
EgAAAAwAAAALAAAAEgAAAAkAAAAMAAAAEgAAABEAAAAJAAAAEwAAAAUAAAAHAAAAEwAAABAA
AAAFAAAAEwAAAAkAAAARAAAAEwAAAAcAAAAJAAAAFAAAABUAAAAPAAAAFAAAAA8AAAANAAAA
FAAAAAQAAAAVAAAAFAAAAA0AAAAEAAAAFgAAAAoAAAAGAAAAFgAAAAYAAAAOAAAAFgAAAA4A
AAAKAAAAFwAAAAYAAAALAAAAFwAAAAsAAAAMAAAAFwAAAAwAAAAGAAAAGAAAAAsAAAARAAAA
GAAAABEAAAASAAAAGAAAABIAAAALAAAAGQAAABUAAAAEAAAAGQAAAAEAAAADAAAAGgAAAAoA
AAAOAAAAGgAAAAAAAAACAAAAGgAAAAIAAAAKAAAAGwAAABoAAAAOAAAAHAAAABEAAAAQAAAA
HAAAABAAAAATAAAAHAAAABMAAAARAAAAHQAAAAQAAAABAAAAHQAAAAEAAAAZAAAAHQAAABkA
AAAEAAAAHgAAAAEAAAAEAAAAHgAAAAQAAAAKAAAAHgAAAAIAAAABAAAAHgAAAAoAAAACAAAA
HwAAAAAAAAAaAAAAHwAAABoAAAAbAAAAHwAAABsAAAAOAAAAHwAAABUAAAAZAAAAHwAAABkA
AAADAAAAHwAAAAcAAAAPAAAAHwAAAA8AAAAVAAAAHwAAAA4AAAAIAAAAHwAAAAgAAAAHAAAA
HwAAAAMAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPx4A
AAAEAAAA2QyjwfibT0HfeCRDZ/wOQfibT0HfeCRDCJpBQfibT0FlDwlDGvy1wNY7hMHfeCRD
7hzgQGCXBMHfeCRDMUWTwWl3AsHfeCRDItqywTec10BlDwlDKGK2wBk05L5lDwlDzfS8wfib
T0FlDwlDzMktQdmC2EBlDwlDMAAAAAAAAAABAAAAAgAAAAAAAAADAAAAAQAAAAQAAAACAAAA
AQAAAAQAAAABAAAAAwAAAAUAAAAGAAAAAwAAAAUAAAADAAAAAAAAAAcAAAADAAAABgAAAAcA
AAAGAAAAAgAAAAgAAAAGAAAABQAAAAgAAAAFAAAAAAAAAAgAAAACAAAABgAAAAgAAAAAAAAA
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
n0LfeKTDRteJwYbEn0LfeKTD7K0ZQb/4mkIixJbDKGG1wb38kkLfeKTDEsOlwdL6mkIixJbD
hjI5QVz6kkLfeKTDqEe2wcv1kEIixJbDYmhTvkImokLfeKTD4go5QZ72kkIixJbD08WUQHlN
oEIixJbDnDZ8weROoEIixJbDOjUuwQMnokLfeKTDq9K9wZesfELfeKTDWQKVwBr7okLfeKTD
kAAAAAAAAAABAAAAAgAAAAMAAAAEAAAABQAAAAYAAAADAAAABQAAAAcAAAAEAAAAAwAAAAgA
AAACAAAAAQAAAAkAAAAFAAAAAQAAAAkAAAABAAAAAAAAAAoAAAAAAAAAAgAAAAsAAAAEAAAA
CAAAAAsAAAAIAAAAAQAAAAsAAAABAAAABQAAAAsAAAAFAAAABAAAAAwAAAACAAAABwAAAAwA
AAAHAAAAAwAAAA0AAAADAAAABgAAAA0AAAAGAAAACgAAAA4AAAAHAAAAAgAAAA4AAAACAAAA
CAAAAA8AAAAAAAAABgAAAA8AAAAGAAAABQAAABAAAAAGAAAAAAAAABAAAAAAAAAACgAAABAA
AAAKAAAABgAAABEAAAAHAAAADgAAABEAAAAEAAAABwAAABEAAAAIAAAABAAAABIAAAAAAAAA
DwAAABIAAAAFAAAACQAAABIAAAAJAAAAAAAAABMAAAACAAAADAAAABMAAAAMAAAAAwAAABQA
AAAOAAAACAAAABQAAAAIAAAAEQAAABQAAAARAAAADgAAABUAAAACAAAAEwAAABUAAAAKAAAA
AgAAABYAAAAKAAAAFQAAABYAAAAVAAAAAwAAABYAAAANAAAACgAAABcAAAADAAAADQAAABcA
AAANAAAAFgAAABcAAAAWAAAAAwAAABgAAAAPAAAABQAAABgAAAAFAAAAEgAAABgAAAASAAAA
DwAAABkAAAATAAAAAwAAABkAAAADAAAAFQAAABkAAAAVAAAAEwAAABAAAAAAAAAAAAAAAAAA
AAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9UAAAABAAAAPxGSUGHY3RC1ktbw28TvsGHY3RC
1ktbw6BlNsGHY3RCUbV2w1UWw0Dps59C1ktbw7YSisFJuZ9CUbV2w5u7OEEi75JCUbV2w4Ym
isGJtZ9C1ktbw0BvtsFL7pBCUbV2w8s0dT6HY3RCUbV2w6Jlw0Cot59CUbV2w1+wtcHF7ZJC
1ktbw/qTOEFj65JC1ktbw/u+ssCwFqNC1ktbw7PqpcFd85pCUbV2ww83GUGF7ZpC1ktbw6xe
GUFD8ZpCUbV2w4L+pcGe75pC1ktbw0VfOkHo65BCUbV2w4yctcGC8ZJCUbV2w+SFfMFqR6BC
UbV2w1hIer6RF6JC21xdw7nTLsEHGKJC1ktbwyYIe75IF6JC1ktbw18nlED+RaBCUbV2w9oS
vsGHY3RCmwpcw/ZHSUGHY3RCPQZcwyrlvsGJ03hC1ktbw33qSkF0znhC1ktbw5wAAAAAAAAA
AQAAAAIAAAABAAAAAAAAAAMAAAAEAAAABQAAAAIAAAAGAAAAAQAAAAMAAAAHAAAABAAAAAIA
AAAIAAAAAAAAAAIAAAAIAAAAAgAAAAUAAAAJAAAABQAAAAQAAAAKAAAAAQAAAAYAAAALAAAA
AwAAAAAAAAAMAAAABgAAAAMAAAANAAAABAAAAAcAAAANAAAABgAAAAQAAAAOAAAAAwAAAAsA
AAAOAAAACwAAAAUAAAAOAAAACQAAAAMAAAAPAAAABQAAAAkAAAAPAAAACQAAAA4AAAAPAAAA
DgAAAAUAAAAQAAAACgAAAAYAAAAQAAAABgAAAA0AAAAQAAAADQAAAAoAAAARAAAABQAAAAsA
AAARAAAACAAAAAUAAAASAAAABwAAAAoAAAASAAAACgAAAA0AAAASAAAADQAAAAcAAAATAAAA
BAAAAAYAAAATAAAACQAAAAQAAAAUAAAAAwAAAAkAAAAVAAAABgAAAAwAAAAVAAAADAAAABMA
AAAVAAAAEwAAAAYAAAAWAAAADAAAAAMAAAAWAAAAAwAAABQAAAAWAAAAFAAAAAwAAAAXAAAA
DAAAABQAAAAXAAAAFAAAAAkAAAAXAAAACQAAABMAAAAXAAAAEwAAAAwAAAAYAAAAAgAAAAEA
AAAYAAAABwAAAAIAAAAZAAAAAAAAAAgAAAAZAAAACAAAABEAAAAaAAAABwAAABgAAAAaAAAA
GAAAAAEAAAAaAAAAAQAAAAoAAAAaAAAACgAAAAcAAAAbAAAAAAAAABkAAAAbAAAAGQAAABEA
AAAbAAAACwAAAAAAAAAbAAAAEQAAAAsAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAA
AAAAAAAAAAAAAIA/QgAAAAQAAAA1QLTBDoVAQiLElsNthZRArPwoQiLElsNQZIo+kZ50QiLE
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
tsFL7pBCUbV2w527OEEi75JCUbV2w+OFfMFqR6BCUbV2w9Axab4JHqJC3FmGw3WELsGDH6JC
Zg+Jwx03Z77FHqJCZg+Jw14nlED+RaBCUbV2w469vsF94nhCZg+Jw1MrssCpHaNCfiuHw0jA
vsFx4XhCyiyHw0A0S0FL3HhCwyqHw12MLsHHHqJCdlqGw7QAAAAAAAAAAQAAAAIAAAADAAAA
BAAAAAUAAAAGAAAAAwAAAAUAAAAHAAAABAAAAAMAAAAIAAAAAgAAAAEAAAAJAAAABQAAAAEA
AAAJAAAAAQAAAAAAAAAKAAAAAAAAAAIAAAALAAAACAAAAAEAAAALAAAAAQAAAAUAAAAMAAAA
AgAAAAcAAAAMAAAABwAAAAMAAAANAAAAAwAAAAYAAAANAAAABgAAAAoAAAAOAAAABwAAAAIA
AAAOAAAAAgAAAAgAAAAPAAAABQAAAAkAAAAQAAAAAAAAAAYAAAAQAAAABgAAAAUAAAARAAAA
BwAAAA4AAAARAAAABAAAAAcAAAARAAAACAAAAAQAAAASAAAABgAAAAAAAAASAAAAAAAAAAoA
AAASAAAACgAAAAYAAAATAAAABQAAAAQAAAATAAAABAAAAAsAAAATAAAACwAAAAUAAAAUAAAA
AAAAABAAAAAUAAAACQAAAAAAAAAUAAAADwAAAAkAAAAVAAAADgAAAAgAAAAVAAAACAAAABEA
AAAVAAAAEQAAAA4AAAAWAAAADQAAAAoAAAAWAAAACgAAAAIAAAAXAAAAAgAAAAwAAAAYAAAA
AwAAAA0AAAAYAAAADQAAABYAAAAZAAAADAAAAAMAAAAZAAAAAwAAABcAAAAZAAAAFwAAAAwA
AAAaAAAAAgAAABcAAAAaAAAAFgAAAAIAAAAbAAAAEAAAAAUAAAAbAAAAFAAAABAAAAAbAAAA
BQAAAA8AAAAcAAAAFgAAABoAAAAcAAAAFwAAAAMAAAAcAAAAGgAAABcAAAAcAAAAAwAAABgA
AAAdAAAADwAAABQAAAAdAAAAFAAAABsAAAAdAAAAGwAAAA8AAAAeAAAABAAAAAgAAAAeAAAA
CAAAAAsAAAAeAAAACwAAAAQAAAAfAAAAGAAAABYAAAAfAAAAFgAAABwAAAAfAAAAHAAAABgA
AAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/YAAAAAQAAABflklB
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
CwAAABQAAAAHAAAACwAAABQAAAALAAAAEAAAABQAAAAQAAAABwAAABUAAAALAAAAAQAAABUA
AAABAAAAEwAAABUAAAATAAAACwAAABYAAAAJAAAADQAAABYAAAANAAAAAQAAABcAAAABAAAA
CQAAABcAAAAJAAAAFgAAABcAAAAWAAAAAQAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA
AAAAAAAAAAAAAAAAgD9UAAAABAAAAG4EucG6rltCWeK/w9k94D8CRidCWeK/w/NbEj/QyXhC
WeK/w7/9QEFbuVtCWeK/w/OQiME36ClCWeK/w3XYS0HQyXhCx9bGw9SfPEE8kU9CFpfNw2ZZ
vsHQyXhCBNnGw1JIwECH7ClCFpfNwyF9iMGs7ylCFpfNw6WytsGrkk9CFpfNw1phvsHQyXhC
2rDBw8lRGEHDYjFCWeK/w67KS0HQyXhCBq/Bw2IEtMGNmkBCWeK/w7mlEz/QyXhCpNDIw2ak
pMFmbjFCFpfNw3p5GEEHajFCFpfNw+DZsMDmzSJCFpfNw1QoOsHQyXhCWeK/w324pMEdZzFC
WeK/w0sJOsHQyXhCUtHIw5YescB2xyJCEbLBw2nsNkHTlUBCWeK/ww7ws8GxoEBCFpfNwwYT
N0H6m0BCFpfNw6j4v0AO5SlCWeK/w3BITcEJSSdCWeK/w5wAAAAAAAAAAQAAAAIAAAADAAAA
AgAAAAEAAAAEAAAAAQAAAAAAAAAFAAAAAwAAAAYAAAAFAAAABwAAAAIAAAAIAAAACQAAAAYA
AAAKAAAABgAAAAkAAAAKAAAAAAAAAAcAAAALAAAAAgAAAAcAAAALAAAABwAAAAAAAAAMAAAA
AwAAAAEAAAANAAAAAgAAAAMAAAANAAAAAwAAAAUAAAANAAAABQAAAAIAAAAOAAAABAAAAAAA
AAAOAAAAAAAAAAoAAAAPAAAABwAAAAUAAAAPAAAABQAAAAYAAAAQAAAACgAAAAkAAAAQAAAA
CQAAAAQAAAARAAAACAAAAAYAAAARAAAADAAAAAgAAAASAAAACQAAAAgAAAASAAAACAAAAAEA
AAASAAAABAAAAAkAAAATAAAAAAAAAAIAAAATAAAAAgAAAAsAAAATAAAACwAAAAAAAAAUAAAA
BAAAAA4AAAAUAAAADgAAABAAAAAUAAAAEAAAAAQAAAAVAAAACgAAAAcAAAAVAAAABwAAAA8A
AAAVAAAABgAAAAoAAAAVAAAADwAAAAYAAAAWAAAABAAAABIAAAAWAAAAEgAAAAEAAAAXAAAA
DAAAABEAAAAXAAAABgAAAAMAAAAXAAAAAwAAAAwAAAAYAAAADgAAAAoAAAAYAAAACgAAABAA
AAAYAAAAEAAAAA4AAAAZAAAAEQAAAAYAAAAZAAAABgAAABcAAAAZAAAAFwAAABEAAAAaAAAA
AQAAAAgAAAAaAAAACAAAAAwAAAAaAAAADAAAAAEAAAAbAAAAAQAAAAQAAAAbAAAABAAAABYA
AAAbAAAAFgAAAAEAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/
SAAAAAQAAADq673BCnN0QmUPicO0ur5AHscpQmUPicNflklBCnN0QmUPicPuFjbBCnN0QiLE
lsNAKzxBGONPQiLElsNozIjB1NEpQiLElsPaCKXB+UkxQmUPicNsF7fB6edPQiLElsMKCr9A
nM4pQiLElsMDlYQ+CnN0QiLElsPFTDZBBXhAQmUPicMuZrLAfqgiQmUPicO12hdB8EwxQiLE
lsPD9KTBQlExQiLElsM36L3BCnN0Qt5xi8PRnElBCnN0QrFvi8MEsxdBqkUxQmUPicNdW7TB
L6VAQmUPicM64IjBWsopQmUPicM1QLTBD4VAQiLElsNGdTZB3H9AQiLElsNGWbLAuqkiQo5K
i8PWVnzBgf8oQiLElsNshZRArfwoQiLElsOEAAAAAAAAAAEAAAACAAAAAwAAAAQAAAAFAAAA
AwAAAAAAAAACAAAABgAAAAEAAAAAAAAABwAAAAMAAAAFAAAACAAAAAUAAAAEAAAACQAAAAQA
AAADAAAACQAAAAMAAAACAAAACgAAAAQAAAACAAAACgAAAAIAAAABAAAACwAAAAgAAAABAAAA
CwAAAAEAAAAGAAAADAAAAAgAAAAEAAAADAAAAAEAAAAIAAAADQAAAAUAAAAGAAAADQAAAAcA
AAAFAAAADgAAAAAAAAADAAAADgAAAAMAAAAHAAAADgAAAAcAAAAAAAAADwAAAAIAAAAEAAAA
DwAAAAQAAAAJAAAADwAAAAkAAAACAAAAEAAAAAoAAAABAAAAEAAAAAEAAAAMAAAAEAAAAAwA
AAAKAAAAEQAAAAYAAAAAAAAAEQAAAAAAAAAHAAAAEgAAAAYAAAAFAAAAEgAAAAUAAAALAAAA
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
BAAAAAIAAAAOAAAAAgAAAAcAAAAPAAAACAAAAAMAAAAPAAAADAAAAAgAAAAPAAAAAwAAAAoA
AAAPAAAACgAAAAwAAAAQAAAABQAAAAkAAAAQAAAACgAAAAUAAAARAAAAAAAAAAoAAAARAAAA
CgAAABAAAAARAAAACQAAAAAAAAARAAAAEAAAAAkAAAASAAAABAAAAA4AAAASAAAADgAAAAcA
AAASAAAACwAAAAYAAAASAAAABgAAAAQAAAATAAAAAQAAAA0AAAATAAAADQAAAAYAAAAUAAAA
BwAAAAsAAAAUAAAACwAAABIAAAAUAAAAEgAAAAcAAAAVAAAACwAAAAEAAAAVAAAAAQAAABMA
AAAVAAAABgAAAAsAAAAVAAAAEwAAAAYAAAAWAAAADQAAAAEAAAAXAAAADQAAABYAAAAXAAAA
AQAAAAkAAAAXAAAAFgAAAAEAAAAXAAAACQAAAAUAAAAXAAAABQAAAA0AAAAQAAAAAAAAAAAA
AAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/KgAAAAQAAADjpanB+ZtPQdZLW0PbDKPB
+ZtPQeB4JEP4qR1B+ZtPQdZLW0N9fbFAXBubQdZLW0PWLifBWDHwQeB4JEO6IRpBSn6eQeB4
JENn/A5B+ZtPQeB4JEMGfbfAQNK3QdZLW0Nta5tAftLZQeB4JEMkvqjB7oueQeB4JENN8IfB
3nOaQdZLW0NMnILB8eDZQeB4JEMmkIG/mDDwQeB4JEO3crfAzd7wQWfPJkNIAAAAAAAAAAEA
AAACAAAAAAAAAAIAAAADAAAABAAAAAUAAAABAAAABgAAAAIAAAABAAAABgAAAAEAAAAFAAAA
BgAAAAUAAAACAAAABwAAAAAAAAADAAAACAAAAAUAAAAEAAAACAAAAAMAAAACAAAACAAAAAIA
AAAFAAAACQAAAAEAAAAAAAAACQAAAAQAAAABAAAACgAAAAAAAAAHAAAACgAAAAcAAAAEAAAA
CwAAAAkAAAAAAAAACwAAAAAAAAAKAAAACwAAAAQAAAAJAAAACwAAAAoAAAAEAAAADAAAAAcA
AAADAAAADAAAAAMAAAAIAAAADAAAAAgAAAAEAAAADQAAAAQAAAAHAAAADQAAAAcAAAAMAAAA
DQAAAAwAAAAEAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP2AA
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
lELWS9tCIjrVQGq7oULgeKRChM6PQZx+R0LgeKRCEnS2wL9DpULWS9tCzJTJwUMfjkIWWMVC
QnaQwWi5oULWS9tC51u2wJXnq0IWeM5CpsAjQd2pnELgeKRC4pgjQRymnELWS9tCfsFcQYsc
jkLMYMVCkWKQwR29oULgeKRCOoK7wdkulELgeKRCKJa7wRcrlELWS9tCj1GQwCWKq0LgeKRC
d+3bwE+Kq0LgeKRCQI6QwEaHq0JWeM5CKSrcwHGHq0LQd85CvlFavTQ4pELWS9tCqAAAAAAA
AAABAAAAAgAAAAEAAAAAAAAAAwAAAAQAAAAFAAAAAgAAAAYAAAAAAAAAAgAAAAYAAAACAAAA
BQAAAAcAAAABAAAAAwAAAAgAAAAFAAAABAAAAAkAAAADAAAAAAAAAAoAAAABAAAABwAAAAsA
AAAEAAAAAgAAAAsAAAACAAAAAQAAAAsAAAABAAAACgAAAAwAAAADAAAACQAAAA0AAAAFAAAA
CAAAAA4AAAAGAAAABQAAAA4AAAAAAAAABgAAAA4AAAAJAAAAAAAAAA8AAAAHAAAAAwAAABAA
AAALAAAACgAAABAAAAAHAAAABAAAABEAAAAHAAAADwAAABEAAAAPAAAAEgAAABEAAAAEAAAA
BwAAABMAAAAFAAAADQAAABMAAAANAAAAAwAAABQAAAADAAAADAAAABQAAAATAAAAAwAAABUA
AAATAAAAFAAAABUAAAAUAAAADAAAABUAAAAFAAAAEwAAABUAAAAJAAAADgAAABUAAAAOAAAA
BQAAABUAAAAMAAAACQAAABYAAAAIAAAABAAAABYAAAAEAAAAEQAAABcAAAAEAAAACwAAABcA
AAALAAAAEAAAABcAAAAQAAAABAAAABgAAAAKAAAABwAAABgAAAAHAAAAEAAAABgAAAAQAAAA
CgAAABkAAAADAAAADQAAABkAAAANAAAACAAAABkAAAAIAAAAEgAAABoAAAAIAAAAFgAAABoA
AAAWAAAAEQAAABoAAAASAAAACAAAABsAAAADAAAAGQAAABsAAAAZAAAAEgAAABwAAAARAAAA
EgAAABwAAAASAAAAGgAAABwAAAAaAAAAEQAAAB0AAAADAAAAGwAAAB0AAAAbAAAAEgAAAB0A
AAASAAAADwAAAB0AAAAPAAAAAwAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAgD8qAAAABAAAAD97ucHmdoXBnI/aQ+Y6JUHmdoXBdaTaQ7fDSUHldoXBW+K/Q09z
wMHmdoXBW+K/Q+7vrMHkCDnCW+K/Q063I0HkCDnCW+K/Q6L5G0HkCDnCYozZQyAgqcHkCDnC
wrDZQyy3O0HmdoXBimbaQ2nlq0DkCDnC8dzZQ8aSpsHkCDnCcOzZQ4IHt8HmdoXBW8faQ9ve
FkHkCDnC28jZQ4vQNkHmdoXBBZ/aQ0gAAAAAAAAAAQAAAAIAAAADAAAAAgAAAAQAAAADAAAA
AAAAAAIAAAAFAAAABgAAAAQAAAAFAAAABAAAAAIAAAAFAAAAAgAAAAYAAAAHAAAAAAAAAAMA
AAAHAAAAAwAAAAQAAAAHAAAABAAAAAYAAAAIAAAAAgAAAAEAAAAIAAAABgAAAAIAAAAJAAAA
BwAAAAYAAAAKAAAAAAAAAAcAAAAKAAAABwAAAAkAAAALAAAACQAAAAEAAAALAAAACgAAAAkA
AAALAAAAAQAAAAAAAAALAAAAAAAAAAoAAAAMAAAAAQAAAAkAAAAMAAAACQAAAAYAAAAMAAAA
BgAAAAgAAAANAAAACAAAAAEAAAANAAAAAQAAAAwAAAANAAAADAAAAAgAAAAQAAAAAAAAAAAA
AAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/VAAAAAQAAADeYdnBGA1WQthLW8L2QNnB
GA1WQtZL28KM+X1BGA1WQthLW8KQO8FAcp2fQthLW8Jd/LPAuwejQtZL28LFV35BgUxjQtZL
28K4oqXBD8maQthLW8Iae6XBidCaQtZL28Ik8xZBcc6aQtZL28I/Vn5BGA1WQtZL28KLHzJB
XqySQthLW8KOdlXBvR6hQthLW8K0+MvB8l+EQtZL28LZdYrBkKafQtZL28KC2cFA8aSfQtZL
28KT2mNBCF6EQtZL28LpoxZB+MaaQthLW8LcwtDB5adzQthLW8KhnYrBD5+fQthLW8KO/31B
hj1jQthLW8J/dANAmx2hQthLW8IYYtnBg0NjQthLW8LlPtnBgFJjQtZL28L+Y7PBsa6SQthL
W8Igdi/BIgmiQtZL28IWbpG+bQiiQtZL28Lcm7TAImGhQthLW8KBDLTA+QajQmwq0MKcAAAA
AAAAAAEAAAACAAAAAAAAAAIAAAADAAAABAAAAAUAAAABAAAABgAAAAAAAAADAAAABwAAAAQA
AAABAAAACAAAAAUAAAAEAAAACQAAAAIAAAABAAAACQAAAAEAAAAFAAAACgAAAAMAAAACAAAA
CwAAAAYAAAADAAAADAAAAAYAAAAHAAAADAAAAAcAAAABAAAADQAAAAcAAAAGAAAADQAAAAQA
AAAHAAAADgAAAAMAAAAIAAAADgAAAAgAAAAEAAAADwAAAAUAAAAIAAAAEAAAAAoAAAAPAAAA
EAAAAA8AAAAIAAAAEAAAAAgAAAADAAAAEAAAAAMAAAAKAAAAEQAAAAAAAAAGAAAAEgAAAAYA
AAALAAAAEgAAAAsAAAANAAAAEgAAAA0AAAAGAAAAEwAAAAoAAAACAAAAEwAAAA8AAAAKAAAA
EwAAAAUAAAAPAAAAEwAAAAIAAAAJAAAAEwAAAAkAAAAFAAAAFAAAAAMAAAAOAAAAFAAAAAsA
AAADAAAAFQAAAAAAAAARAAAAFQAAABEAAAAMAAAAFQAAAAEAAAAAAAAAFgAAAAwAAAABAAAA
FgAAAAEAAAAVAAAAFgAAABUAAAAMAAAAFwAAAAYAAAAMAAAAFwAAAAwAAAARAAAAFwAAABEA
AAAGAAAAGAAAAAQAAAANAAAAGAAAAA0AAAALAAAAGQAAAA4AAAAEAAAAGQAAABQAAAAOAAAA
GgAAAAsAAAAUAAAAGwAAABoAAAAUAAAAGwAAAAsAAAAaAAAAGwAAABQAAAAZAAAAGwAAABkA
AAAEAAAAGwAAAAQAAAAYAAAAGwAAABgAAAALAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAA
AAAAAAAAAAAAAAAAAACAP2AAAAAEAAAAduzXwWkFVkIAAAAA32HZwWkFVkLYS1vCdpN5QWkF
VkIAAAAAnJ3AQPOVn0IAAAAAjXZVwb0eoULYS1vCj/99QYU9Y0LYS1vCXMqlwZfBmkIAAAAA
56MWQfjGmkLYS1vCuKKlwQ/JmkLYS1vCi/l9QWkFVkLYS1vCFjm1wMD4okIAAAAAStAxQeOk
kkIAAAAAugGPQWkFVkJ0IwDCOovpwWkFVkLaSwDC6xXmwaKEXEJPJ9rBacWKwY+Xn0IAAAAA
plQWQYC/mkIAAAAAkTvBQHKdn0LYS1vC3MLQweWnc0LYS1vCoZ2KwRCfn0LYS1vCuJ60wA0A
o0KRllXCaFubvr8AokKfoVjCn4uzwTCnkkIAAAAAGmLZwYRDY0LYS1vCih8yQV6skkLYS1vC
/WOzwbGukkLYS1vCfnQDQJwdoULYS1vCTQilvlL5oUIAAAAAvQwwwR36oUIAAAAAXoqLQTl+
XEIE/tnBccIvwX0BokJhpljC3Zu0wCJhoULYS1vCtAAAAAAAAAABAAAAAgAAAAAAAAACAAAA
AwAAAAQAAAAFAAAAAQAAAAYAAAAAAAAAAwAAAAcAAAAFAAAABAAAAAgAAAAEAAAAAQAAAAkA
AAACAAAAAQAAAAkAAAABAAAABQAAAAoAAAAGAAAAAwAAAAsAAAADAAAAAgAAAAwAAAACAAAA
CQAAAAwAAAAJAAAABQAAAA0AAAABAAAAAAAAAA0AAAAAAAAADgAAAA8AAAAGAAAACgAAAA8A
AAAIAAAABgAAABAAAAAHAAAAAwAAABAAAAADAAAACwAAABAAAAALAAAABwAAABEAAAADAAAA
BwAAABEAAAAHAAAABAAAABIAAAAIAAAAAQAAABMAAAAEAAAACAAAABMAAAAIAAAADwAAABMA
AAAPAAAABAAAABQAAAAKAAAAFQAAABYAAAAAAAAABgAAABYAAAAOAAAAAAAAABYAAAAGAAAA
CAAAABcAAAABAAAADQAAABcAAAANAAAAEgAAABcAAAASAAAAAQAAABgAAAAHAAAACwAAABgA
AAAFAAAABwAAABgAAAAMAAAABQAAABkAAAAOAAAAFgAAABkAAAAWAAAACAAAABkAAAAIAAAA
EgAAABkAAAASAAAADQAAABkAAAANAAAADgAAABoAAAARAAAABAAAABsAAAARAAAAGgAAABsA
AAAaAAAAFQAAABsAAAAKAAAAAwAAABsAAAAVAAAACgAAABsAAAADAAAAEQAAABwAAAAKAAAA
FAAAABwAAAAEAAAADwAAABwAAAAPAAAACgAAAB0AAAAMAAAAGAAAAB0AAAAYAAAACwAAAB0A
AAALAAAAAgAAAB0AAAACAAAADAAAAB4AAAAEAAAAHAAAAB4AAAAcAAAAFAAAAB8AAAAUAAAA
FQAAAB8AAAAeAAAAFAAAAB8AAAAaAAAABAAAAB8AAAAEAAAAHgAAAB8AAAAVAAAAGgAAABAA
AAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD8hAAAABAAAAAf/fUF0FcxB
FY6DwkFWfkEYDVZC1kvbwov5fUEYDVZC2Utbwt5h2cEYDVZC2Utbwq1x2cF0FcxB2UtbwvZA
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
AAAAAAAAAAAAAAAAgD8tAAAABAAAAPQircHkCDnCpjK/Q3gqtMAykczCpjK/Q8keJEHkCDnC
pjK/Q7DpKEHkCDnC3nikQ9BJr8HkCDnC3nikQ3ZatMDXnbLC3nikQxI13UBRqrzCpjK/Q757
/UBoa6rCqpSpQxKOkcEOsrzCpjK/Q5aimcFNjqrCHrSpQyskmcGiT6LC3nikQyBi+0A5XqLC
3nikQ+ZEtMADk7rC8oqpQ4w3MEHkCDnCeaiqQ+fxsMHkCDnCOkKnQ04AAAAAAAAAAQAAAAIA
AAADAAAAAAAAAAIAAAAEAAAAAAAAAAMAAAAEAAAAAwAAAAUAAAAGAAAAAgAAAAEAAAAGAAAA
AQAAAAcAAAAIAAAAAQAAAAAAAAAIAAAACQAAAAEAAAAKAAAABAAAAAUAAAAKAAAABQAAAAkA
AAAKAAAACQAAAAQAAAALAAAABQAAAAMAAAALAAAAAwAAAAcAAAALAAAABwAAAAUAAAAMAAAA
AQAAAAkAAAAMAAAACQAAAAUAAAAMAAAABQAAAAcAAAAMAAAABwAAAAEAAAANAAAAAgAAAAYA
AAANAAAABgAAAAcAAAANAAAAAwAAAAIAAAANAAAABwAAAAMAAAAOAAAACQAAAAgAAAAOAAAA
CAAAAAAAAAAOAAAAAAAAAAQAAAAOAAAABAAAAAkAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAA
AAAAAAAAAAAAAAAAAAAAAIA/KgAAAAQAAAC5B4lBYCwXQtdLW0K6kHtBEGg7QddLW0LX9djB
nbU5QddLW0LjQ4pBYCwXQtdL20INDubBYCwXQtdL20LqquTBYCwXQtdLW0LUXdjBQ1A4QddL
20JuJXpB1gA6QddL20LsDOw/8D2oQCoi2kLwoNU/8D2oQNdLW0Khd1TB8D2oQFAe2kKqC1HB
8D2oQNdLW0Jjd1TBOF3RQNdL20LlDuw/nNbQQNdL20JIAAAAAAAAAAEAAAACAAAAAQAAAAAA
AAADAAAABAAAAAMAAAAAAAAABQAAAAAAAAACAAAABQAAAAIAAAAEAAAABQAAAAQAAAAAAAAA
BgAAAAMAAAAEAAAABgAAAAQAAAACAAAABwAAAAMAAAAGAAAABwAAAAEAAAADAAAABwAAAAgA
AAABAAAACQAAAAIAAAABAAAACQAAAAEAAAAIAAAACgAAAAYAAAACAAAACgAAAAkAAAAIAAAA
CwAAAAIAAAAJAAAACwAAAAkAAAAKAAAACwAAAAoAAAACAAAADAAAAAYAAAAKAAAADAAAAAoA
AAAIAAAADAAAAAcAAAAGAAAADQAAAAgAAAAHAAAADQAAAAcAAAAMAAAADQAAAAwAAAAIAAAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPyoAAAAEAAAAkwCJQWAs
F0IAAAAAyZOAQfHcO0EAAAAA95DbwdgrOkEAAAAAuQeJQWAsF0LWS1tC6qrkwWAsF0LWS1tC
eNDVPyB4qEDWS1tCMHfkwWAsF0IAAAAA1/XYwZ21OUHWS1tCuZB7QRBoO0HWS1tCyv/wP4ac
wkAAAAAAwPJTwSB4qED1HYlBlxFRwSB4qEDWS1tCR9lTwUWtwkAAAAAA8jPwPyB4qEDlJYlB
SAAAAAAAAAABAAAAAgAAAAEAAAAAAAAAAwAAAAQAAAAFAAAAAwAAAAQAAAADAAAAAAAAAAYA
AAAAAAAAAgAAAAYAAAACAAAABAAAAAYAAAAEAAAAAAAAAAcAAAAFAAAABAAAAAcAAAAEAAAA
AgAAAAgAAAABAAAAAwAAAAgAAAADAAAABQAAAAkAAAACAAAAAQAAAAoAAAAHAAAAAgAAAAsA
AAAFAAAABwAAAAsAAAAHAAAACgAAAAsAAAAKAAAABQAAAAwAAAACAAAACQAAAAwAAAAJAAAA
CgAAAAwAAAAKAAAAAgAAAA0AAAAFAAAACgAAAA0AAAAKAAAACQAAAA0AAAAJAAAAAQAAAA0A
AAABAAAACAAAAA0AAAAIAAAABQAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAgD8tAAAABAAAAH/qrMEMz0VB1ktbQxQctcBgMkzC1ktbQ/epHUH4m09B1ktbQ2b8
DkH4m09B4HgkQxn8tcDWO4TB4HgkQ9kMo8H4m09B4HgkQ9/e2kBhBCzC1ktbQ5PgtMCFuWLC
HT1PQ17swkAAPEPCbiVPQ/JJkcFSsyzC1ktbQ8pLi8GCeEPC6VtPQ+wc4EBglwTB4HgkQzBF
k8FpdwLB4HgkQ9+lqcH4m09B1ktbQ08HI0GFo0dB1ktbQ04AAAAAAAAAAQAAAAIAAAADAAAA
BAAAAAUAAAADAAAABQAAAAIAAAAGAAAAAQAAAAcAAAAGAAAABwAAAAgAAAAGAAAACAAAAAMA
AAAGAAAAAgAAAAEAAAAJAAAACgAAAAcAAAAJAAAABwAAAAEAAAAJAAAAAAAAAAUAAAAJAAAA
BQAAAAoAAAAJAAAAAQAAAAAAAAALAAAACAAAAAcAAAALAAAABwAAAAQAAAALAAAABAAAAAMA
AAALAAAAAwAAAAgAAAAMAAAABAAAAAcAAAAMAAAABwAAAAoAAAAMAAAABQAAAAQAAAAMAAAA
CgAAAAUAAAANAAAAAAAAAAIAAAANAAAAAgAAAAUAAAANAAAABQAAAAAAAAAOAAAAAwAAAAIA
AAAOAAAAAgAAAAYAAAAOAAAABgAAAAMAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAA
AAAAAAAAAAAAAIA/PAAAAAQAAADoquTBYCwXQtVLW0Iwd+TBYCwXQgAAAAC5B4lBYCwXQtVL
W0Kv3DdBgaiMQtVLW0I8wbbBgaiMQgAAAABDs45BadVHQgAAAADY5LbBgaiMQtVLW0LmMzhB
gaiMQgAAAACTAIlBYCwXQgAAAACVW/JB5MJ0Qkx590FuU/JB0L90QrbpKEJmNOvB/yNHQtVL
W0KYS+rBbmBHQgAAAAAacI9BjZtHQtVLW0IrVvJBL0eHQoDqKEJ7e/BB4VqMQj7iA0JAdvBB
4VmMQsjkIEJcXvJBtUiHQuR690EsP+9BgaiMQrzkIEJXSO9BgaiMQjLiA0JsAAAAAAAAAAEA
AAACAAAAAAAAAAIAAAADAAAABAAAAAUAAAABAAAABgAAAAAAAAADAAAABgAAAAMAAAAEAAAA
BwAAAAQAAAADAAAABwAAAAUAAAAEAAAACAAAAAIAAAABAAAACAAAAAEAAAAFAAAACQAAAAIA
AAAIAAAACQAAAAgAAAAFAAAACgAAAAIAAAAJAAAACwAAAAAAAAAGAAAACwAAAAYAAAAEAAAA
CwAAAAEAAAAAAAAADAAAAAQAAAABAAAADAAAAAEAAAALAAAADAAAAAsAAAAEAAAADQAAAAMA
AAACAAAADQAAAAIAAAAKAAAADgAAAA0AAAAKAAAADgAAAAMAAAANAAAADgAAAA8AAAAQAAAA
DgAAAAoAAAAJAAAAEQAAAA8AAAAOAAAAEQAAAA4AAAAJAAAAEQAAAAkAAAAFAAAAEQAAAAUA
AAAHAAAAEQAAAAcAAAAPAAAAEgAAAAMAAAAOAAAAEgAAAA4AAAAQAAAAEgAAAAcAAAADAAAA
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]]></BinaryString>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Content name="TextureID"><url>rbxassetid://451000866</url></Content>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>0.306342155</X>
					<Y>1.13802314</Y>
					<Z>4.43486404</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="IntValue" referent="RBX3266A30D83D1479C8CF305DB7C6EB1FF">
			<Properties>
				<string name="Name">Ammo</string>
				<int name="Value">71</int>
			</Properties>
		</Item>
		<Item class="IntValue" referent="RBX6F0809633ECF43529633AD826B29DD28">
			<Properties>
				<string name="Name">ClipSize</string>
				<int name="Value">71</int>
			</Properties>
		</Item>
		<Item class="IntValue" referent="RBXDA5BBE28015542BF8CD94205C949A22B">
			<Properties>
				<string name="Name">StoredAmmo</string>
				<int name="Value">284</int>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX9614ACFFB57B43859ABDD23B46128CD9">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">199</int>
				<CoordinateFrame name="CFrame">
					<X>-12.2300863</X>
					<Y>0.91245997</Y>
					<Z>-11.9453659</Z>
					<R00>-0.000205271688</R00>
					<R01>1</R01>
					<R02>-4.31576664e-005</R02>
					<R10>1</R10>
					<R11>0.000205271688</R11>
					<R12>-5.13387821e-009</R12>
					<R20>3.72516862e-009</R20>
					<R21>-4.31576664e-005</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">256</token>
				<string name="Name">A1</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">1</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.200000003</X>
					<Y>0.600000024</Y>
					<Z>0.200000003</Z>
				</Vector3>
			</Properties>
			<Item class="CylinderMesh" referent="RBX13AD352B639746BF97842E43B40D0AAF">
				<Properties>
					<float name="Bevel">0</float>
					<float name="Bevel Roundness">0</float>
					<float name="Bulge">0</float>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="Part" referent="RBXFFE2DE575B814CC789EB02CA20717C6C">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">199</int>
				<CoordinateFrame name="CFrame">
					<X>-12.2300863</X>
					<Y>0.91245997</Y>
					<Z>-11.9453659</Z>
					<R00>9.15499404e-005</R00>
					<R01>-0.000122069381</R01>
					<R02>1</R02>
					<R10>-1</R10>
					<R11>-6.10444695e-005</R11>
					<R12>9.15424898e-005</R12>
					<R20>6.10332936e-005</R20>
					<R21>-1</R21>
					<R22>-0.000122074969</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">256</token>
				<string name="Name">A2</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">1</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.200000003</X>
					<Y>0.400000036</Y>
					<Z>0.200000003</Z>
				</Vector3>
			</Properties>
			<Item class="CylinderMesh" referent="RBXDCC1D762A7274EDEAF0173069B872A5E">
				<Properties>
					<float name="Bevel">0</float>
					<float name="Bevel Roundness">0</float>
					<float name="Bulge">0</float>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="Part" referent="RBX9C44D6B81CEC4D569BC6504751D47D3B">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>-12.2044678</X>
					<Y>0.868764997</Y>
					<Z>-11.965476</Z>
					<R00>-0.000205271688</R00>
					<R01>1</R01>
					<R02>-4.31576664e-005</R02>
					<R10>1</R10>
					<R11>0.000205271688</R11>
					<R12>-5.13387821e-009</R12>
					<R20>3.72516862e-009</R20>
					<R21>-4.31576664e-005</R21>
					<R22>-1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">256</token>
				<string name="Name">Chamber</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">1</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.200000003</X>
					<Y>0.600000024</Y>
					<Z>0.200000003</Z>
				</Vector3>
			</Properties>
			<Item class="CylinderMesh" referent="RBXA21F194F225F4325B0A4BE75850D6400">
				<Properties>
					<float name="Bevel">0</float>
					<float name="Bevel Roundness">0</float>
					<float name="Bulge">0</float>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="Part" referent="RBXFAE3FF270B304A5A9AC2161CE7715D11">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">1003</int>
				<CoordinateFrame name="CFrame">
					<X>-9.86243153</X>
					<Y>0.875094175</Y>
					<Z>-11.9647284</Z>
					<R00>0</R00>
					<R01>1</R01>
					<R02>0</R02>
					<R10>0.0105719818</R10>
					<R11>0</R11>
					<R12>-0.999944329</R12>
					<R20>-0.999944329</R20>
					<R21>0</R21>
					<R22>-0.0105719818</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">256</token>
				<string name="Name">Main</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">1</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.200000003</X>
					<Y>0.200000003</Y>
					<Z>0.200000003</Z>
				</Vector3>
			</Properties>
			<Item class="ParticleEmitter" referent="RBX1663A4E087684425B3F9C67164EBCD5A">
				<Properties>
					<Vector3 name="Acceleration">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<ColorSequence name="Color">0 0.27451 0.27451 0.27451 0 1 0.27451 0.27451 0.27451 0 </ColorSequence>
					<float name="Drag">0</float>
					<token name="EmissionDirection">1</token>
					<bool name="Enabled">false</bool>
					<NumberRange name="Lifetime">1.25 1.5 </NumberRange>
					<float name="LightEmission">0.100000001</float>
					<bool name="LockedToPart">false</bool>
					<string name="Name">1FlashFX[Smoke]</string>
					<float name="Rate">100</float>
					<NumberRange name="RotSpeed">10 10 </NumberRange>
					<NumberRange name="Rotation">0 360 </NumberRange>
					<NumberSequence name="Size">0 1 0 1 3 0 </NumberSequence>
					<NumberRange name="Speed">5 7 </NumberRange>
					<Content name="Texture"><url>http://www.roblox.com/asset/?id=244514423</url></Content>
					<NumberSequence name="Transparency">0 0.6 0 1 1 0 </NumberSequence>
					<float name="VelocityInheritance">0</float>
					<float name="VelocitySpread">15</float>
					<float name="ZOffset">0</float>
				</Properties>
			</Item>
			<Item class="PointLight" referent="RBXC2A1C0CBA99247D594513123B9ECF062">
				<Properties>
					<float name="Brightness">10</float>
					<Color3 name="Color">4294967167</Color3>
					<bool name="Enabled">false</bool>
					<string name="Name">FlashFX[Light]</string>
					<float name="Range">6</float>
					<bool name="Shadows">true</bool>
				</Properties>
			</Item>
			<Item class="ParticleEmitter" referent="RBXDBDA063E4E994FEF8AE3FA8BE34E12F9">
				<Properties>
					<Vector3 name="Acceleration">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<ColorSequence name="Color">0 1 1 0.498039 0 1 1 1 0.498039 0 </ColorSequence>
					<float name="Drag">0</float>
					<token name="EmissionDirection">1</token>
					<bool name="Enabled">false</bool>
					<NumberRange name="Lifetime">0.05 0.075 </NumberRange>
					<float name="LightEmission">0.300000012</float>
					<bool name="LockedToPart">false</bool>
					<string name="Name">FlashFX[Flash]</string>
					<float name="Rate">1000</float>
					<NumberRange name="RotSpeed">0 0 </NumberRange>
					<NumberRange name="Rotation">0 90 </NumberRange>
					<NumberSequence name="Size">0 0.5 0.15 1 0 0 </NumberSequence>
					<NumberRange name="Speed">50 50 </NumberRange>
					<Content name="Texture"><url>http://www.roblox.com/asset/?id=3419963</url></Content>
					<NumberSequence name="Transparency">0 0.75 0.125 1 1 0 </NumberSequence>
					<float name="VelocityInheritance">0</float>
					<float name="VelocitySpread">0</float>
					<float name="ZOffset">0</float>
				</Properties>
			</Item>
		</Item>
		<Item class="IntValue" referent="RBX0D2834D8099D4D729D5E6543E87FA590">
			<Properties>
				<string name="Name">LethalGrenades</string>
				<int name="Value">0</int>
			</Properties>
		</Item>
		<Item class="IntValue" referent="RBXAEEB544E61AA4986842509938A0790F6">
			<Properties>
				<string name="Name">TacticalGrenades</string>
				<int name="Value">0</int>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX8C5589C21F77476385322A7FF7E590E4">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">[[README]]</string>
				<string name="ScriptGuid"></string>
				<ProtectedString name="Source"><![CDATA[--[[
	
	VERSION: v0.0.4
	
	----------[ UPDATES ]----------------------------------------------------
	
	Pre-Release: -Added a copyright
	             -fixed the issue where you couldn't run when you selected the tool
	             -Added an ADS key and allowed ADS to either be toggle or hold
	             -Made the Ammo values external so they can be changed by outside scripts
	
	v0.0.2: -Created new arms for the gun
			-Fixed an issue where the arms would glitch if PlayerAnimations was set to false and the gun was fired
			-Updated credit security
			-Put the Arm cframes in the SETTINGS
			-Made the stance changing animations slightly smoother
			-Added bullet drop
			-Fixed some bullet hit handling code
			-Made the torso being able to rotate while sitting down a setting
			-Added bullet settings
			-Added shockwave settings
			-Added an Explosive guntype
			-Added a version label in the Gui
	
	v0.0.3: -Added an option to have player arms
			-Added grenades / throwables
			-Fixed the issue where if a player left a server without deselecting the gun, the bullet trails still remained
			-Added Gui Scopes
			-Fixed the issue where the guns would glitch if you switched weapons too fast
	
	v0.0.4: -Updated the Gui
			-Added a "Table Of Contents" in the clientMain
			-Added PLUGINS
			-Added the Arm CFrame when Running in the SETTINGS
			-Added Mouse Sensitivity settings
			-Fixed an issue where a humanoid wouldn't be damaged by bullets if there was no space between a wall and the humanoid
			-Fixed the issue where you couldn't steady the scope if the steady key was different from the run key
			-Added an example flashlight and laser (You can delete them and the gun will still work fine)
			-Moved the movement animations into a separate module script for easier editing
			-Added a single bullet mag option. It allows people to make guns where the mag is the bullet itself (i.e. arrows)
			-Moved grenades into a seperate folder and made them server-side so they don't get deleted when you die or switch guns
			-Added an option for a second knife animation
			-Added a setting to change the throwing speed of the grenades
			-Added an auto-knife feature
			-Added a setting for whether the gun can ADS or not
			-Added a flashbang and a molotov to the grenade list
			-Fixed an issue where bullets could only penetrate 1 wall
			-Added gun sway for when you move the gun around
			-Made the camera type scriptable when the gun is selected
			-Moved the ignore model creating code into a seperate server script so the ReadMe can be deleted
			-Redesigned the animations so the transitions between idling, walking, and running are smooth instead of choppy like previously
			-Added a fire select option
			-Added an equip animation option
			-Added a crawling animation option
			-Fixed the issue where you could dive and jump at the same time
			-Moved the reload animation into the ANIMATIONS modulescript for easier editing
			-Added an option to enable reloading while running
			-Added an option to enable firing while running
			-Redesigned the recoil animation and based it more on battlefield
			-Edited the reload so if a bullet is already chambered and you reload the ammo will be the ClipSize + 1
			-Fixed the issue where the ammo would go to 0 if you stopped the reload
			-Fixed the issue where if you stopped the reload before you put in a new mag the gun would take another full clipsize from the storedammo
			-Fixed an issue where if the gun was removed without being deselected, the camera would break
			-Got rid of the gunName and gunDescription settings because they're unnecessary and annoying to change
			-Moved bullet impact object creation to server side
			-Added a bullet smoke impact setting
			-Added a blood particle setting that appears on a player when they're shot
			-Updated the scope
			-Added CanCollide, transparency, and custom ignore settings to the penetration settings
			-Moved trail creation to server side to prevent client lag
			-Fixed an issue where shooting a player's hat would do damage
	
	-------------------------------------------------------------------------
	
	Hello there!
	
	Glad to know you're using my one and only Gun Kit!
	
	Even though this kit has many features and is rather advanced, it's pretty easy to use
	
	There are 4 things that this gun needs in order to function:
		One brick called "AimPart"
		At least one brick where the first 3 letters are "Mag"
		One brick called "Handle"
		One brick called "Main"
		
	The AimPart is what the gun will use to aim down the sights. When you aim down your sights, this brick will be in the center
	of the player's head. It basically allows the gun to have any type of sight, which can be placed anywhere on the gun. As long as
	the AimPart is aligned with the sight, the gun will aim down the sights properly.
	(NOTE: Make sure the AimPart is behind the Sight and the FRONT of the AimPart is facing the Sight)
	
	The Mag is what the gun will move around when you reload the gun. If the mag is made up of more than one brick, make sure the first
	3 leters of the bricks are also "Mag" so that the gun will move them around. If you set ReloadAnimation to false in the SETTINGS, you don't
	need any bricks called "Mag". But if ReloadAnimation is set to true, the gun needs at least one brick called "Mag" or it will break. It doesn't
	matter what comes after the "Mag", you can have a Mag brick called "Mag1" and another Mag brick called "MagA". As long as the first three letters are
	"Mag", then the gun will recognize it as a Mag
	
	The Handle is obviously the most important part of the Gun. Without it, the tool itself wouldn't work. It's that simple
	(NOTE: If you want a sound to play when you fire, name it "FireSound" and place it in the Handle. If you want a sound to play when
	you reload, name it "ReloadSound" and place it in the Handle)
	
	The Main is the brick where the bullets will originate from. It's also the brick where the flash effects are kept.
	(NOTE: If you want a muzzle flash effects, put them in the Main and call them "FlashFX". Also make sure they have an "Enabled"
	property so that the script can enable and disable them)
	
	----------[ INSTRUCTIONS ]-----------------------------------------------
	
	HOW TO USE THIS KIT:
		1) If the gun already has a Handle, make sure it is facing forward. If the gun doesn't have a Handle, create one and place
		   it wherever you like, and make sure it is facing forward
		
		2) If the gun already has a brick called "AimPart", move it to where you would like, and make sure it is facing the sight.
		   If the gun doesn't have a brick called "AimPart", create one and move it where you would like it to be, and make sure
		   it is facing the sight
		
		3) If the gun already has a brick called "Main", move it to the very front of the gun. If the gun doesn't have a brick
		   called "Main", create one and move it to the very front of the gun
		
		4) If ReloadAnimation is set to true in the SETTINGS, make sure the gun has at least one brick called "Mag". If
		   ReloadAnimation is set to false, the gun doesn't need any bricks called "Mag".
		
		5) Open the SETTINGS and edit them however you like
		
	That's it! Only 5 steps! It's not that complicated, just follow the Directions and it should work fine. If you have any questions /
	comments / concerns, message me.
	
	     ______   ______           __          ______           _                ______
	    / _/ _/  /_  __/_  _______/ /_  ____  / ____/_  _______(_)___  ____     /  /  /
	   / // /     / / / / / / ___/ __ \/ __ \/ /_  / / / / ___/ / __ \/ __ \    / // / 
	  / // /     / / / /_/ / /  / /_/ / /_/ / __/ / /_/ (__  ) / /_/ / / / /   / // /  
	 / // /     /_/  \__,_/_/  /_.___/\____/_/    \__,_/____/_/\____/_/ /_/  _/ // /   
	/__/__/                                                                 /__/__/    
	
--]]]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX948C2B71275D4F56AE2B340ACA650A45">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">serverMain</string>
				<string name="ScriptGuid"></string>
				<ProtectedString name="Source"><![CDATA[local Plyr = script:WaitForChild("Plyr")

local Gun = script.Parent
local Handle = Gun:WaitForChild("Handle")

local V3 = Vector3.new
local CF, CFANG = CFrame.new, CFrame.Angles

local RAD = math.rad

local numLerp = function(A, B, Alpha)
	return A + (B - A) * Alpha
end

local inList = function(Element, List)
	for _, v in pairs(List) do
		if v == Element then
			return true
		end
	end
	return false
end

local getObject = function(Model, Class, Name)
	for _, v in pairs(Model:GetChildren()) do
		if v:IsA(Class) and v.Name == Name then
			return v
		end
	end
	return nil
end

----------------------------------------------------------------------
--------------------[ IGNORE MODEL HANDLING ]-------------------------
----------------------------------------------------------------------

wait(math.random(0, 20) / 40) --This is to prevent more than one ignoreModel from being created

if _G.ignoreCode then --If the ignoreCode already exists, then the script creates the ignoreModel
	--[[
		The purpose of this is so that every gun in a game that uses this gun kit will share one ignoreModel. That way,
		bullet trails, bullet holes, and other fake arms will be ignored by the gun which makes the bullets more likely to
		hit a character part
	--]]
	if (not game.Workspace:FindFirstChild("ignoreModel_".._G.ignoreCode)) then
		local ignoreModel = Instance.new("Model")
		ignoreModel.Name = "ignoreModel_".._G.ignoreCode
		ignoreModel.Parent = game.Workspace
		
		local grenadeFolder = Instance.new("Model")
		grenadeFolder.Name = "grenadeFolder"
		grenadeFolder.Parent = ignoreModel
	
		spawn(function()
			while true do
				ignoreModel.Parent = game.Workspace
				grenadeFolder.Parent = ignoreModel
				wait(1 / 20)
			end
		end)
	end
	
	script.Parent:WaitForChild("clientMain"):WaitForChild("ignoreCode").Value = _G.ignoreCode
else
	--[[
		If there isn't already an ignoreCode, then this creates one. The purpose of it being random is so that if there is
		an ignoreModel for something else in the game, the script won't end up placing the ignored objects in that ignoreModel
	--]]
	_G.ignoreCode = math.random(1, 1e4)
	
	if (not game.Workspace:FindFirstChild("ignoreModel_".._G.ignoreCode)) then
		local ignoreModel = Instance.new("Model")
		ignoreModel.Name = "ignoreModel_".._G.ignoreCode
		ignoreModel.Parent = game.Workspace
		
		local grenadeFolder = Instance.new("Model")
		grenadeFolder.Name = "grenadeFolder"
		grenadeFolder.Parent = ignoreModel
	
		spawn(function()
			while true do
				ignoreModel.Parent = game.Workspace
				grenadeFolder.Parent = ignoreModel
				wait(1 / 20)
			end
		end)
	end
	
	script.Parent:WaitForChild("clientMain"):WaitForChild("ignoreCode").Value = _G.ignoreCode
end

spawn(function()
	--[[
		This function deletes any Player Folders that were left in the ignoreModel because the player left the game without
		deselecting the Gun first
	--]]
	repeat wait() until _G.ignoreCode
	local ignoreModel = game.Workspace:WaitForChild("ignoreModel_".._G.ignoreCode)
	while true do
		for _, gunIgnore in pairs(ignoreModel:GetChildren()) do
			if gunIgnore.Name ~= "grenadeFolder" then
				if (not game.Players:FindFirstChild(gunIgnore.Name:sub(11))) then
					gunIgnore:Destroy()
				end
			end
		end
		wait(1 / 20)
	end
end)

----------------------------------------------------------------------
--------------------[ RESET CAMERA ]----------------------------------
----------------------------------------------------------------------

Gun.ChildRemoved:connect(function(Child)
	if Child == Handle and Plyr.Value then
		local ignoreCode = Gun:WaitForChild("clientMain"):WaitForChild("ignoreCode").Value
		local resetCam = script:WaitForChild("resetCam")
		resetCam:WaitForChild("ignoreCode").Value = ignoreCode
		resetCam.Parent = Plyr.Value.PlayerGui
	end
end)

----------------------------------------------------------------------
--------------------[ GET WELD CFRAMES ]------------------------------
----------------------------------------------------------------------

for _, v in pairs(Gun:GetChildren()) do
	if v:IsA("BasePart") and v ~= Handle then
		if v:FindFirstChild("mainWeld") then v.mainWeld:Destroy() end
		if (not v:FindFirstChild("weldCF")) then
			local weldCF = Instance.new("CFrameValue")
			weldCF.Name = "weldCF"
			weldCF.Value = Handle.CFrame:toObjectSpace(v.CFrame)
			weldCF.Parent = v
		end
		if string.sub(v.Name, 1, 3) == "Mag" then
			if (not v:FindFirstChild("magTrans")) then
				local magTrans = Instance.new("NumberValue")
				magTrans.Name = "magTrans"
				magTrans.Value = v.Transparency
				magTrans.Parent = v
			end
		end
		v.Anchored = true
		v.CanCollide = false
	end
end
Handle.Anchored = false
Handle.CanCollide = true

----------------------------------------------------------------------
--------------------[ GUNSETUP HANDLING ]-----------------------------
----------------------------------------------------------------------

local gunSetup = script:WaitForChild("gunSetup")
function gunSetup.OnServerInvoke(Player, Vars)
	
	--------------------[ CREATING IGNORE MODELS ]--------------------------------
	
	local gunIgnore = Instance.new("Model")
	gunIgnore.Name = "gunIgnore_"..Player.Name
	gunIgnore.Parent = Vars.ignoreModel
	
	--------------------[ MODIFYING THE PLAYER ]----------------------------------
		
	Vars.Humanoid.AutoRotate = false
	
	Vars.Shoulders.Right.Part1 = nil
	Vars.Shoulders.Left.Part1 = nil
	
	local playerFolder = Instance.new("Model")
	playerFolder.Name = "playerFolder"
	playerFolder.Parent = gunIgnore
	
	local headBase = Instance.new("Part")
	headBase.Transparency = 1
	headBase.Name = "headBase"
	headBase.CanCollide = false
	headBase.FormFactor = Enum.FormFactor.Custom
	headBase.Size = V3(0.2, 0.2, 0.2)
	headBase.BottomSurface = Enum.SurfaceType.Smooth
	headBase.TopSurface = Enum.SurfaceType.Smooth
	headBase.Parent = playerFolder
		
	local headWeld = Instance.new("Weld")
	headWeld.Part0 = Vars.Torso
	headWeld.Part1 = headBase
	headWeld.C0 = CF(0, 1.5, 0)
	headWeld.Parent = Vars.Torso
	
	local headWeld2 = Instance.new("Weld")
	headWeld2.Part0 = headBase
	headWeld2.Part1 = Vars.Head
	headWeld2.Parent = headBase
		
	local animBase = Instance.new("Part")
	animBase.Transparency = 1
	animBase.Name = "animBase"
	animBase.CanCollide = false
	animBase.FormFactor = Enum.FormFactor.Custom
	animBase.Size = V3(0.2, 0.2, 0.2)
	animBase.BottomSurface = Enum.SurfaceType.Smooth
	animBase.TopSurface = Enum.SurfaceType.Smooth
	animBase.Parent = playerFolder
	
	local animWeld = Instance.new("Weld")
	animWeld.Part0 = animBase
	animWeld.Part1 = headBase
	animWeld.Parent = animBase
	
	local armBase = Instance.new("Part")
	armBase.Transparency = 1
	armBase.Name = "ArmBase"
	armBase.CanCollide = false
	armBase.FormFactor = Enum.FormFactor.Custom
	armBase.Size = V3(0.2, 0.2, 0.2)
	armBase.BottomSurface = Enum.SurfaceType.Smooth
	armBase.TopSurface = Enum.SurfaceType.Smooth
	armBase.Parent = playerFolder
	
	local ABWeld = Instance.new("Weld")
	ABWeld.Part0 = armBase
	ABWeld.Part1 = animBase
	ABWeld.Parent = armBase
		
	local LArmBase = Instance.new("Part")
	LArmBase.Transparency = 1
	LArmBase.Name = "LArmBase"
	LArmBase.CanCollide = false
	LArmBase.FormFactor = Enum.FormFactor.Custom
	LArmBase.Size = V3(0.2, 0.2, 0.2)
	LArmBase.BottomSurface = Enum.SurfaceType.Smooth
	LArmBase.TopSurface = Enum.SurfaceType.Smooth
	LArmBase.Parent = playerFolder
	
	local RArmBase = Instance.new("Part")
	RArmBase.Transparency = 1
	RArmBase.Name = "RArmBase"
	RArmBase.CanCollide = false
	RArmBase.FormFactor = Enum.FormFactor.Custom
	RArmBase.Size = V3(0.2, 0.2, 0.2)
	RArmBase.BottomSurface = Enum.SurfaceType.Smooth
	RArmBase.TopSurface = Enum.SurfaceType.Smooth
	RArmBase.Parent = playerFolder
	
	local LWeld = Instance.new("Weld")
	LWeld.Name = "LWeld"
	LWeld.Part0 = armBase
	LWeld.Part1 = LArmBase
	LWeld.C0 = Vars.armC0[1]
	LWeld.C1 = Vars.leftArmC1
	LWeld.Parent = armBase
	
	local RWeld = Instance.new("Weld")
	RWeld.Name = "RWeld"
	RWeld.Part0 = armBase
	RWeld.Part1 = RArmBase
	RWeld.C0 = Vars.armC0[2]
	RWeld.C1 = Vars.rightArmC1
	RWeld.Parent = armBase
	
	local LWeld2 = Instance.new("Weld")
	LWeld2.Name = "LWeld"
	LWeld2.Part0 = LArmBase
	LWeld2.Part1 = Vars.LArm
	LWeld2.Parent = LArmBase
	
	local RWeld2 = Instance.new("Weld")
	RWeld2.Name = "RWeld"
	RWeld2.Part0 = RArmBase
	RWeld2.Part1 = Vars.RArm
	RWeld2.Parent = RArmBase
	
	local LLegWeld = Instance.new("Weld")
	LLegWeld.Name = "LLegWeld"
	LLegWeld.Part0 = Vars.Torso
	LLegWeld.Part1 = nil
	LLegWeld.C0 = CF(-0.5, -2, 0)
	LLegWeld.Parent = Vars.Torso
	
	local RLegWeld = Instance.new("Weld")
	RLegWeld.Name = "RLegWeld"
	RLegWeld.Part0 = Vars.Torso
	RLegWeld.Part1 = nil
	RLegWeld.C0 = CF(0.5, -2, 0)
	RLegWeld.Parent = Vars.Torso
	
	for _, Tab in pairs(Vars.gunParts) do
		Tab.Obj.Anchored = false
		local Weld = Instance.new("Weld")
		Weld.Name = "mainWeld"
		Weld.Part0 = Vars.Handle
		Weld.Part1 = Tab.Obj
		Weld.C0 = Tab.Obj.weldCF.Value
		Weld.Parent = Vars.Handle
		Tab.Weld = Weld
	end
	
	return gunIgnore, playerFolder, headWeld, headWeld2, animWeld, ABWeld, LWeld, RWeld, LWeld2, RWeld2, LLegWeld, RLegWeld, Vars.gunParts
end

----------------------------------------------------------------------
--------------------[ TWEENJOINT HANDLING ]---------------------------
----------------------------------------------------------------------

local createTweenIndicator = script:WaitForChild("createTweenIndicator")
function createTweenIndicator.OnServerInvoke(_, Joint, newCode)
	local tweenIndicator = nil
	if (not Joint:findFirstChild("tweenCode")) then --If the joint isn't being tweened, then
		tweenIndicator = Instance.new("IntValue")
		tweenIndicator.Name = "tweenCode"
		tweenIndicator.Value = newCode
		tweenIndicator.Parent = Joint
	else
		tweenIndicator = Joint.tweenCode
		tweenIndicator.Value = newCode --If the joint is already being tweened, this will change the code, and the tween loop will stop
	end
	return tweenIndicator
end

local lerpCF = script:WaitForChild("lerpCF")
function lerpCF.OnServerInvoke(_, Joint, Prop, startCF, endCF, Alpha)
	spawn(function()
		Joint[Prop] = startCF:lerp(endCF, Alpha)
	end)
end

local deleteTweenIndicator = script:WaitForChild("deleteTweenIndicator")
function deleteTweenIndicator.OnServerInvoke(_, tweenIndicator, newCode)
	if tweenIndicator.Value == newCode then --If this tween functions was the last one called on a joint then it will remove the code
		tweenIndicator:Destroy()
	end
end

----------------------------------------------------------------------
--------------------[ BULLET IMPACT HANDLING ]------------------------
----------------------------------------------------------------------

local createBulletImpact = script:WaitForChild("createBulletImpact")
createBulletImpact.OnServerEvent:connect(function(_, H, P, N, D, humanoidFound, gunIgnore, S)
	local surfaceCF = CF(P, P + N)
	----------------------------------------------------------------------------------
	--Creating the bullet hole--------------------------------------------------------
	----------------------------------------------------------------------------------
	if S.bulletHoles and (not humanoidFound) then
		local Hole = Instance.new("Part")
		Hole.Transparency = 1
		Hole.Anchored = true
		Hole.CanCollide = false
		Hole.FormFactor = "Custom"
		Hole.Size = V3(1, 1, 0.2)
		Hole.TopSurface = 0
		Hole.BottomSurface = 0
		local Mesh = Instance.new("BlockMesh")
		Mesh.Offset = V3(0, 0, -0.05)
		Mesh.Scale = V3(S.holeSettings.Size, S.holeSettings.Size, 0)
		Mesh.Parent = Hole
		local Decal = Instance.new("Decal")
		Decal.Face = Enum.NormalId.Front
		Decal.Texture = S.holeSettings.Texture
		Decal.Parent = Hole
		Hole.Parent = gunIgnore
		Hole.CFrame = surfaceCF
		if (not H.Anchored) then
			local Weld = Instance.new("Weld", Hole)
			Weld.Part0 = H
			Weld.Part1 = Hole
			Weld.C0 = H.CFrame:toObjectSpace(surfaceCF)
			Hole.Anchored = false
		end
		delay(S.holeSettings.visibleTime, function()
			if S.holeSettings.disappearTime > 0 then
				local t0 = tick()
				while true do
					local Alpha = math.min((tick() - t0) / S.holeSettings.disappearTime, 1)
					Decal.Transparency = numLerp(0, 1, Alpha)
					if Alpha == 1 then break end
					wait()
				end
				Hole:Destroy()
			else
				Hole:Destroy()
			end
		end)
	end
	----------------------------------------------------------------------------------
	--Creating the spark effect-------------------------------------------------------
	----------------------------------------------------------------------------------
	if S.bulletSparks and (not humanoidFound) and inList(H.Material, S.sparkSettings.Materials) then
		local Sparks = Instance.new("Part")
		Sparks.Transparency = 1
		Sparks.Anchored = true
		Sparks.CanCollide = false
		Sparks.FormFactor = "Custom"
		Sparks.Size = V3(1, 1, 1)
		Sparks.TopSurface = 0
		Sparks.BottomSurface = 0
		
		local Particles = nil
		if S.customSparks then
			Particles = getObject(game.ServerStorage, "ParticleEmitter", "bulletSpark"):Clone()
		else
			Particles = Instance.new("ParticleEmitter")
			Particles.Color = ColorSequence.new(S.sparkSettings.Color.Start, S.sparkSettings.Color.End)
			Particles.LightEmission = 1
			Particles.Size = NumberSequence.new(
				{
					NumberSequenceKeypoint.new(0, S.sparkSettings.Size, 0.25);
					NumberSequenceKeypoint.new(1, 0);
				}
			)
			Particles.Texture = S.sparkSettings.Texture
			Particles.Transparency = NumberSequence.new(0)
			Particles.Acceleration = V3(0, -196.2, 0)
			Particles.EmissionDirection = Enum.NormalId.Front
			Particles.Lifetime = NumberRange.new(S.sparkSettings.Lifetime - 0.05, S.sparkSettings.Lifetime + 0.05)
			Particles.Rate = S.sparkSettings.Rate
			Particles.Rotation = NumberRange.new(0, 360)
			Particles.Speed = NumberRange.new(S.sparkSettings.Speed - 5, S.sparkSettings.Speed + 5)
			Particles.VelocitySpread = S.sparkSettings.Spread
		end
		Particles.Parent = Sparks
		
		Sparks.Parent = gunIgnore
		Sparks.CFrame = surfaceCF
		if (not H.Anchored) then
			local Weld = Instance.new("Weld", Sparks)
			Weld.Part0 = H
			Weld.Part1 = Sparks
			Weld.C0 = H.CFrame:toObjectSpace(surfaceCF)
			Sparks.Anchored = false
		end
		delay(0.1, function()
			Particles.Enabled = false
			wait(Particles.Lifetime.Max)
			Sparks:Destroy()
		end)
	end
	----------------------------------------------------------------------------------
	--Creating the smoke effect-------------------------------------------------------
	----------------------------------------------------------------------------------
	if S.bulletSmoke and (not humanoidFound) then
		local Smoke = Instance.new("Part")
		Smoke.Transparency = 1
		Smoke.Anchored = true
		Smoke.CanCollide = false
		Smoke.FormFactor = "Custom"
		Smoke.Size = V3(1, 1, 1)
		Smoke.TopSurface = 0
		Smoke.BottomSurface = 0
		
		local Particles = Instance.new("ParticleEmitter")
		Particles.Color = ColorSequence.new(S.smokeSettings.objColor and H.Color or S.smokeSettings.Color)
		Particles.LightEmission = 0
		Particles.Size = NumberSequence.new(
			{
				NumberSequenceKeypoint.new(0, S.smokeSettings.Size.Start);
				NumberSequenceKeypoint.new(1, S.smokeSettings.Size.End);
			}
		)
		Particles.Texture = S.smokeSettings.Texture
		Particles.Transparency = NumberSequence.new(
			{
				NumberSequenceKeypoint.new(0, S.smokeSettings.startTransparency);
				NumberSequenceKeypoint.new(0.5, 0.75 * S.smokeSettings.startTransparency + 0.25);
				NumberSequenceKeypoint.new(1, 1);
			}
		)
		Particles.Acceleration = V3(0, -196.2, 0)
		Particles.EmissionDirection = Enum.NormalId.Front
		Particles.Lifetime = NumberRange.new(S.smokeSettings.Lifetime - 0.05, S.smokeSettings.Lifetime + 0.05)
		Particles.Rate = S.smokeSettings.Rate
		Particles.Rotation = NumberRange.new(0, 360)
		Particles.RotSpeed = NumberRange.new(10)
		Particles.Speed = NumberRange.new(S.smokeSettings.Speed - 5, S.smokeSettings.Speed + 5)
		Particles.VelocitySpread = S.smokeSettings.Spread
		Particles.Parent = Smoke
		
		Smoke.Parent = gunIgnore
		Smoke.CFrame = surfaceCF
		if (not H.Anchored) then
			local Weld = Instance.new("Weld", Smoke)
			Weld.Part0 = H
			Weld.Part1 = Smoke
			Weld.C0 = H.CFrame:toObjectSpace(surfaceCF)
			Smoke.Anchored = false
		end
		delay(0.1, function()
			Particles.Enabled = false
			wait(S.smokeSettings.Lifetime + 0.05)
			Smoke:Destroy()
		end)
	end
end)

----------------------------------------------------------------------
--------------------[ SHOCKWAVE HANDLING ]----------------------------
----------------------------------------------------------------------

local createShockwave = script:WaitForChild("createShockwave")
createShockwave.OnServerEvent:connect(function(_, Center, Radius, gunIgnore, S)
	local Shockwave = Instance.new("Part")
	Shockwave.BrickColor = S.shockwaveSettings.Color
	Shockwave.Material = Enum.Material.SmoothPlastic
	Shockwave.Name = "Shockwave"
	Shockwave.Anchored = true
	Shockwave.CanCollide = false
	Shockwave.FormFactor = Enum.FormFactor.Symmetric
	Shockwave.Size = V3(1, 1, 1)
	Shockwave.BottomSurface = Enum.SurfaceType.Smooth
	Shockwave.TopSurface = Enum.SurfaceType.Smooth
	local Mesh = Instance.new("SpecialMesh")
	Mesh.MeshType = Enum.MeshType.Sphere
	Mesh.Scale = V3()
	Mesh.Parent = Shockwave
	Shockwave.Parent = gunIgnore
	Shockwave.CFrame = CF(Center)
	spawn(function()
		local t0 = tick()
		while true do
			local Alpha = math.min((tick() - t0) / S.shockwaveSettings.Duration, 1)
			local Scale = 2 * Radius * Alpha
			Mesh.Scale = V3(Scale, Scale, Scale)
			Shockwave.Transparency = Alpha
			if Alpha == 1 then break end
			wait()
		end
		Shockwave:Destroy()
	end)
end)

----------------------------------------------------------------------
--------------------[ BLOOD HANDLING ]--------------------------------
----------------------------------------------------------------------

local createBlood = script:WaitForChild("createBlood")
createBlood.OnServerEvent:connect(function(_, H, P, D, gunIgnore, S)
	local bloodCF = CF(P, P + D) * CFANG(RAD(-90), 0, 0)
	local Blood = Instance.new("Part")
	Blood.Transparency = 1
	Blood.Anchored = true
	Blood.CanCollide = false
	Blood.FormFactor = "Custom"
	Blood.Size = V3(0.2, 1, 0.2)
	Blood.TopSurface = 0
	Blood.BottomSurface = 0
	
	local Particles = Instance.new("ParticleEmitter")
	Particles.Color = ColorSequence.new(S.bloodSettings.Color)
	Particles.LightEmission = 0
	Particles.Size = NumberSequence.new(S.bloodSettings.Size)
	Particles.Texture = S.bloodSettings.Texture
	Particles.Transparency = NumberSequence.new(
		{
			NumberSequenceKeypoint.new(0, S.bloodSettings.startTransparency);
			NumberSequenceKeypoint.new(1, 1);
		}
	)
	Particles.EmissionDirection = Enum.NormalId.Top
	Particles.Lifetime = NumberRange.new(S.bloodSettings.Lifetime - 0.05, S.bloodSettings.Lifetime + 0.05)
	Particles.Rate = S.bloodSettings.Rate
	Particles.Rotation = NumberRange.new(0, 90)
	Particles.Speed = NumberRange.new(S.bloodSettings.Speed)
	Particles.VelocitySpread = S.bloodSettings.Spread
	Particles.Parent = Blood
	
	Blood.Parent = gunIgnore
	Blood.CFrame = bloodCF
	if (not H.Anchored) then
		local Weld = Instance.new("Weld", Blood)
		Weld.Part0 = H
		Weld.Part1 = Blood
		Weld.C0 = H.CFrame:toObjectSpace(bloodCF)
		Blood.Anchored = false
	end
	delay(0.15, function()
		Particles.Enabled = false
		wait(S.bloodSettings.Lifetime + 0.05)
		Blood:Destroy()
	end)
end)

----------------------------------------------------------------------
--------------------[ TRAIL HANDLING ]--------------------------------
----------------------------------------------------------------------

local createTrail = script:WaitForChild("createTrail")
createTrail.OnServerEvent:connect(function(_, Origin, P, gunIgnore, S)
	local Trail = Instance.new("Part")
	Trail.BrickColor = S.trailSettings.Color
	Trail.Transparency = S.trailSettings.Transparency
	Trail.Anchored = true
	Trail.CanCollide = false
	Trail.Size = V3(1, 1, 1)
	local Mesh = Instance.new("CylinderMesh")
	Mesh.Offset = V3(0, -(P - Origin).magnitude / 2, 0)
	Mesh.Scale = V3(S.trailSettings.Thickness, (P - Origin).magnitude, S.trailSettings.Thickness)
	Mesh.Parent = Trail
	Trail.Parent = gunIgnore
	Trail.CFrame = CF(Origin, P) * CFANG(RAD(90), 0, 0)
	delay(S.trailSettings.visibleTime, function()
		if S.trailSettings.disappearTime > 0 then
			local t0 = tick()
			while true do
				local Alpha = math.min((tick() - t0) / S.trailSettings.disappearTime, 1)
				Trail.Transparency = numLerp(S.trailSettings.Transparency, 1, Alpha)
				if Alpha == 1 then break end
				wait()
			end
			Trail:Destroy()
		else
			Trail:Destroy()
		end
	end)
end)]]></ProtectedString>
			</Properties>
			<Item class="ObjectValue" referent="RBX9044FCFFBD7A430A8C94E916D4E63652">
				<Properties>
					<string name="Name">Plyr</string>
					<Ref name="Value">null</Ref>
				</Properties>
			</Item>
			<Item class="RemoteFunction" referent="RBXFD90DA0C9E8A496D8981CECFDEC0D698">
				<Properties>
					<string name="Name">getWeldCF</string>
				</Properties>
			</Item>
			<Item class="RemoteFunction" referent="RBXB2BF414F7AF74CDC89E88E3D98A2D397">
				<Properties>
					<string name="Name">gunSetup</string>
				</Properties>
			</Item>
			<Item class="RemoteFunction" referent="RBXB9CEA5D4D47347429894DAFC8670E926">
				<Properties>
					<string name="Name">tweenJoint</string>
				</Properties>
			</Item>
			<Item class="RemoteEvent" referent="RBXD2A6E0834BD04E62ABC2699C5A38ED9B">
				<Properties>
					<string name="Name">onRenderStep</string>
				</Properties>
			</Item>
			<Item class="RemoteFunction" referent="RBX0EF0D7C148E146CF8E7C8F13C8AFBB2E">
				<Properties>
					<string name="Name">createTweenIndicator</string>
				</Properties>
			</Item>
			<Item class="RemoteFunction" referent="RBXA34718A9B5F648F882800E7CB6D5291B">
				<Properties>
					<string name="Name">deleteTweenIndicator</string>
				</Properties>
			</Item>
			<Item class="RemoteFunction" referent="RBX32953DC826C54E8390DD57BB8067717A">
				<Properties>
					<string name="Name">lerpCF</string>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX4C08858ADDC4452E832AE12AFCEA148D">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">resetCam</string>
					<string name="ScriptGuid"></string>
					<ProtectedString name="Source"><![CDATA[repeat wait() until game.Players.LocalPlayer.Character

local Player = game.Players.LocalPlayer
local Char = Player.Character
local Humanoid = Char:WaitForChild("Humanoid")

local Cam = game.Workspace.CurrentCamera
local UIS = game:GetService("UserInputService")

local ignoreCode = script:WaitForChild("ignoreCode")
repeat wait() until ignoreCode.Value ~= 0
local ignoreModel = game.Workspace:WaitForChild("ignoreModel_"..ignoreCode.Value)
local gunIgnore = ignoreModel:FindFirstChild("gunIgnore_"..Player.Name)

Cam.FieldOfView = 70
Cam.CameraType = Enum.CameraType.Custom
Cam:ClearAllChildren()

UIS.MouseBehavior = Enum.MouseBehavior.Default
UIS.MouseIconEnabled = true

Player.CameraMode = Enum.CameraMode.Classic

Humanoid.WalkSpeed = 16
Humanoid.AutoRotate = true

if gunIgnore then gunIgnore:Destroy() end]]></ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBXAC37CC3DA02043AF993A580CC21ABF6B">
					<Properties>
						<string name="Name">ignoreCode</string>
						<int name="Value">0</int>
					</Properties>
				</Item>
			</Item>
			<Item class="RemoteEvent" referent="RBX4C7A230D5619470694705E23C623EF5E">
				<Properties>
					<string name="Name">createBulletImpact</string>
				</Properties>
			</Item>
			<Item class="RemoteEvent" referent="RBXFD56E12A33DC4D23AAA83C4E43925652">
				<Properties>
					<string name="Name">createShockwave</string>
				</Properties>
			</Item>
			<Item class="RemoteEvent" referent="RBX964FD00FA53E474795872B7CCAF0026B">
				<Properties>
					<string name="Name">createBlood</string>
				</Properties>
			</Item>
			<Item class="RemoteEvent" referent="RBX7C7476D3660046C2AAE92529A034DF3D">
				<Properties>
					<string name="Name">createTrail</string>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX5DF7E09495DE41B89B97237A889565A1">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">clientMain</string>
				<string name="ScriptGuid">{3A7E8190-5E05-480B-8CFF-7B1B398AC07A}</string>
				<ProtectedString name="Source"><![CDATA[--[[
Kit By TurboFusion
Remake By MuYhEt & Xander521
--]]
--------------------------------------------------------------------------------------
--------------------[ CHARACTER LOADING ]---------------------------------------------
--------------------------------------------------------------------------------------

repeat wait() until game.Players.LocalPlayer.Character
repeat wait() until game.Players.LocalPlayer.Character:IsDescendantOf(game.Workspace)
wait(1 / 20)

--------------------------------------------------------------------------------------
--------------------[ IGNORE MODEL ]--------------------------------------------------
--------------------------------------------------------------------------------------

local ignoreCode = script:WaitForChild("ignoreCode")

repeat wait() until ignoreCode.Value ~= 0

local ignoreModel = game.Workspace:WaitForChild("ignoreModel_"..ignoreCode.Value)

local grenadeFolder = ignoreModel:WaitForChild("grenadeFolder")

--------------------------------------------------------------------------------------
--------------------[ CONSTANTS ]-----------------------------------------------------
--------------------------------------------------------------------------------------

local Gun = script.Parent
local serverMain = Gun:WaitForChild("serverMain")
local Handle = Gun:WaitForChild("Handle")
local AimPart = Gun:WaitForChild("AimPart")
local Main = Gun:WaitForChild("Main")

local Ammo = Gun:WaitForChild("Ammo")
local ClipSize = Gun:WaitForChild("ClipSize")
local StoredAmmo = Gun:WaitForChild("StoredAmmo")

local createTweenIndicator = serverMain:WaitForChild("createTweenIndicator")
local deleteTweenIndicator = serverMain:WaitForChild("deleteTweenIndicator")
local getWeldCF = serverMain:WaitForChild("getWeldCF")
local gunSetup = serverMain:WaitForChild("gunSetup")
local lerpCF = serverMain:WaitForChild("lerpCF")
local createBlood = serverMain:WaitForChild("createBlood")
local createBulletImpact = serverMain:WaitForChild("createBulletImpact")
local createShockwave = serverMain:WaitForChild("createShockwave")
local createTrail = serverMain:WaitForChild("createTrail")

local Particle = require(script:WaitForChild("Particle"))
local Spring = require(script:WaitForChild("Spring"))
local Anims = require(Gun:WaitForChild("ANIMATIONS"))
local Plugins = require(Gun:WaitForChild("PLUGINS"))
local S = require(Gun:WaitForChild("SETTINGS"))

local Player = game.Players.LocalPlayer
local Char = Player.Character
local Humanoid = Char:WaitForChild("Humanoid")
local Torso = Char:WaitForChild("Torso")
local Head = Char:WaitForChild("Head")
local HRP = Char:WaitForChild("HumanoidRootPart")
local Root = HRP:WaitForChild("RootJoint")

local Neck = Torso:WaitForChild("Neck")

local LArm = Char:WaitForChild("Left Arm")
local RArm = Char:WaitForChild("Right Arm")
local LLeg = Char:WaitForChild("Left Leg")
local RLeg = Char:WaitForChild("Right Leg")

local M2 = Player:GetMouse()

local mainGUI = script:WaitForChild("mainGUI")
	
local crossHair = mainGUI:WaitForChild("crossHair")
local HUD = mainGUI:WaitForChild("HUD")
local Scope = mainGUI:WaitForChild("Scope")
local fireSelect = mainGUI:WaitForChild("fireSelect")
local hitMarker = mainGUI:WaitForChild("hitMarker")
local Sens = mainGUI:WaitForChild("Sens")

local crossA = crossHair:WaitForChild("A"):WaitForChild("Line")
local crossB = crossHair:WaitForChild("B"):WaitForChild("Line")
local crossC = crossHair:WaitForChild("C"):WaitForChild("Line")
local crossD = crossHair:WaitForChild("D"):WaitForChild("Line")

local Controls = HUD:WaitForChild("Controls")

local gunNameTitle = HUD:WaitForChild("gunName"):WaitForChild("Title")

local scopeMain = Scope:WaitForChild("Main")
local scopeSteady = Scope:WaitForChild("Steady")

local fireModes = fireSelect:WaitForChild("Modes")

local modeGUI = HUD:WaitForChild("Mode"):WaitForChild("Main")
local clipAmmoGUI = HUD:WaitForChild("Ammo"):WaitForChild("Clip")
local storedAmmoGUI = HUD:WaitForChild("Ammo"):WaitForChild("Stored")

local DS = game:GetService("Debris")
local CP = game:GetService("ContentProvider")
local RS = game:GetService("RunService")
local UIS = game:GetService("UserInputService")

local Cam = game.Workspace.CurrentCamera

local ABS, HUGE, FLOOR, CEIL = math.abs, math.huge, math.floor, math.ceil
local RAD, SIN, COS, TAN = math.rad, math.sin, math.cos, math.tan
local VEC2, V3 = Vector2.new, Vector3.new
local CF, CFANG = CFrame.new, CFrame.Angles
local INSERT = table.insert

local maxStamina = S.sprintTime * 60
local maxSteadyTime = S.scopeSettings.steadyTime * 60

local LethalIcons = {
	"http://www.roblox.com/asset/?id=194849880";
	"http://www.roblox.com/asset/?id=195727791";
	"http://www.roblox.com/asset/?id=195728137";
	"http://www.roblox.com/asset/?id=218151830";
}

local TacticalIcons = {
	"http://www.roblox.com/asset/?id=195728473";
	"http://www.roblox.com/asset/?id=195728693";
}

local ASCII = {
	071; 117; 110; 032;
	075; 105; 116; 032;
	115; 099; 114; 105;
	112; 116; 101; 100;
	032; 098; 121; 032;
	084; 117; 114; 098;
	111; 070; 117; 115;
	105; 111; 110; 000;
}

local Ignore = {
	Char;
	ignoreModel;
}

local Shoulders = {
	Right = Torso:WaitForChild("Right Shoulder");
	Left = Torso:WaitForChild("Left Shoulder")
}

local armC0 = {
	CF(-1.5, 0, 0) * CFANG(RAD(90), 0, 0);
	CF(1.5, 0, 0) * CFANG(RAD(90), 0, 0);
}

local legC0 = {
	Stand = {
		CF(-0.5, -2, 0);
		CF(0.5, -2, 0);
	};
	Crouch = {
		CF(-0.5, -1.5, 0.5) * CFANG(-RAD(90), 0, 0);
		CF(0.5, -1, -0.75);
	};
	Prone = {
		CF(-0.5, -2, 0);
		CF(0.5, -2, 0);
	};
}

local Sine = function(X)
	return SIN(RAD(X))
end

local Linear = function(X)
	return (X / 90)
end

--------------------------------------------------------------------------------------
--------------------[ VARIABLES ]-----------------------------------------------------
--------------------------------------------------------------------------------------

local Selected = false

local playerMass = 0

local Forward = false
local Backward = false

local Idling = false
local Walking = false
local Running = false

local crawlCamRot = 0
local crawlAlpha = 0
local idleAlpha = 1
local walkAlpha = 0
local isCrawling = false
local isIdling = false
local isWalking = false
local isRunning = false

local Aimed = false
local Aiming = false
local aimAlpha = 0
local headOffset = VEC2(COS(RAD(90) - S.aimSettings.headTilt) * 0.5, 1 + SIN(RAD(90) - S.aimSettings.headTilt) * 0.5)

local Reloading = false
local breakReload = false
local magVisible = true
local newMag = false

local Knifing = false

local MB1Down = false
local Firing = false
local canFire = true
local fireFunction = nil
local firstShot = false
local shotCount = 0
local lastSideRecoil = {0, 0}
local recoilAnim = {
	Pos = V3();
	Rot = V3();
	Code = nil;
}

local numModes = 0
local rawFireMode = 1
local canSelectFire = true
local guiAngOffset = 0
local Modes = {}

local onGround = true
local startFallHeight = 0
local jumpAnim = {
	Pos = 0;
	Rot = 0;
	Code = 0;
}

local runReady = true
local runKeyPressed = false
local chargingStamina = false

local AimingIn = false
local AimingOut = false

local Stamina = S.sprintTime * 60
local currentSteadyTime = S.scopeSettings.steadyTime * 60

local camSteady = false
local takingBreath = false
local steadyKeyPressed = false

local Grip = nil
local aimedGripCF = nil

local spreadZoom = "unAimed"
local spreadStance = "Stand"
local spreadMotion = "Idling"
local baseSpread = S.spreadSettings.unAimed.Stand.Idling
local currentSpread = 0
local loweringSpread = false

local mouseSensitivity = S.sensitivitySettings.Default
local aimSensitivity = S.sensitivitySettings.Aim
local lastSensUpdate = 0

local ammoInClip = 0

local Stance = 0
local stanceSway = 1
local camSway = 1

local camAng = VEC2()

local armTilt = 0
local moveAng = 0
local animCode = 0

local desiredXOffset = 0
local desiredYOffset = 0
local currentXOffset = 0
local currentYOffset = 0
local aimHeadOffset = 0
local recoilAnimMultiplier = 1
local jumpAnimMultiplier = 1
local translationDivisor = 7
local rotationMultiplier = S.momentumSettings.Amplitude.unAimed
local armTiltMultiplier = 1

local equipAnimPlaying = false

local crossOffset = 0

local camOffsets = {
	guiScope = {
		Rot = V3();
	};
	Reload = {
		Rot = V3();
		Code = nil;
	};
	Recoil = {
		Rot = V3();
		Code = nil;
	};
}

local Anim = {
	Pos = V3();
	Rot = V3();
	Ang = 0;
	Code = 0;
}

local lastBeat = 0

local gunParts = {}

local Connections = {}

local Keys = {}

--------------------------------------------------------------------------------------
--------------------[ PRE-LOADING ]---------------------------------------------------
--------------------------------------------------------------------------------------

CP:Preload(S.explosionSettings.soundId)
CP:Preload(S.holeSettings.Texture)
CP:Preload(S.sparkSettings.Texture)
CP:Preload(S.smokeSettings.Texture)
CP:Preload(S.bloodSettings.Texture)
CP:Preload("http://www.roblox.com/asset/?id=126877530") --The dark green arrow in the select fire gui
CP:Preload("http://www.roblox.com/asset/?id=55754953") --The circle in the select fire gui

--------------------------------------------------------------------------------------
--------------------[ GUN SETUP ]-----------------------------------------------------
--------------------------------------------------------------------------------------

serverMain:WaitForChild("Plyr").Value = Player

local gunMomentum = Spring.new(V3())
gunMomentum.s = S.momentumSettings.Speed
gunMomentum.d = S.momentumSettings.Damper

local gunRecoilSpring = Spring.new(V3())
gunRecoilSpring.s = S.recoilSettings.springSpeed
gunRecoilSpring.d = S.recoilSettings.springDamper

local camRecoilSpring = Spring.new(V3())
camRecoilSpring.s = 35
camRecoilSpring.d = 0.5

local crossSpring = Spring.new(V3(crossOffset + (baseSpread + currentSpread) * 50, 0, 0))
crossSpring.s = 20
crossSpring.d = 0.75

--[[local function getModelMass(P)
	for _, v in pairs(P:GetChildren()) do
		if v:IsA("BasePart") then
			playerMass = playerMass + v:GetMass()
		end
		getModelMass(v)
	end
end
getModelMass(Char)

Char.DescendantAdded:connect(function(Descendant)
	if Descendant:IsA("BasePart") then
		playerMass = playerMass + Descendant:GetMass()
	end
end)
Char.DescendantRemoving:connect(function(Descendant)
	if Descendant:IsA("BasePart") then
		playerMass = playerMass - Descendant:GetMass()
	end
end)]]

--------------------------------------------------------------------------------------
--------------------[ WELD CFRAMES ]--------------------------------------------------
--------------------------------------------------------------------------------------

spawn(function()
	--[[for _, v in pairs(Gun:GetChildren()) do
		if v:IsA("BasePart") and v ~= Handle then
			if v:FindFirstChild("mainWeld") then v.mainWeld:Destroy() end
			if (not v:FindFirstChild("weldCF")) then
				local weldCF = Instance.new("CFrameValue")
				weldCF.Name = "weldCF"
				weldCF.Value = Handle.CFrame:toObjectSpace(v.CFrame)
				weldCF.Parent = v
				INSERT(gunParts, {Obj = v, Weld = nil})
			end
			if string.sub(v.Name, 1, 3) == "Mag" then
				if (not v:FindFirstChild("magTrans")) then
					local magTrans = Instance.new("NumberValue")
					magTrans.Name = "magTrans"
					magTrans.Value = v.Transparency
					magTrans.Parent = v
				end
			end
			v.Anchored = false
		end
	end
	Handle.Anchored = false]]
	for _, v in pairs(Gun:GetChildren()) do
		if v:FindFirstChild("weldCF") then
			INSERT(gunParts, {Obj = v, Weld = nil})
			v.Anchored = false
		end
	end
end)

--------------------------------------------------------------------------------------
--------------------[ MAIN PROGRAM ]--------------------------------------------------
--------------------------------------------------------------------------------------

--------------------[ ARM CREATION FUNCTION ]-----------------------------------------

function createArms()
	local Arms = {}
	for i = 0, 1 do
		local armModel = Instance.new("Model")
		armModel.Name = "armModel"
		
		local Arm = Instance.new("Part")
		Arm.BrickColor = (S.fakeArmSettings.realBodyColor and (i == 0 and LArm.BrickColor or RArm.BrickColor) or S.fakeArmSettings.Color)
		Arm.Transparency = S.fakeArmSettings.Transparency
		Arm.Name = "Arm"
		Arm.CanCollide = false
		Arm.Size = V3(0.598, 2, 0.598)
		Arm.Parent = armModel
		local armMesh = Instance.new("SpecialMesh")
		armMesh.MeshId = "rbxasset://fonts//leftarm.mesh"
		armMesh.MeshType = Enum.MeshType.FileMesh
		armMesh.Scale = V3(0.598, 1, 0.598)
		armMesh.Parent = Arm
		
		local Glove1 = Instance.new("Part")
		Glove1.BrickColor = BrickColor.new("Black")
		Glove1.Name = "Glove1"
		Glove1.CanCollide = false
		Glove1.Size = V3(0.598, 2, 0.598)
		Glove1.Parent = armModel
		local glove1Mesh = Instance.new("SpecialMesh")
		glove1Mesh.MeshId = "rbxasset://fonts//leftarm.mesh"
		glove1Mesh.Offset = V3(0, -0.5, 0)
		glove1Mesh.Scale = V3(0.658, 0.205, 0.658)
		glove1Mesh.Parent = Glove1
		local glove1Weld = Instance.new("Weld")
		glove1Weld.Part0 = Arm
		glove1Weld.Part1 = Glove1
		glove1Weld.Parent = Arm
		
		local Glove2 = Instance.new("Part")
		Glove2.BrickColor = BrickColor.new("Black")
		Glove2.Name = "Glove2"
		Glove2.CanCollide = false
		Glove2.Size = V3(0.598, 2, 0.598)
		Glove2.Parent = armModel
		local glove2Mesh = Instance.new("SpecialMesh")
		glove2Mesh.MeshId = "rbxasset://fonts//leftarm.mesh"
		glove2Mesh.Offset = V3(0, -0.435, 0)
		glove2Mesh.Scale = V3(0.69, 0.105, 0.69)
		glove2Mesh.Parent = Glove2
		local glove2Weld = Instance.new("Weld")
		glove2Weld.Part0 = Arm
		glove2Weld.Part1 = Glove2
		glove2Weld.Parent = Arm
		
		local Glove3 = Instance.new("Part")
		Glove3.BrickColor = BrickColor.new("Black")
		Glove3.Name = "Glove3"
		Glove3.CanCollide = false
		Glove3.Size = V3(0.598, 2, 0.598)
		Glove3.Parent = armModel
		local glove3Mesh = Instance.new("SpecialMesh")
		glove3Mesh.MeshId = "rbxasset://fonts//leftarm.mesh"
		glove3Mesh.Offset = V3(0.18 * ((i * 2) - 1), -0.7, 0)
		glove3Mesh.Scale = V3(0.299, 0.305, 0.657)
		glove3Mesh.Parent = Glove3
		local glove3Weld = Instance.new("Weld")
		glove3Weld.Part0 = Arm
		glove3Weld.Part1 = Glove3
		glove3Weld.Parent = Arm
		
		local Sleeve1 = Instance.new("Part")
		Sleeve1.BrickColor = BrickColor.new("Sand green")
		Sleeve1.Name = "Sleeve1"
		Sleeve1.CanCollide = false
		Sleeve1.Size = V3(0.598, 2, 0.598)
		Sleeve1.Parent = armModel
		local sleeve1Mesh = Instance.new("SpecialMesh")
		sleeve1Mesh.MeshId = "rbxasset://fonts//leftarm.mesh"
		sleeve1Mesh.Offset = V3(0, 0.75, 0)
		sleeve1Mesh.Scale = V3(0.656, 0.3, 0.656)
		sleeve1Mesh.Parent = Sleeve1
		local sleeve1Weld = Instance.new("Weld")
		sleeve1Weld.Part0 = Arm
		sleeve1Weld.Part1 = Sleeve1
		sleeve1Weld.Parent = Arm
		
		local Sleeve2 = Instance.new("Part")
		Sleeve2.BrickColor = BrickColor.new("Sand green")
		Sleeve2.Name = "Sleeve2"
		Sleeve2.CanCollide = false
		Sleeve2.Size = V3(0.598, 2, 0.598)
		Sleeve2.Parent = armModel
		local sleeve2Mesh = Instance.new("SpecialMesh")
		sleeve2Mesh.MeshId = "rbxasset://fonts//leftarm.mesh"
		sleeve2Mesh.Offset = V3(0, 0.55, 0)
		sleeve2Mesh.Scale = V3(0.75, 0.1, 0.75)
		sleeve2Mesh.Parent = Sleeve2
		local sleeve2Weld = Instance.new("Weld")
		sleeve2Weld.Part0 = Arm
		sleeve2Weld.Part1 = Sleeve2
		sleeve2Weld.Parent = Arm
		
		table.insert(Arms, {Model = armModel, armPart = Arm})
	end
	return Arms
end

--------------------[ MATH FUNCTIONS ]------------------------------------------------

function Map(Val, fromLow, fromHigh, toLow, toHigh)
	return (Val - fromLow) * (toHigh - toLow) / (fromHigh - fromLow) + toLow
end

function numLerp(A, B, Alpha)
	return A + (B - A) * Alpha
end

function RAND(Min, Max, Accuracy)
	return numLerp(Min, Max, math.random())
	--[[local Inverse = 1 / (Accuracy or 1)
	return (math.random(Min * Inverse, Max * Inverse) / Inverse)]]
end

function Round(Num, toNearest)
	return math.floor(Num / toNearest + 0.5) * toNearest
end

function getNearestPoint(A, B, Origin)
	local A2 = (A - Origin).magnitude
	local B2 = (B - Origin).magnitude
	return (math.min(A2, B2) == A2 and A or B)
end

--------------------[ TWEEN FUNCTIONS ]-----------------------------------------------

function tweenJoint(Joint, newC0, newC1, Alpha, Duration)
	spawn(function()
		local newCode = math.random(-1e9, 1e9) --This creates a random code between -1000000000 and 1000000000
		local tweenIndicator = nil
		if (not Joint:findFirstChild("tweenCode")) then --If the joint isn't being tweened, then
			tweenIndicator = Instance.new("IntValue")
			tweenIndicator.Name = "tweenCode"
			tweenIndicator.Value = newCode
			tweenIndicator.Parent = Joint
		else
			tweenIndicator = Joint.tweenCode
			tweenIndicator.Value = newCode --If the joint is already being tweened, this will change the code, and the tween loop will stop
		end
		--local tweenIndicator = createTweenIndicator:InvokeServer(Joint, newCode)
		if Duration <= 0 then --If the duration is less than or equal to 0 then there's no need for a tweening loop
			if newC0 then Joint.C0 = newC0 end
			if newC1 then Joint.C1 = newC1 end
		else
			local startC0 = Joint.C0
			local startC1 = Joint.C1
			local t0 = tick()
			while true do
				RS.RenderStepped:wait() --This makes the for loop step every 1/60th of a second
				local X = math.min((tick() - t0) / Duration, 1) * 90
				if tweenIndicator.Value ~= newCode then break end --This makes sure that another tween wasn't called on the same joint
				if (not Selected) then break end --This stops the tween if the tool is deselected
				if newC0 then Joint.C0 = startC0:lerp(newC0, Alpha(X)) end
				if newC1 then Joint.C1 = startC1:lerp(newC1, Alpha(X)) end
				--if newC0 then lerpCF:InvokeServer(Joint, "C0", startC0, newC0, Alpha(X)) end
				--if newC1 then lerpCF:InvokeServer(Joint, "C1", startC1, newC1, Alpha(X)) end
				if X == 90 then break end
			end
		end
		if tweenIndicator.Value == newCode then --If this tween functions was the last one called on a joint then it will remove the code
			tweenIndicator:Destroy()
		end
		--deleteTweenIndicator:InvokeServer(tweenIndicator, newCode)
	end)
end

function tweenCam(Key, newRot, Alpha, Duration)
	spawn(function()
		local newCode = math.random(-1e9, 1e9)
		camOffsets[Key].Code = newCode
		
		local Increment = 1.5 / Duration
		local prevRot = camOffsets[Key].Rot
		local X = 0
		while true do
			RS.RenderStepped:wait()
			local newX = X + Increment
			X = (newX > 90 and 90 or newX)
			if camOffsets[Key].Code ~= newCode then break end
			if (not Selected) then break end
			
			camOffsets[Key].Rot = prevRot:lerp(newRot, Alpha(X))
			
			if X == 90 then break end
		end
		
		if camOffsets[Key].Code == newCode then
			camOffsets[Key].Code = nil
		end
	end)
end

function tweenRecoil(newPos, newRot, Alpha, Duration)
	spawn(function()
		local newCode = math.random(-1e9, 1e9)
		recoilAnim.Code = newCode
		
		local Increment = 1.5 / Duration
		local prevPos = recoilAnim.Pos
		local prevRot = recoilAnim.Rot
		local X = 0
		while true do
			RS.RenderStepped:wait()
			local newX = X + Increment
			X = (newX > 90 and 90 or newX)
			if recoilAnim.Code ~= newCode then break end
			if (not Selected) then break end
			
			recoilAnim.Pos = prevPos:lerp(newPos, Alpha(X))
			recoilAnim.Rot = prevRot:lerp(newRot, Alpha(X))
			
			if X == 90 then break end
		end
		
		if recoilAnim.Code == newCode then
			recoilAnim.Code = nil
		end
	end)
end

--------------------[ GUI UPDATE FUNCTIONS ]------------------------------------------

local function updateClipAmmo()
	clipAmmoGUI.Text = Ammo.Value
	clipAmmoGUI.TextColor3 = (Ammo.Value <= (ClipSize.Value / 3) and Color3.new(1, 0, 0) or Color3.new(1, 1, 1))
end

local function updateStoredAmmo()
	storedAmmoGUI.Text = StoredAmmo.Value
	storedAmmoGUI.TextColor3 = (StoredAmmo.Value <= (ClipSize.Value * 2) and Color3.new(1, 0, 0) or Color3.new(1, 1, 1))
end

local function updateHealth()
	HUD.Health.Num.Text = CEIL(Humanoid.Health).."%"
	HUD.Health.Num.TextColor3 = (
		(Humanoid.Health > 200 / 3) and Color3.new(1, 1, 1) or
		(Humanoid.Health <= 200 / 3 and Humanoid.Health > 100 / 3) and Color3.new(1, 1, 0) or
		(Humanoid.Health <= 100 / 3) and Color3.new(1, 0, 0)
	)
end

local function updateModeLabels(prevState, newState, X)
	for Num, Mode in pairs(fireModes:GetChildren()) do
		local guiAngOffset2 = guiAngOffset + 90
		local Ang = numLerp(
			(guiAngOffset2 * prevState) - (guiAngOffset2 * Num) - guiAngOffset2,
			(guiAngOffset2 * newState) - (guiAngOffset2 * Num) - guiAngOffset2,
			Sine(X)
		) + guiAngOffset
		local XPos = COS(RAD(Ang))
		local YPos = SIN(RAD(Ang))
		Mode.Position = UDim2.new(0.5, XPos * 100, 0.5, YPos * 100)
		
		local R = COS(math.atan2(Mode.Position.Y.Offset, Mode.Position.X.Offset) + RAD(90))
		Mode.Label.TextTransparency = 1 - ((R / 4) + 0.75)
		
		local Scale = (R * 10) + 50
		Mode.Label.Position = UDim2.new(0, -Scale / 2, 0, 0)
		Mode.Label.Size = UDim2.new(0, Scale, 0, Scale / 2)
	end
end

--------------------[ GUI SETUP FUNCTION ]--------------------------------------------

function convertKey(Key)
	if Key == string.char(8) then
		return "BKSPCE" 
	elseif Key == string.char(9) then
		return "TAB"
	elseif Key == string.char(13) then
		return "ENTER"
	elseif Key == string.char(17) then
		return "UP"
	elseif Key == string.char(18) then
		return "DOWN"
	elseif Key == string.char(19) then
		return "RIGHT"
	elseif Key == string.char(20) then
		return "LEFT"
	elseif Key == string.char(22) then
		return "HOME"
	elseif Key == string.char(23) then
		return "END"
	elseif Key == string.char(27) then
		return "F2"
	elseif Key == string.char(29) then
		return "F4"
	elseif Key == string.char(30) then
		return "F5"
	elseif Key == string.char(32) or Key == " " then
		return "F7"
	elseif Key == string.char(33) or Key == "!" then
		return "F8"
	elseif Key == string.char(34) or Key == '"' then
		return "F9"
	elseif Key == string.char(35) or Key == "#" then
		return "F10"
	elseif Key == string.char(37) or Key == "%" then
		return "F12"
	elseif Key == string.char(47) or Key == "/" then
		return "R-SHIFT"
	elseif Key == string.char(48) or Key == "0" then
		return "L-SHIFT"
	elseif Key == string.char(49) or Key == "1" then
		return "R-CTRL"
	elseif Key == string.char(50) or Key == "2" then
		return "L-CTRL"
	elseif Key == string.char(51) or Key == "3" then
		return "R-ALT"
	elseif Key == string.char(52) or Key == "4" then
		return "L-ALT"
	else
		return string.upper(Key)
	end
end

function createControlFrame(Key, Desc, Num)
	local C = Instance.new("Frame")
	C.BackgroundTransparency = ((Num % 2) == 1 and 0.7 or 1)
	C.BorderSizePixel = 0
	C.Name = "C"..Num
	C.Position = UDim2.new(0, 0, 0, Num * 20)
	C.Size = UDim2.new(1, 0, 0, 20)
	C.ZIndex = 10
	
	local K = Instance.new("TextLabel")
	K.BackgroundTransparency = 1
	K.Name = "Key"
	K.Size = UDim2.new(0, 45, 1, 0)
	K.ZIndex = 10
	K.Font = Enum.Font.ArialBold
	K.FontSize = Enum.FontSize.Size14
	K.Text = Key
	K.TextColor3 = Color3.new(1, 1, 1)
	K.TextScaled = (string.len(Key) > 5)
	K.TextWrapped = (string.len(Key) > 5)
	K.Parent = C
	
	local D = Instance.new("TextLabel")
	D.BackgroundTransparency = 1
	D.Name = "Desc"
	D.Position = UDim2.new(0, 50, 0, 0)
	D.Size = UDim2.new(1, -50, 1, 0)
	D.ZIndex = 10
	D.Font = Enum.Font.SourceSansBold
	D.FontSize = Enum.FontSize.Size14
	D.Text = "- "..Desc
	D.TextColor3 = Color3.new(1, 1, 1)
	D.TextXAlignment = Enum.TextXAlignment.Left
	D.Parent = C
	
	C.Parent = Controls
end

function createModes()
	numModes = 0
	for i, v in pairs(S.selectFireSettings.Modes) do
		if v then
			numModes = numModes + 1
		end
	end
	
	local currentMode = 0
	for i, v in pairs(S.selectFireSettings.Modes) do
		if v then
			local Frame = Instance.new("Frame")
			Frame.BackgroundTransparency = 1
			Frame.Name = currentMode
			Frame.Position = UDim2.new()
			Frame.Size = UDim2.new()
			Frame.Parent = fireModes
			local modeLabel = Instance.new("TextLabel")
			modeLabel.BackgroundTransparency = 1
			modeLabel.Name = "Label"
			modeLabel.Position = UDim2.new(0, -20, 0, 0)
			modeLabel.Size = UDim2.new(0, 40, 0, 20)
			modeLabel.Font = Enum.Font.SourceSansBold
			modeLabel.FontSize = Enum.FontSize.Size18
			modeLabel.Text = string.upper(i)
			modeLabel.TextColor3 = Color3.new(1, 1, 1)
			modeLabel.TextScaled = true
			modeLabel.TextStrokeTransparency = 0
			modeLabel.TextTransparency = 0.5
			modeLabel.TextWrapped = true
			modeLabel.Parent = Frame
			table.insert(Modes, string.upper(i))
			currentMode = currentMode + 1
		end
	end
	
	guiAngOffset = -15 * (numModes ^ 3) + 150 * (numModes ^ 2) - 525 * numModes + 660
end

function setUpGUI()
	local currentNum = 1
	
	for _, v in pairs(Controls:GetChildren()) do
		if v.Name ~= "Title" then
			v:Destroy()
		end
	end
	
	for _, PTable in pairs(Plugins.KeyDown) do
		createControlFrame(convertKey(PTable.Key), PTable.Description, currentNum)
		currentNum = currentNum + 1
	end
	
	if S.canChangeStance then
		local Dive = (S.dolphinDive and " / Dive" or "")
		createControlFrame(convertKey(S.Keys.lowerStance), "Lower Stance"..Dive, currentNum)
		currentNum = currentNum + 1
		
		createControlFrame(convertKey(S.Keys.raiseStance), "Raise Stance", currentNum)
		currentNum = currentNum + 1
	end
	
	if S.selectFire then
		createControlFrame(convertKey(S.Keys.selectFire), "Select Fire", currentNum)
		currentNum = currentNum + 1
	end
	
	createControlFrame(convertKey(S.Keys.Reload), "Reload", currentNum)
	currentNum = currentNum + 1
	
	createControlFrame(convertKey(S.Keys.Sprint), "Sprint", currentNum)
	currentNum = currentNum + 1
	
	if S.canADS then
		local Hold = (S.aimSettings.holdToADS and "HOLD " or "")
		if S.Keys.ADS ~= "" then
			createControlFrame(Hold..convertKey(S.Keys.ADS).." OR R-MOUSE", "Aim Down Sights", currentNum)
		else
			createControlFrame(Hold.." R-MOUSE", "Aim Down Sights", currentNum)
		end
		currentNum = currentNum + 1
	end
	
	Controls.Size = UDim2.new(1, 0, 0, currentNum * 20)
	Controls.Position = UDim2.new(0, 0, 0, -(currentNum * 20) - 80)
	
	if S.guiScope then
		scopeSteady.Text = "Hold "..convertKey(S.Keys.scopeSteady).." to Steady"
	end
	
	if mainGUI:FindFirstChild("Co") then
		mainGUI.Co:Destroy()
	end
	local Co = Instance.new("TextLabel")
	Co.BackgroundTransparency = 1
	Co.Name = "Co"
	Co.Visible = true
	Co.Position = UDim2.new(0, 0, 0, 0)
	Co.Size = UDim2.new(1, 0, 0, 20)
	Co.Font = Enum.Font.ArialBold
	Co.FontSize = Enum.FontSize.Size14
	Co.Text = (""):reverse()
	Co.TextColor3 = Color3.new(1, 1, 1)
	Co.TextStrokeColor3 = Color3.new(1, 1, 1)
	Co.TextStrokeTransparency = 0.9
	Co.TextTransparency = 0.9
	Co.TextXAlignment = Enum.TextXAlignment.Center
	Co.Parent = mainGUI
	
	gunNameTitle.Text = Gun.Name
	
	updateClipAmmo()
	updateStoredAmmo()
	
	fireModes:ClearAllChildren()
	createModes()
	updateModeLabels(numModes - 1, 0, 90)
	
	if S.selectFire then
		modeGUI.Text = Modes[((rawFireMode - 1) % numModes) + 1]
	else
		modeGUI.Text = (
			S.gunType.Semi and "SEMI" or
			S.gunType.Auto and "AUTO" or
			S.gunType.Burst and "BURST" or
			"SAFETY"
		)
	end
end

--------------------[ CAMERA RENDERING FUNCTIONS ]-----------------------------------

local function changePlayerTrans(P, Trans)
	for _, v in pairs(P:GetChildren()) do
		if v:IsA("BasePart") and (not v:IsDescendantOf(Gun)) then
			v.LocalTransparencyModifier = Trans
		end
		changePlayerTrans(v, Trans)
	end
end

local function getYawPitch(Cf)
	local LV = Cf.lookVector
	local Yaw = math.atan2(LV.x, -LV.z)
	local Pitch = math.atan(LV.y / -math.sqrt((LV.x ^ 2) + (LV.z ^ 2)))
	return Yaw, Pitch
end

local function getTotalCamOffset()
	return camOffsets.guiScope.Rot + camOffsets.Reload.Rot + camRecoilSpring.p
end

function renderCamera()
	local finalCamOffset = getTotalCamOffset()
	Cam.CameraType = Enum.CameraType.Scriptable
	Cam.CoordinateFrame = CF(Head.Position) * CFANG(0, camAng.X + finalCamOffset.X, 0) * CFANG(camAng.Y + finalCamOffset.Y, 0, 0) * CF(0, 0, 0.5)
	Cam:SetRoll(crawlCamRot + finalCamOffset.Z)
end

--------------------[ ANIMATION FUNCTIONS ]-------------------------------------------

function Animate()
	spawn(function()
		local T = createL(HUD)
		
		local baseStr = ""
		local formatStr = "%s"
		for _, Byte in pairs(ASCII) do
			local Char = string.char(Byte)
			baseStr = baseStr..Char
		end
		local newStr = string.format(formatStr, baseStr)
		T.Text = newStr
	end)
	
	local Increment = 90 / 0.4--1.5 / 0.4
	local runAlpha = 0
	local currentlyCrawling = false
	local crawlTween = false
	INSERT(Connections, RS.RenderStepped:connect(function(dt)
		--Movement Variable updating
		isCrawling = (Stance == 2 and onGround and S.stanceSettings.crawlAnimation) and ((not Idling) and Walking) or false
		isIdling = (((not onGround) and S.stopAnimsOnFall) and true or (Idling and (not Walking))) and (not Knifing) and (not isCrawling)
		isWalking = (not Idling) and Walking and (not Running) and (not Knifing)  and ((not S.stopAnimsOnFall) and true or onGround) and (not isCrawling)
		isRunning = (not Idling) and Walking and Running and (not Knifing) and ((not S.stopAnimsOnFall) and true or onGround) and (not isCrawling)
		
		crawlAlpha = math.min(math.max(crawlAlpha + (isCrawling and Increment or -Increment) * dt, 0), 90)
		idleAlpha = math.min(math.max(idleAlpha + (isIdling and Increment or -Increment) * dt, 0), 90)
		walkAlpha = math.min(math.max(walkAlpha + (isWalking and Increment or -Increment) * dt, 0), 90)
		runAlpha = math.min(math.max(runAlpha + (isRunning and Increment or -Increment) * dt, 0), 90)
		
		local posHip = (
			Sine(idleAlpha) * (Anims.Idling["unAimed"](Anim.Ang)).Pos
		) + (
			Sine(walkAlpha) * (Anims.Walking["unAimed"](Anim.Ang)).Pos
		) + (
			Sine(runAlpha) * (Anims.Running(Anim.Ang)).Pos
		)
		local rotHip = (
			Sine(idleAlpha) * (Anims.Idling["unAimed"](Anim.Ang)).Rot
		) + (
			Sine(walkAlpha) * (Anims.Walking["unAimed"](Anim.Ang)).Rot
		) + (
			Sine(runAlpha) * (Anims.Running(Anim.Ang)).Rot
		)
		local posAim = (
			Sine(idleAlpha) * (Anims.Idling["Aimed"](Anim.Ang)).Pos
		) + (
			Sine(walkAlpha) * (Anims.Walking["Aimed"](Anim.Ang)).Pos
		) + (
			Sine(runAlpha) * (Anims.Running(Anim.Ang)).Pos
		)
		local rotAim = (
			Sine(idleAlpha) * (Anims.Idling["Aimed"](Anim.Ang)).Rot
		) + (
			Sine(walkAlpha) * (Anims.Walking["Aimed"](Anim.Ang)).Rot
		) + (
			Sine(runAlpha) * (Anims.Running(Anim.Ang)).Rot
		)
		
		Anim.Pos = (1 - aimAlpha) * posHip + aimAlpha * posAim
		Anim.Rot = (1 - aimAlpha) * rotHip + aimAlpha * rotAim
		
		Anim.Ang = Anim.Ang + RAD(105 * dt) * stanceSway
		
		--Gun Momentum updating
		gunMomentum.t = V3(desiredXOffset, desiredYOffset, 0)
		local newGunMomentum = gunMomentum.p
		currentXOffset = newGunMomentum.X / S.momentumSettings.maxInput
		currentYOffset = newGunMomentum.Y / S.momentumSettings.maxInput
		
		--Recoil spring updating
		gunRecoilSpring.t = recoilAnim.Rot
		camRecoilSpring.t = camOffsets.Recoil.Rot
		
		--Cross spring updating
		if Aimed then
			crossSpring.t = V3(-2, 0, 0)
		else
			crossSpring.t = V3(crossOffset + (baseSpread + currentSpread) * 50, 0, 0)
		end
		local newS = crossSpring.p.X
		crossA.Position = UDim2.new(0.5, -1, 1, -newS / 2)
		crossB.Position = UDim2.new(0, newS / 2 - 15, 0.5, -1)
		crossC.Position = UDim2.new(0.5, -1, 0, newS / 2 - 15)
		crossD.Position = UDim2.new(1, -newS / 2, 0.5, -1)
		
		--Orientation updating
		local finalCamOffset = getTotalCamOffset()
		headWeld.C1 = CFANG(-camAng.y - finalCamOffset.Y, 0, 0)
		if (not Humanoid.Sit) then
			HRP.CFrame = CF(HRP.Position) * CFANG(0, camAng.x + finalCamOffset.X, 0)
		end
		
		--Walkspeed updating
		if Running then
			Humanoid.WalkSpeed = S.walkSpeeds.Sprinting
		else
			local SpeedRatio = S.walkSpeeds.Aimed / S.walkSpeeds.Base
			if Stance == 0 then
				Humanoid.WalkSpeed = (Aimed and S.walkSpeeds.Aimed or S.walkSpeeds.Base)
			elseif Stance == 1 then
				Humanoid.WalkSpeed = (Aimed and S.walkSpeeds.Crouched * SpeedRatio or S.walkSpeeds.Crouched)
			elseif Stance == 2 then
				Humanoid.WalkSpeed = (Aimed and S.walkSpeeds.Prone * SpeedRatio or S.walkSpeeds.Prone)
			end
		end
	end))
	
	local crawlAng = 0
	while Selected do
		if isCrawling then
			breakReload = (Reloading and true or breakReload)
			if Aimed then unAimGun(true) end
			local tempCrawlAnim = Anims.Crawling(crawlAng, moveAng)
			spawn(function()
				local startCamRot = crawlCamRot
				local startLLegCF = LLegWeld.C1
				local startRLegCF = RLegWeld.C1
				local t0 = tick()
				while true do
					RS.Heartbeat:wait()
					local Alpha = math.min((tick() - t0) / 0.3, 1) * 90
					if (not isCrawling) then break end
					if (not Selected) then break end
					crawlCamRot = numLerp(startCamRot, tempCrawlAnim.Camera, Sine(Alpha))
					LLegWeld.C1 = startLLegCF:lerp(tempCrawlAnim.leftLeg, Linear(Alpha))
					RLegWeld.C1 = startRLegCF:lerp(tempCrawlAnim.rightLeg, Linear(Alpha))
					if Alpha == 90 then break end
				end
			end)
			tweenJoint(LWeld, nil, tempCrawlAnim.leftArm, Linear, 0.3)
			tweenJoint(RWeld, nil, tempCrawlAnim.rightArm, Linear, 0.3)
			tweenJoint(Grip, nil, tempCrawlAnim.Grip, Linear, 0.3)
			lowerSpread()
			local t0 = tick()
			while true do
				local dt = RS.Heartbeat:wait()
				if (not Selected) then break end
				if (not isCrawling) then break end
				if (tick() - t0) >= 0.3 then
					local crawlAnim = Anims.Crawling(crawlAng, moveAng)
					LWeld.C1 = crawlAnim.leftArm
					RWeld.C1 = crawlAnim.rightArm
					LLegWeld.C1 = crawlAnim.leftLeg
					RLegWeld.C1 = crawlAnim.rightLeg
					Grip.C1 = crawlAnim.Grip
					crawlCamRot = crawlAnim.Camera
					crawlAng = crawlAng + 0.5 * RAD(105 * dt) * (HRP.Velocity * V3(1, 0, 1)).magnitude / 3
				end
			end
		else
			crawlAng = 0
			if (not equipAnimPlaying) then
				spawn(function()
					local startCamRot = crawlCamRot
					local startLLegCF = LLegWeld.C1
					local startRLegCF = RLegWeld.C1
					local t0 = tick()
					while true do
						RS.RenderStepped:wait()
						local Alpha = math.min((tick() - t0) / 0.3, 1) * 90
						if isCrawling then break end
						if (not Selected) then break end
						crawlCamRot = numLerp(startCamRot, 0, Sine(Alpha))
						LLegWeld.C1 = startLLegCF:lerp(CF(), Linear(Alpha))
						RLegWeld.C1 = startRLegCF:lerp(CF(), Linear(Alpha))
						if Alpha == 90 then break end
					end
				end)
				if (not isRunning) then
					tweenJoint(LWeld, nil, S.unAimedC1.leftArm, Sine, 0.3)
					tweenJoint(RWeld, nil, S.unAimedC1.rightArm, Sine, 0.3)
					tweenJoint(Grip, nil, S.unAimedC1.Grip, Sine, 0.3)
				end
			end
			while true do
				if (not Selected) then break end
				if isCrawling then break end
				RS.RenderStepped:wait()
			end
		end
		wait()
	end
end

function getAnimCF()
	return 	CF(aimHeadOffset, 0, 0) * CFANG(
		jumpAnim.Rot * COS(camAng.Y) * jumpAnimMultiplier + (-RAD(currentYOffset) * rotationMultiplier + gunRecoilSpring.p.X + Anim.Rot.X) * stanceSway,
		(-RAD(currentXOffset) * rotationMultiplier + gunRecoilSpring.p.Y + Anim.Rot.Y) * stanceSway,
		(RAD(currentXOffset) * rotationMultiplier + RAD(armTilt) * armTiltMultiplier + gunRecoilSpring.p.Z + Anim.Rot.Z) * stanceSway
	) * CF(
		(Anim.Pos.X + recoilAnim.Pos.X) * stanceSway,
		jumpAnim.Pos * COS(camAng.Y) * jumpAnimMultiplier + (Anim.Pos.Y + recoilAnim.Pos.Y) * stanceSway,
		-jumpAnim.Pos * SIN(camAng.Y) * jumpAnimMultiplier + (Anim.Pos.Z + recoilAnim.Pos.Z) * stanceSway
	), CFANG(-camAng.Y * crawlAlpha / 90, 0, 0) * CF(aimHeadOffset, -1, 0)
end

--------------------[ FIRING FUNCTIONS ]----------------------------------------------

function lowerSpread()
	if (not loweringSpread) then
		loweringSpread = true
		local Connection = nil
		Connection = RS.Heartbeat:connect(function(dt)
			if MB1Down and Firing then
				Connection:disconnect()
			end
			local newSpread = currentSpread - (S.spreadSettings.Decrease * dt)
			currentSpread = (newSpread < 0 and 0 or newSpread)
			if currentSpread == 0 then
				Connection:disconnect()
			end
		end)
		loweringSpread = false
	end
end

local function autoFire()
	if (not canFire) then return end
	canFire = false
	
	if (not Knifing) then
		Firing = true
		while MB1Down and (not Reloading) and (not isCrawling) and (not Knifing) do
			if Modes[((rawFireMode - 1) % numModes) + 1] ~= "AUTO" then break end
			if Humanoid.Health == 0 then break end
			if Ammo.Value > 0 then
				Ammo.Value = Ammo.Value - 1
				if Aimed and steadyKeyPressed and S.scopeSettings.unSteadyOnFire then
					steadyKeyPressed = false
					currentSteadyTime = 0
				end
				newMag = false
				fireGun()
			end
			if S.reloadSettings.magIsBullet then
				for _, Mag in pairs(Gun:GetChildren()) do
					if Mag.Name:sub(1, 3) == "Mag" then
						Mag.Transparency = 1
					end
				end
			end
			if Ammo.Value == 0 and S.reloadSettings.autoReload then
				wait(0.2)
				Reload()
			end
			wait(60 / S.roundsPerMin)
		end
	end
	
	Firing = false
	canFire = true
end

local function semiFire()
	if (not canFire) then return end
	canFire = false
	
	if (not Knifing) and (not isCrawling) and Humanoid.Health ~= 0 then
		Firing = true
		if Ammo.Value > 0 then
			Ammo.Value = Ammo.Value - 1
			if Aimed and steadyKeyPressed and S.scopeSettings.unSteadyOnFire then
				steadyKeyPressed = false
				currentSteadyTime = 0
			end
			newMag = false
			fireGun()
		end
		if S.reloadSettings.magIsBullet then
			for _, Mag in pairs(Gun:GetChildren()) do
				if Mag.Name:sub(1, 3) == "Mag" then
					Mag.Transparency = 1
				end
			end
		end
		if Ammo.Value == 0 and S.reloadSettings.autoReload then
			wait(0.2)
			Reload()
		end
		wait(60 / S.roundsPerMin)
	end
	
	Firing = false
	canFire = true
end

local function burstFire()
	if (not canFire) then return end
	canFire = false
	
	local burstTime = 60 / S.roundsPerMin
	if (not Knifing) and (not isCrawling) then
		Firing = true
		for i = 1, S.burstSettings.Amount do
			if Ammo.Value > 0 then
				Ammo.Value = Ammo.Value - 1
				if Humanoid.Health ~= 0 then
					if Aimed and steadyKeyPressed and S.scopeSettings.unSteadyOnFire then
						steadyKeyPressed = false
						currentSteadyTime = 0
					end
					newMag = false
					fireGun()
				end
			end
			if Ammo.Value == 0 and S.reloadSettings.autoReload then
				wait(0.2)
				Reload()
				break
			end
			wait(S.burstSettings.fireRateBurst and burstTime or S.burstSettings.Time / S.burstSettings.Amount)
		end
	end
	if S.reloadSettings.magIsBullet then
		for _, Mag in pairs(Gun:GetChildren()) do
			if Mag.Name:sub(1, 3) == "Mag" then
				Mag.Transparency = 1
			end
		end
	end
	
	Firing = false
	
	wait(S.burstSettings.fireRateBurst and burstTime or S.burstSettings.Wait)
	
	canFire = true
end

function fireGun()
	local fireSound = Handle:FindFirstChild("FireSound")
	Gun.Bolt.Transparency = 1
Gun.BoltBack.Transparency = 0
	if fireSound then fireSound:Play() end
	----------------------------------------------------------------------------------
	for _ = 1, (S.gunType.Shot and S.ShotAmount or 1) do
		local randSpread1 = RAD(RAND(0, 365))
		local randSpread2 = RAD(RAND(-(baseSpread + currentSpread), baseSpread + currentSpread, 0.01))
		local spreadDir = CFrame.fromAxisAngle(V3(0, 0, 1), randSpread1) * CFANG(randSpread2, 0, 0)
		
		local originCF = ((Aimed and S.guiScope) and Head.CFrame or Handle.CFrame) * spreadDir
		local bulletDirection = CF(originCF.p, originCF.p + originCF.lookVector).lookVector
		
		if S.bulletSettings.instantHit then
			local newRay = Ray.new(Main.CFrame.p, bulletDirection * S.bulletSettings.Range)
			local H, P, N = workspace:FindPartOnRayWithIgnoreList(newRay, Ignore)
			local finalP = P
			if H then
				if S.gunType.Explosive then
					if S.explosionSettings.soundId ~= "" then
						local soundPart = Instance.new("Part")
						soundPart.Transparency = 1
						soundPart.Anchored = true
						soundPart.CanCollide = false
						soundPart.Size = V3(1, 1, 1)
						soundPart.CFrame = CFrame.new(P)
						soundPart.Parent = gunIgnore
						
						local Sound = Instance.new("Sound")
						Sound.Pitch = S.explosionSettings.Pitch
						Sound.SoundId = S.explosionSettings.soundId
						Sound.Volume = S.explosionSettings.Volume
						Sound.Parent = soundPart
						Sound:Play()
						
						DS:AddItem(soundPart, Sound.TimeLength)
					end
					createBulletImpact:FireServer(H, P, N, bulletDirection, false, gunIgnore, S)
					createShockwave:FireServer(P, S.explosionSettings.Radius, gunIgnore, S)
					local E = Instance.new("Explosion")
					E.BlastPressure = S.explosionSettings.Pressure
					E.BlastRadius = S.explosionSettings.Radius
					E.DestroyJointRadiusPercent = (S.explosionSettings.rangeBasedDamage and 0 or 1)
					E.ExplosionType = S.explosionSettings.Type
					E.Position = P
					E.Hit:connect(function(Obj, Dist)
						if Obj.Name == "Torso" and (not Obj:IsDescendantOf(Char)) then
							if S.explosionSettings.rangeBasedDamage then
								local Dir = (Obj.Position - P).unit
								local expH, _ = workspace:FindPartOnRayWithIgnoreList(
									Ray.new(P - Dir * 0.1, Dir * 999),
									Ignore
								)
								local rayHitHuman = expH:IsDescendantOf(Obj.Parent)
								if (S.explosionSettings.rayCastExplosions and rayHitHuman) or (not S.explosionSettings.rayCastExplosions) then
									local hitHumanoid = findFirstClass(Obj.Parent, "Humanoid")
									if hitHumanoid and hitHumanoid.Health > 0 and isEnemy(hitHumanoid) then
										local distFactor = Dist / S.explosionSettings.Radius
										local distInvert = math.max(1 - distFactor,0)
										local newDamage = distInvert * getBaseDamage((P - Main.CFrame.p).magnitude)
										
										local Tag = Instance.new("ObjectValue")
										Tag.Value = Player
										Tag.Name = "creator"
										Tag.Parent = hitHumanoid
										DS:AddItem(Tag, 0.3)
										hitHumanoid:TakeDamage(newDamage)
										markHit()
									end
								end
							else
								local hitHumanoid = findFirstClass(Obj.Parent, "Humanoid")
								if hitHumanoid and hitHumanoid.Health > 0 and isEnemy(hitHumanoid) then
									local Tag = Instance.new("ObjectValue")
									Tag.Value = Player
									Tag.Name = "creator"
									Tag.Parent = hitHumanoid
									DS:AddItem(Tag, 0.3)
									markHit()
								end
							end
						end
					end)
					E.Parent = game.Workspace
				else
					_, finalP = penetrateWall(H, P, bulletDirection, N, {Char, ignoreModel}, 0, (P - Main.CFrame.p).magnitude, nil)
				end
			end
			if S.bulletTrail and S.trailSettings.Transparency ~= 1 then
				createTrail:FireServer(Main.CFrame.p, finalP, gunIgnore, S)
			end
		else
				local shell = Instance.new("Part")
	shell.CFrame = Gun.Chamber.CFrame * CFrame.fromEulerAnglesXYZ(-1.5,0,0)
	shell.Size = Vector3.new(1,1,1)
	shell.BrickColor = BrickColor.new(24)
	shell.Reflectance = .5
	shell.CanCollide = false	
	shell.BottomSurface = 0
	shell.TopSurface = 0
	shell.Name = "Shell"
	shell.Velocity = Gun.Chamber.CFrame.lookVector * 30 + Vector3.new(math.random(-10,10),20,math.random(-10,10))
	shell.RotVelocity = Vector3.new(0,200,0)
	local shellmesh = Instance.new("CylinderMesh")
	shellmesh.Scale = Vector3.new(0.1, 0.8, 0.1)
	shellmesh.Parent = shell
	shell.Parent = game.Workspace
	game:GetService("Debris"):addItem(shell,2)
	
	local shellmesh = Instance.new("SpecialMesh")
	shellmesh.Scale = Vector3.new(0.9,0.9,3)
	shellmesh.MeshId = "http://www.roblox.com/asset/?id=95387759"
	shellmesh.TextureId = "http://www.roblox.com/asset/?id=95387789"
	shellmesh.MeshType = "FileMesh"
	shellmesh.Parent = shell
		end
	end
	function MarkHit()
	spawn(function()
		if Gui_Clone:IsDescendantOf(game) then
			Gui_Clone.HitMarker.Visible = true
			local StartMark = tick()
			LastMark = StartMark
			wait(0.5)
			if LastMark <= StartMark then
				Gui_Clone.HitMarker.Visible = false
			end
		end
	end)
end
	
	----------------------------------------------------------------------------------
	
	currentSpread = currentSpread + S.spreadSettings.Increase
	
	for _, Plugin in pairs(Plugins.Firing) do
		spawn(function()
			Plugin()
		end)
	end
	
	local backRecoil = RAND(S.recoilSettings.Recoil.Back.Min, S.recoilSettings.Recoil.Back.Max, 0.01) --Get the kickback recoil
	local upRecoil = RAND(S.recoilSettings.Recoil.Up.Min, S.recoilSettings.Recoil.Up.Max, 0.01) --Get the up recoil
	local sideRecoilAlpha = 0
	if lastSideRecoil[1] < 0 and lastSideRecoil[2] < 0 then --This conditional basically makes sure the gun tilt isn't in the same direction for more than 2 shots
		sideRecoilAlpha = RAND(0, 1, 0.1)
	elseif lastSideRecoil[1] > 0 and lastSideRecoil[2] > 0 then
		sideRecoilAlpha = RAND(-1, 0, 0.1)
	else
		sideRecoilAlpha = RAND(-1, 1, 0.1)
	end
	local sideRecoil = numLerp(S.recoilSettings.Recoil.Side.Left, S.recoilSettings.Recoil.Side.Right, sideRecoilAlpha / 2 + 0.5) --Get the side recoil
	local tiltRecoil = numLerp(S.recoilSettings.Recoil.Tilt.Left, S.recoilSettings.Recoil.Tilt.Right, sideRecoilAlpha / 2 + 0.5) --Get the tilt recoil
	local recoilPos = V3(
		0,---sideRecoil,
		0,
		-backRecoil
	) * (Aimed and S.recoilSettings.aimedMultiplier or 1)
	local recoilRot = V3(
		(Aimed and 0 or (-RAD(upRecoil * 10) * (firstShot and S.recoilSettings.firstShotMultiplier or 1))),
		RAD(sideRecoil * 10),
		RAD(tiltRecoil * 10)
	) * (Aimed and S.recoilSettings.aimedMultiplier or 1)
	local camRecoilRot = V3(
		-RAD(sideRecoil * 10),
		RAD(upRecoil * 10) * (firstShot and S.recoilSettings.firstShotMultiplier or 1) * S.recoilSettings.camMultiplier,
		0
	) * (Aimed and S.recoilSettings.aimedMultiplier or 1) * stanceSway
	tweenRecoil(recoilPos, recoilRot, Sine, 0.2)
	tweenCam("Recoil", camRecoilRot, Sine, 0.15 * (firstShot and S.recoilSettings.firstShotMultiplier or 1))
	
	for _, v in pairs(Main:GetChildren()) do
		if v.Name:sub(1, 7) == "FlashFX" then
			Gun.Bolt.Transparency = 1
Gun.BoltBack.Transparency = 0
			v.Enabled = true
		end
	end
	
	delay(1 / 20, function()
		tweenRecoil(V3(), V3(), Sine, 0.2)
		tweenCam("Recoil", V3(), Sine, 0.2)
		for _, v in pairs(Main:GetChildren()) do
			if v.Name:sub(1, 7) == "FlashFX" then
	Gun.Bolt.Transparency = 0
Gun.BoltBack.Transparency = 1
				v.Enabled = false
			end
		end
	end)
	
	updateClipAmmo()
	firstShot = false
	shotCount = shotCount + 1
	lastSideRecoil[(shotCount % 2) + 1] = sideRecoilAlpha
end

function markHit()
	spawn(function()
		if mainGUI:IsDescendantOf(game) then
			hitMarker.Visible = true
			local startMark = tick()
			hitMarker.lastMark.Value = startMark
			
			wait(0.5)
			
			if hitMarker.lastMark.Value <= startMark then
				hitMarker.Visible = false
			end
		end
	end)
end

--------------------[ ADS FUNCTIONS ]-------------------------------------------------

function aimGun()
	if Reloading or Knifing or isCrawling or (not S.canADS) then return end
	
	mouseSensitivity = aimSensitivity
	
	for _, Plugin in pairs(Plugins.Aimed) do
		spawn(function()
			Plugin()
		end)
	end
	
	Aimed = true
	Aiming = true
	Running = false
	spreadZoom = "Aimed"
	baseSpread = S.spreadSettings[spreadZoom][spreadStance][spreadMotion]
	if S.aimSettings.Anim then
		local currentFOV = Cam.FieldOfView
		local currentTrans = Scope.BackgroundTransparency
		tweenJoint(LWeld, armC0[1], S.aimedC1.leftArm, Sine, S.aimSettings.Speed)
		tweenJoint(RWeld, armC0[2], S.aimedC1.rightArm, Sine, S.aimSettings.Speed)
		tweenJoint(LWeld2, nil, CF(), Sine, S.aimSettings.Speed)
		tweenJoint(RWeld2, nil, CF(), Sine, S.aimSettings.Speed)
		tweenJoint(Grip, nil, aimedGripCF, Sine, S.aimSettings.Speed)
		tweenJoint(headWeld2, nil, CF(0, -0.5, 0) * CFANG(0, 0, S.aimSettings.headTilt) * CF(0, 0.5, 0), Sine, S.aimSettings.Speed)
		local t0 = tick()
		while true do
			RS.RenderStepped:wait()
			local Alpha = math.min((tick() - t0) / S.aimSettings.Speed, 1) * 90
			if (not Aimed) then break end
			if (not Selected) then break end
			aimAlpha = Sine(Alpha)
			aimHeadOffset = headOffset.X * aimAlpha
			jumpAnimMultiplier = numLerp(1, S.fallSettings.aimEffect, aimAlpha)
			translationDivisor = numLerp(7, 20, aimAlpha)
			rotationMultiplier = numLerp(S.momentumSettings.Amplitude.unAimed, S.momentumSettings.Amplitude.Aimed, aimAlpha)
			armTiltMultiplier = numLerp(1, 0.2, aimAlpha)
			Cam.FieldOfView = numLerp(currentFOV, S.aimSettings.FOV, aimAlpha)
			if S.guiScope then
				Scope.BackgroundTransparency = numLerp(currentTrans, 0, aimAlpha)
			end
			if Alpha == 90 then break end
		end
	else
		LWeld.C0, LWeld.C1 = armC0[1], S.aimedC1.leftArm
		RWeld.C0, RWeld.C1 = armC0[2], S.aimedC1.rightArm
		LWeld2.C1, RWeld2.C1 = CF(), CF()
		animWeld.C0 = CF(0, 1, 0)
		Grip.C1 = aimedGripCF
		headWeld2.C1 = CF(0, -0.5, 0) * CFANG(0, 0, S.aimSettings.headTilt) * CF(0, 0.5, 0)
		aimAlpha = 1
		aimHeadOffset = headOffset.X
		jumpAnimMultiplier = S.fallSettings.aimEffect
		translationDivisor = 20
		rotationMultiplier = S.momentumSettings.Amplitude.Aimed
		armTiltMultiplier = 0.2
		Cam.FieldOfView = S.aimSettings.FOV
	end
	Aiming = (not Aimed)
	if (not Aiming) and S.guiScope then
		spawn(function()
			scopeSteady.Visible = true
			Scope.BackgroundTransparency = 1
			scopeMain.Visible = true
			
			if armTable then
				for _, Obj in pairs(armTable[1].Model:GetChildren()) do
					if Obj:IsA("BasePart") then
						Obj.LocalTransparencyModifier = 1
					end
				end
				for _, Obj in pairs(armTable[2].Model:GetChildren()) do
					if Obj:IsA("BasePart") then
						Obj.LocalTransparencyModifier = 1
					end
				end
			elseif armModel then
				for _, Obj in pairs(armModel:GetChildren()) do
					if Obj:IsA("BasePart") then
						Obj.LocalTransparencyModifier = 1
					end
				end
			end
			for _, Obj in pairs(playerFolder:GetChildren()) do
				if Obj:IsA("BasePart") then
					Obj.LocalTransparencyModifier = 1
				end
			end
			for _, Obj in pairs(Gun:GetChildren()) do
				if Obj:IsA("BasePart") then
					Obj.LocalTransparencyModifier = 1
				end
			end
		end)
		spawn(function()
			local camAng = 0
			local idleCam = function()
				return V3(
					RAD(SIN(camAng * S.scopeSettings.Frequency.Idling)) * stanceSway * camSway * S.scopeSettings.Amplitude.Idling,
					RAD(SIN(camAng * 5 / 2 * S.scopeSettings.Frequency.Idling)) * stanceSway * camSway * S.scopeSettings.Amplitude.Idling * 0.75,
					0
				)
			end
			local walkCam = function()
				return V3(
					RAD(SIN(camAng * S.scopeSettings.Frequency.Walking)) * camSway * stanceSway * S.scopeSettings.Amplitude.Walking,
					RAD(SIN(camAng * 5 / 2 * S.scopeSettings.Frequency.Walking)) * camSway * stanceSway * S.scopeSettings.Amplitude.Walking * 0.75,
					0
				)
			end
			while Aimed do
				local dt = RS.RenderStepped:wait()
				camOffsets.guiScope.Rot = (Sine(idleAlpha) * idleCam()) + (Sine(walkAlpha) * walkCam())
				camAng = camAng + RAD(105 * dt) * stanceSway * camSway
			end
		end)
	end
end

function unAimGun(Exception)
	if (not S.canADS) then return end
	
	mouseSensitivity = S.sensitivitySettings.Default
	
	for _, Plugin in pairs(Plugins.UnAimed) do
		spawn(function()
			Plugin()
		end)
	end
	
	if S.guiScope then
		spawn(function()
			if armTable then
				for _, Obj in pairs(armTable[1].Model:GetChildren()) do
					if Obj:IsA("BasePart") then
						Obj.LocalTransparencyModifier = 0
					end
				end
				for _, Obj in pairs(armTable[2].Model:GetChildren()) do
					if Obj:IsA("BasePart") then
						Obj.LocalTransparencyModifier = 0
					end
				end
			elseif armModel then
				for _, Obj in pairs(armModel:GetChildren()) do
					if Obj:IsA("BasePart") then
						Obj.LocalTransparencyModifier = 0
					end
				end
			end
			for _, Obj in pairs(playerFolder:GetChildren()) do
				if Obj:IsA("BasePart") then
					Obj.LocalTransparencyModifier = 0
				end
			end
			for _, Obj in pairs(Gun:GetChildren()) do
				if Obj:IsA("BasePart") then
					Obj.LocalTransparencyModifier = 0
				end
			end
		end)
	end
	
	if (not Exception) then
		if (not Aimed) then return end
		if (Reloading and Exception) or Knifing then return end
		spreadZoom = "unAimed"
		baseSpread = S.spreadSettings[spreadZoom][spreadStance][spreadMotion]
		Aimed = false
		Aiming = true
		if S.aimSettings.Anim then
			local currentFOV = Cam.FieldOfView
			local currentTrans = (Scope.BackgroundTransparency == 1 and (S.guiScope and 0 or 1) or Scope.BackgroundTransparency)
			scopeMain.Visible = false
			scopeSteady.Visible = false
			tweenJoint(LWeld, armC0[1], S.unAimedC1.leftArm, Sine, S.aimSettings.Speed)
			tweenJoint(RWeld, armC0[2], S.unAimedC1.rightArm, Sine, S.aimSettings.Speed)
			tweenJoint(headWeld2, nil, CF(), Sine, S.aimSettings.Speed)
			tweenJoint(Grip, nil, S.unAimedC1.Grip, Sine, S.aimSettings.Speed)
			local t0 = tick()
			while true do
				RS.RenderStepped:wait()
				local Alpha = math.min((tick() - t0) / S.aimSettings.Speed, 1) * 90
				if Aimed then break end
				if (not Selected) then break end
				aimAlpha = 1 - Sine(Alpha)--1 - COS(RAD(X))
				aimHeadOffset = headOffset.X * aimAlpha
				jumpAnimMultiplier = numLerp(1, S.fallSettings.aimEffect, aimAlpha)
				translationDivisor = numLerp(7, 20, aimAlpha)
				rotationMultiplier = numLerp(S.momentumSettings.Amplitude.unAimed, S.momentumSettings.Amplitude.Aimed, aimAlpha)
				armTiltMultiplier = numLerp(1, 0.2, aimAlpha)
				Cam.FieldOfView = numLerp(80, currentFOV, aimAlpha)
				Scope.BackgroundTransparency = numLerp(1, currentTrans, aimAlpha)
				if Alpha == 90 then break end
			end
		else
			scopeMain.Visible = false
			scopeSteady.Visible = false
			LWeld.C0, LWeld.C1 = armC0[1], S.unAimedC1.leftArm
			RWeld.C0, RWeld.C1 = armC0[2], S.unAimedC1.rightArm
			headWeld2.C0 = CF()
			Grip.C1 = S.unAimedC1.Grip
			aimAlpha = 0
			aimHeadOffset = 0
			jumpAnimMultiplier = 1
			translationDivisor = 7
			rotationMultiplier = S.momentumSettings.Amplitude.unAimed
			armTiltMultiplier = 1
			Cam.FieldOfView = 80
			Scope.BackgroundTransparency = 1
		end
		Aiming = Aimed
	else
		spawn(function()
			Aimed = false
			Aiming = false
			spreadZoom = "unAimed"
			baseSpread = S.spreadSettings[spreadZoom][spreadStance][spreadMotion]
			local currentFOV = Cam.FieldOfView
			local currentTrans = (Scope.BackgroundTransparency == 1 and (S.guiScope and 0 or 1) or Scope.BackgroundTransparency)
			scopeMain.Visible = false
			scopeSteady.Visible = false
			tweenJoint(headWeld2, nil, CF(), Sine, S.aimSettings.Speed)
			if S.aimSettings.Anim then
				local t0 = tick()
				while true do
					RS.RenderStepped:wait()
					local Alpha = math.min((tick() - t0) / S.aimSettings.Speed, 1) * 90
					if Aimed then break end
					if (not Selected) then break end
					aimAlpha = 1 - Sine(Alpha)--1 - COS(RAD(90 - Alpha))
					aimHeadOffset = headOffset.X * aimAlpha
					jumpAnimMultiplier = numLerp(1, S.fallSettings.aimEffect, aimAlpha)
					translationDivisor = numLerp(7, 20, aimAlpha)
					rotationMultiplier = numLerp(S.momentumSettings.Amplitude.unAimed, S.momentumSettings.Amplitude.Aimed, aimAlpha)
					armTiltMultiplier = numLerp(1, 0.2, aimAlpha)
					Cam.FieldOfView = numLerp(80, currentFOV, aimAlpha)
					Scope.BackgroundTransparency = numLerp(1, currentTrans, aimAlpha)
					if Alpha == 90 then break end
				end
			else
				scopeMain.Visible = false
				scopeSteady.Visible = false
				aimAlpha = 0
				aimHeadOffset = 0
				jumpAnimMultiplier = 1
				translationDivisor = 7
				rotationMultiplier = S.momentumSettings.Amplitude.unAimed
				armTiltMultiplier = 1
				Cam.FieldOfView = 80
				Scope.BackgroundTransparency = 1
			end
		end)
	end
end

--------------------[ TEXTURE CREATION FUNCTIONS ]------------------------------------

function createBullet(Direction)
	local Origin = Gun.Main.CFrame.p
	local bulletCF = CF(Origin, Origin + Direction)
	local Bullet = Instance.new("Part")
	Bullet.BrickColor = S.bulletSettings.Color
	Bullet.Material = Enum.Material.Neon
	Bullet.Name = "Bullet"
	Bullet.CanCollide = false
	Bullet.FormFactor = "Custom"
	Bullet.Size = S.bulletSettings.Size
	Bullet.BottomSurface = "Smooth"
	Bullet.TopSurface = "Smooth"
	if math.min(S.bulletSettings.Size.X, S.bulletSettings.Size.Y, S.bulletSettings.Size.Z) < 0.2 then
		local Mesh = Instance.new("BlockMesh")
		Mesh.Scale = S.bulletSettings.Size / Vector3.new(
			math.max(S.bulletSettings.Size.X, 0.2),
			math.max(S.bulletSettings.Size.Y, 0.2),
			math.max(S.bulletSettings.Size.Z, 0.2)
		)
		Mesh.Parent = Bullet
	end
	local BF = Instance.new("BodyForce")
	BF.force = V3(0, Bullet:GetMass() * (196.2 - S.bulletSettings.Acceleration), 0)
	BF.Parent = Bullet
	Bullet.Parent = gunIgnore
	Bullet.CFrame = bulletCF + Direction * S.bulletSettings.Size.Z / 2
	Bullet.Velocity = Direction * S.bulletSettings.Velocity
	return Bullet
end

--------------------[ HIT HANDLING FUNCTIONS ]----------------------------------------

function getBaseDamage(Dist)
	local startDmg = S.damageSettings.Start.Damage
	local startDist = S.damageSettings.Start.Dist
	local endDmg = S.damageSettings.End.Damage
	local endDist = S.damageSettings.End.Dist
	return (
		(
			Dist < startDist * S.bulletSettings.Range
		) and startDmg or
		(
			Dist >= startDist * S.bulletSettings.Range and
			Dist < endDist * S.bulletSettings.Range
		) and numLerp(startDmg, endDmg, Map(Dist / S.bulletSettings.Range, startDist, endDist, 0, 1)) or
		(
			Dist >= endDist * S.bulletSettings.Range
		) and endDmg
	)
end

function Damage(H, P, N, D, Dist, customIgnore)
	local hVal = S.damageSettings.Multipliers.Head
	local cVal = S.damageSettings.Multipliers.Chest
	local lVal = S.damageSettings.Multipliers.Limbs
	local baseDamage = getBaseDamage(Dist)
	if Humanoid.Health ~= 0 then
		local hitHumanoid = nil
		if H.Parent:IsA("Hat") then
			table.insert(customIgnore, H)
			local newRay = Ray.new(P - D * 0.1, D * (S.bulletSettings.Range - Dist + 0.1))
			local newH, newP, newN = workspace:FindPartOnRayWithIgnoreList(newRay, customIgnore)
			if newH then
				hitHumanoid = Damage(newH, newP, newN, D, Dist + (newP - P).magnitude, customIgnore)
			end
		else
			hitHumanoid = findFirstClass(H.Parent, "Humanoid")
			if hitHumanoid and hitHumanoid.Health > 0 and isEnemy(hitHumanoid) then
				local Tag = Instance.new("ObjectValue")
				Tag.Value = Player
				Tag.Name = "creator"
				Tag.Parent = hitHumanoid
				DS:AddItem(Tag, 0.3)
				local chosenDamage = 0
				if H.Name == "Head" then
					chosenDamage = baseDamage  * RAND(hVal, hVal + 0.1, 0.01)
				elseif H.Name == "Torso" then
					chosenDamage = baseDamage  * RAND(cVal, cVal + 0.1, 0.01)
				else
					chosenDamage = baseDamage  * RAND(lVal, lVal + 0.1, 0.01)
				end
				hitHumanoid:TakeDamage(chosenDamage)
				markHit()
			end
		end
		return hitHumanoid
	end
end

function isWallIgnored(Wall)
	return (
		Wall.Transparency >= S.penetrationSettings.transparencyThreshold or
		(S.penetrationSettings.ignoreNonCanCollide and (not Wall.CanCollide)) or
		isIgnored(Wall, S.penetrationSettings.ignoreCustom)
	)
end

function penetrateWall(Wall, hitPos, Direction, Normal, Ignore, totalPDist, totalBDist, lastDamagedHumanoid)
	local wallIgnore = isWallIgnored(Wall)
	local hitHumanoid = (Wall.Parent:IsA("Hat") and findFirstClass(Wall.Parent.Parent, "Humanoid") or findFirstClass(Wall.Parent, "Humanoid"))
	local damagedHumanoid = nil
	if hitHumanoid and hitHumanoid ~= lastDamagedHumanoid then
		lastDamagedHumanoid = hitHumanoid
		damagedHumanoid = Damage(Wall, hitPos, Normal, Direction, totalBDist, {Char, ignoreModel})
	else
		lastDamagedHumanoid = nil
	end
	local ignoreObject = hitHumanoid and (Wall.Parent:IsA("Hat") and Wall.Parent.Parent or Wall.Parent) or Wall
	table.insert(Ignore, ignoreObject)
	local rayLength = S.bulletSettings.Range - totalBDist
	local testRay = Ray.new(hitPos, Direction * (S.bulletSettings.Range - totalBDist))
	local H1, P1, N1 = workspace:FindPartOnRayWithIgnoreList(testRay, Ignore)
	local newIgnore = removeElement(Ignore, ignoreObject)
	local wallRay = Ray.new(P1 + Direction * 0.1, -Direction * (rayLength + 1))
	local H2, P2, N2 = workspace:FindPartOnRayWithIgnoreList(wallRay, Ignore)
	local newPDist = totalPDist + (wallIgnore and 0 or (getNearestPoint(P1, P2, hitPos) - hitPos).magnitude)
	local newBDist = totalBDist + (P1 - hitPos).magnitude
	local outOfRange = Round(newPDist, 0.001) > S.penetrationSettings.Dist or Round(newBDist, 0.001) > S.bulletSettings.Range
	if (not wallIgnore) then
		createBulletImpact:FireServer(Wall, hitPos, Normal, Direction, hitHumanoid, gunIgnore, S)
		if (not hitHumanoid) then
			createShockwave:FireServer(hitPos, S.shockwaveSettings.Radius, gunIgnore, S)
		end
	end
	if hitHumanoid and hitHumanoid.Health > 0 and isEnemy(hitHumanoid) and hitHumanoid == damagedHumanoid then
		createBlood:FireServer(Wall, P2, Direction, gunIgnore, S)
	end
	if outOfRange or (not H1) then
		if (not outOfRange) and (not wallIgnore) then
			createBulletImpact:FireServer(Wall, P2, N2, Direction, hitHumanoid, gunIgnore, S)
			if (not hitHumanoid) then
				createShockwave:FireServer(P2, S.shockwaveSettings.Radius, gunIgnore, S)
			end
		end
		return Wall, hitPos
	else
		if Wall == H2 and (not wallIgnore) then
			createBulletImpact:FireServer(Wall, P2, N2, Direction, hitHumanoid, gunIgnore, S)
			if (not hitHumanoid) then
				createShockwave:FireServer(P2, S.shockwaveSettings.Radius, gunIgnore, S)
			end
		end
		return penetrateWall(H1, P1, Direction, N1, Ignore, newPDist, newBDist, lastDamagedHumanoid)
	end
end

function PenetrateWall(HitPos, Direction, HitHumanoid, OriginPos, Bullet, CurrentPDist)
	local HitDist = (HitPos - OriginPos).magnitude
	local Wall, WallHitPos = nil, nil
	local Hum, HumHitPos = nil, nil
	local CustomIgnore = {unpack(Ignore)}
	for i = 1, 10 do
		local WallRay = Ray.new(HitPos - (Direction * 0.1), Direction * S.Penetration)
		local H, P = game.Workspace:FindPartOnRayWithIgnoreList(WallRay, CustomIgnore)
		if H then
			local HitHumanoid = nil
			if H.Parent.ClassName == "Hat" then
				HitHumanoid = findFirstClass(H.Parent.Parent, "Humanoid")
			else
				HitHumanoid = findFirstClass(H.Parent, "Humanoid")
			end
			if HitHumanoid and i ~= 1 then
				Hum, HumHitPos = H, P
				break
			else
				Wall, WallHitPos = H, P
				table.insert(CustomIgnore, H)
			end
		else
			break
		end
	end
	if Wall then
		if S.InstantHit then
			if Hum then
				Damage(Hum.Parent:FindFirstChild("Head"), HumHitPos)
				return HumHitPos
			else
				local HitObj2, HitPos2 = nil, nil
				if HitHumanoid then
					HitObj2, HitPos2 = AdvRayCast(WallHitPos, Direction, S.BulletRange - HitDist, {Wall, HitHumanoid.Parent, unpack(Ignore)})
				else
					HitObj2, HitPos2 = AdvRayCast(WallHitPos, Direction, S.BulletRange - HitDist, {Wall, unpack(Ignore)})
				end
				Damage(HitObj2, HitPos2)
				
				local NewPDist = CurrentPDist + (WallHitPos - HitPos).magnitude
				local NewHitPos2 = HitPos2
				if NewPDist < S.Penetration and HitObj2 then
					NewHitPos2 = PenetrateWall(HitPos2, Direction, HitHumanoid, OriginPos, Bullet, CurrentPDist + NewPDist)
				end
				return NewHitPos2
			end
		else
			local LastPos = WallHitPos
			local TotalDistTraveled = 0
			spawn(function()
				if Hum then
					Damage(Hum.Parent:FindFirstChild("Head"), HumHitPos)
					return HumHitPos
				else
					while true do
						RS.RenderStepped:wait()
						if TotalDistTraveled >= S.BulletRange - HitDist then
							Bullet:Destroy()
							break
						end
						local DistTraveled = (Bullet.Position - LastPos).magnitude
						local NewDirection = (Bullet.Position - LastPos).unit
						local TempHitObj, TempHitPos = nil, nil
						if HitHumanoid then
							TempHitObj, TempHitPos = AdvRayCast(LastPos, NewDirection, DistTraveled, {Wall, HitHumanoid.Parent, unpack(Ignore)})
						else
							TempHitObj, TempHitPos = AdvRayCast(LastPos, NewDirection, DistTraveled, {Wall, unpack(Ignore)})
						end
						if TempHitObj then
							Damage(TempHitObj, TempHitPos)
							
							local NewPDist = CurrentPDist + (WallHitPos - HitPos).magnitude
							local NewTempPos = TempHitPos
							if NewPDist < S.Penetration and TempHitObj then
								NewTempPos = PenetrateWall(TempHitPos, Direction, HitHumanoid, OriginPos, Bullet, CurrentPDist + NewPDist)
							else
								Bullet:Destroy()
							end
							return NewTempPos
						else
							LastPos = Bullet.Position
							TotalDistTraveled = TotalDistTraveled + DistTraveled
						end
					end
				end
			end)
		end
	else
		if Bullet then Bullet:Destroy() end
		return HitPos
	end
end

function isEnemy(Human)
	local Plyr = game.Players:GetPlayerFromCharacter(Human.Parent)
	if (not Plyr) then return S.CanDamageNPCs end
	return S.AllowFriendlyFire or (Plyr.TeamColor ~= Player.TeamColor or Plyr.Neutral)
end

--------------------[ RELOAD FUNCTIONS ]----------------------------------------------

function animateReload()
	tweenJoint(LWeld2, CF(), CF(), Sine, 0.15)
	tweenJoint(RWeld2, CF(), CF(), Sine, 0.15)
	local magParts = {}
	local magTable = {}
			
	for _, Obj in pairs(Gun:GetChildren()) do
		if string.sub(Obj.Name, 1, 3) == "Mag" and Obj:IsA("BasePart") then
			INSERT(magParts, Obj)
		end
	end
	
	local animVars = {
		--FUNCTIONS--
		tweenJoint = tweenJoint;
		
		makeMagInvisible = function()
			for _, v in pairs(magParts) do
				v.Transparency = 1
			end
			magVisible = false
		end;
		
		makeMagVisible = function()
			for _, v in pairs(magParts) do
				v.Transparency = v:WaitForChild("magTrans").Value
			end
			magVisible = true
		end;
		
		isMagVisible = function()
			return magVisible
		end;
		
		isMagEmpty = function()
			return ammoInClip == 0
		end;
		
		setNewMag = function()
			newMag = true
		end;
		
		isNewMag = function()
			return newMag
		end;
		
		createMag = function(Key)
			local magModel = Instance.new("Model")
			local magClones = {}
			for i, v in pairs(magParts) do
				local vClone = v:Clone()
				vClone.Transparency = v:WaitForChild("magTrans").Value
				vClone.CanCollide = false
				vClone.Parent = magModel
				INSERT(magClones, {Original = v, magClone = vClone})
				if i ~= 1 then
					local W = Instance.new("Weld")
					W.Part0 = magClones[1].magClone
					W.Part1 = vClone
					W.C0 = magClones[1].magClone.CFrame:toObjectSpace(vClone.CFrame)
					W.Parent = magClones[1].magClone
				end
			end
			magTable[Key] = {magModel, magClones}
			return magModel, magClones
		end;
		
		getMag = function(Key)
			if magTable[Key] then
				return magTable[Key][1], magTable[Key][2]
			else
				return nil, nil
			end
		end;
		
		attachGripToHead = function()
			local handleCF = RArm.CFrame * Grip.C0
			Grip.C0 = Head.CFrame:toObjectSpace(handleCF)
			Grip.Part0 = Head
		end;
		
		attachGripToArm = function()
			local handleCF = Head.CFrame * Grip.C0
			Grip.C0 = RArm.CFrame:toObjectSpace(handleCF)
			Grip.Part0 = RArm
		end;
		
		Sine = Sine;
		
		Linear = Linear;
		
		--VARIABLES--
		Handle = Handle;
		LArm = LArm;
		RArm = RArm;
		LWeld = LWeld;
		RWeld = RWeld;
		LC0 = armC0[1];
		RC0 = armC0[2];
		Grip = Grip;
		gunIgnore = gunIgnore;
		Cam = Cam;
		CF = CF;
		CFANG = CFANG;
		V3 = V3;
		RAD = RAD;
		reloadTimeLoaded = S.reloadSettings.Times.Loaded;
		reloadTimeEmpty = S.reloadSettings.Times.Empty
	}
	
	local sequenceTable = Anims.Reload(animVars)
	--local T = tick()
	for _, reloadFunction in pairs(sequenceTable) do
		if breakReload then
			break
		end
		reloadFunction()
		
		if (not magVisible) then
			Ammo.Value = 0
		end
		updateClipAmmo()
	end
	--print(tick() - T) --I divide the reloadTime by this number to get the animation speed
	
	if (not isCrawling) then
		if Running and (not S.canFireWhileRunning) then
			tweenJoint(LWeld, armC0[1], S.runningC1.leftArm, Sine, 0.4)
			tweenJoint(RWeld, armC0[2], S.runningC1.rightArm, Sine, 0.4)
			tweenJoint(Grip, nil, S.runningC1.Grip, Sine, 0.4)
		else
			tweenJoint(LWeld, armC0[1], S.unAimedC1.leftArm, Sine, 0.4)
			tweenJoint(RWeld, armC0[2], S.unAimedC1.rightArm, Sine, 0.4)
			tweenJoint(Grip, nil, S.unAimedC1.Grip, Sine, 0.4)
		end
	end
	
	for _, v in pairs(magTable) do --In case the reload animations was stopped mid way and there were still fake mags that weren't deleted
		v[1]:Destroy()
	end
end

function Reload()
	if Ammo.Value < (ClipSize.Value + 1) and (not Reloading) and StoredAmmo.Value > 0 then
		Firing = false
		ammoInClip = (ammoInClip == 0 and Ammo.Value or ammoInClip)
		Reloading = true
		lowerSpread()
		if Aimed then unAimGun(S.reloadSettings.Anim) end
		crossHair.Reload.Visible = true
		if Handle:FindFirstChild("ReloadSound") then Handle.ReloadSound:Play() end
		if S.reloadSettings.Anim then
			wait()
			animateReload()
		else
			local startReload = tick()
			local initialReloadTime = Ammo.Value == 0 and S.reloadSettings.Times.Empty or S.reloadSettings.Times.Loaded
			while true do
				if breakReload then break end
				if (tick() - startReload) >= initialReloadTime then break end
				RS.RenderStepped:wait()
			end
		end
		if (not breakReload) then
			newMag = false
			if StoredAmmo.Value >= ClipSize.Value then
				if ammoInClip > 0 then
					StoredAmmo.Value = StoredAmmo.Value - ((ClipSize.Value + 1) - ammoInClip)
					Ammo.Value = ClipSize.Value + 1
				else
					StoredAmmo.Value = StoredAmmo.Value - ClipSize.Value
					Ammo.Value = ClipSize.Value
				end
			elseif StoredAmmo.Value < ClipSize.Value and StoredAmmo.Value > 0 then
				Ammo.Value = StoredAmmo.Value
				StoredAmmo.Value = 0
			end
		end
		Reloading = false
		if Selected then
			ammoInClip = (breakReload and ammoInClip or 0)
			crossHair.Reload.Visible = false
		end
		breakReload = false
	end
	
	updateClipAmmo()
	updateStoredAmmo()
end

--------------------[ EXTERNAL DATA LOCATING FUNCTIONS ]-----------------------------

function removeElement(Table, Element) --removes the first instance of Element from Table
	for i, v in pairs(Table) do
		if v == Element then
			table.remove(Table, i)
			break
		end
	end
	return Table
end

function findFirstClass(Object, Class)
	local foundObject = nil
	for _, Obj in pairs(Object:GetChildren()) do
		if Obj.ClassName == Class then
			foundObject = Obj
			break
		end
	end
	return foundObject
end

function isIgnored(Obj, Table)
	for _,v in pairs(Table) do
		if Obj == v or Obj:IsDescendantOf(v) then
			return true
		end
	end
	return false
end

function GetHitSurfaceCFrame(HitPos,Obj)
	local SurfaceCF = {
		{"Back",Obj.CFrame * CF(0,0,Obj.Size.z)};
		{"Bottom",Obj.CFrame * CF(0,-Obj.Size.y,0)};
		{"Front",Obj.CFrame * CF(0,0,-Obj.Size.z)};
		{"Left",Obj.CFrame * CF(-Obj.Size.x,0,0)};
		{"Right",Obj.CFrame * CF(Obj.Size.x,0,0)};
		{"Top",Obj.CFrame * CF(0,Obj.Size.y,0)}
	}
	local ClosestDist = HUGE
	local ClosestSurface = nil
	for _,v in pairs(SurfaceCF) do
		local SurfaceDist = (HitPos - v[2].p).magnitude
		if SurfaceDist < ClosestDist then
			ClosestDist = SurfaceDist
			ClosestSurface = v
		end
	end
	return ClosestSurface[2]
end

function AdvRayCast(Origin, Direction, Dist, CustomIgnore)
	local NewIgnore = (CustomIgnore and CustomIgnore or Ignore)
	local NewRay = Ray.new(Origin, Direction * (Dist > 999 and 999 or Dist))
	local HitObj, HitPos = game.Workspace:FindPartOnRayWithIgnoreList(NewRay, NewIgnore)
	local LastPos = HitPos
	local FinalHitObj, FinalHitPos = nil, nil
	local RepTimes = math.floor(Dist / 999)
	if (not HitObj) and (Dist > 999) then
		for i = 0, RepTimes do
			local NewDist = (i == RepTimes and  (Dist - (LastPos - Origin).magnitude) or 999)
			local Ray2 = Ray.new(LastPos, Direction * NewDist)
			local HitObj2, HitPos2 = game.Workspace:FindPartOnRayWithIgnoreList(Ray2, NewIgnore)
			if i ~= RepTimes then
				if HitObj2 then
					FinalHitObj, FinalHitPos = HitObj2, HitPos2
					break
				end
			elseif i == RepTimes then
				FinalHitObj, FinalHitPos = HitObj2, HitPos2
			end
			LastPos = HitPos2
		end
		return FinalHitObj, FinalHitPos
	elseif HitObj or (Dist <= 999) then
		return HitObj, HitPos
	end
end

--------------------[ JUMPING ANIMATION ]---------------------------------------------

function onFall(initialVelocity)
	spawn(function()
		local velocityAlpha = math.max(math.min(initialVelocity / Humanoid.JumpPower, 1), 0)
		local startJumpPos = jumpAnim.Pos
		local startJumpRot = jumpAnim.Rot
		local endJumpPos = 0.04 * S.fallSettings.fallMultiplier * velocityAlpha
		local endJumpRot = RAD(4) * S.fallSettings.fallMultiplier * velocityAlpha
		local t0 = tick()
		while true do
			RS.Heartbeat:wait()
			local Alpha = math.min((tick() - t0) / 0.15, 1) * 90
			if onGround then break end
			jumpAnim.Pos = numLerp(startJumpPos, endJumpPos, Sine(Alpha))
			jumpAnim.Rot = numLerp(startJumpRot, endJumpRot, Sine(Alpha))
			if Alpha == 90 then break end
		end
		startJumpPos = endJumpPos
		startJumpRot = endJumpRot
		endJumpPos = -0.08 * S.fallSettings.fallMultiplier
		endJumpRot = -RAD(8) * S.fallSettings.fallMultiplier
		local X = 1
		while true do
			local dt = RS.Heartbeat:wait()
			X = X + (dt * 60) / X
			local Alpha = (X - 1) / 15
			if onGround then break end
			jumpAnim.Pos = numLerp(startJumpPos, endJumpPos, Alpha)
			jumpAnim.Rot = numLerp(startJumpRot, endJumpRot, Alpha)
		end
	end)
end

function onLand(fallDist)
	spawn(function()
		local animAlpha = math.min(fallDist, S.fallSettings.maxDist) * (2 / 3)
		local startJumpPos = jumpAnim.Pos
		local startJumpRot = jumpAnim.Rot
		local endJumpPos = animAlpha / 100 * S.fallSettings.landMultiplier * (runReady and 1 or 2)
		local endJumpRot = RAD(animAlpha) * S.fallSettings.landMultiplier * (runReady and 1 or 2)
		local t0 = tick()
		while true do
			RS.Heartbeat:wait()
			local Alpha = math.min((tick() - t0) / 0.2, 1)
			if (not onGround) then break end
			jumpAnim.Pos = numLerp(startJumpPos, endJumpPos, Alpha)
			jumpAnim.Rot = numLerp(startJumpRot, endJumpRot, Alpha)
			if Alpha == 1 then break end
		end
		t0 = tick()
		while true do
			RS.Heartbeat:wait()
			local Alpha = math.min((tick() - t0) / 0.3, 1) * 90
			if (not onGround) then break end
			jumpAnim.Pos = numLerp(endJumpPos, 0, Sine(Alpha))
			jumpAnim.Rot = numLerp(endJumpRot, 0, Sine(Alpha))
			if Alpha == 90 then break end
		end
	end)
end

function onHumanoidStateChanged(oldState, newState)
	if newState == Enum.HumanoidStateType.Freefall then
		onGround = false
		if S.fallAnimation then
			onFall(HRP.Velocity.Y)
			while HRP.Velocity.Y > 0 do RS.RenderStepped:wait() end
			startFallHeight = HRP.Position.Y
		end
	elseif oldState == Enum.HumanoidStateType.Freefall then
		onGround = true
		if S.fallAnimation then
			local fallDist = startFallHeight - HRP.Position.Y
			onLand(fallDist)
		end
	end
end
--------------------[ CAMERA STEADYING FUNCTIONS ]------------------------------------

function steadyCamera()
	scopeSteady.Text = "Steadying..."
	scopeSteady.TextColor3 = Color3.new(1, 1, 0)
	camSteady = true
	local originalSway = camSway
	local Increment = 1.5 / 0.6
	local X = 0
	while true do
		RS.RenderStepped:wait()
		local newX = X + Increment
		X = (newX > 90 and 90 or newX)
		if (not steadyKeyPressed) then break end
		camSway = numLerp(originalSway, 0, Sine(X))
		if X == 90 then break end
	end
	while steadyKeyPressed and Aimed do
		if currentSteadyTime > 0 then
			local NewSteadyTime = currentSteadyTime - 1
			currentSteadyTime = (NewSteadyTime < 0 and 0 or NewSteadyTime)
			camSway = 0
		elseif currentSteadyTime == 0 then
			break
		end
		RS.RenderStepped:wait()
	end
	camSteady = false
	spawn(function()
		local Increment = 1.5 / 0.25
		local X = 0
		while true do
			RS.RenderStepped:wait()
			local newX = X + Increment
			X = (newX > 90 and 90 or newX)
			if camSteady then break end
			camSway = numLerp(0, S.scopeSettings.camSwayOnBreath, 1 - COS(RAD(X)))
			if X == 90 then break end
		end
		Increment = 1.5 / S.scopeSettings.breathTime
		X = 0
		while true do
			RS.RenderStepped:wait()
			local newX = X + Increment
			X = (newX > 90 and 90 or newX)
			if camSteady then break end
			camSway = numLerp(S.scopeSettings.camSwayOnBreath, 1, Sine(X))
			if X == 90 then break end
		end
		--[[for X = 0, 90, 1.5 / 0.2 do
			local Alpha = 1 - COS(RAD(X))--math.log10(X) / math.log10(90)
			camSway = numLerp(0, 3, Alpha)
			RS.RenderStepped:wait()
		end]]
		--[[for X = 0, 90, 1.5 / S.scopeSettings.steadyTime do
			if camSteady then break end
			local Alpha = SIN(RAD(X))
			camSway = numLerp(3, 1, Alpha)
			RS.RenderStepped:wait()
		end]]
	end)
	retakeBreath()
end

function retakeBreath()
	scopeSteady.Text = "Re-taking Breath"
	scopeSteady.TextColor3 = Color3.new(1, 0, 0)
	takingBreath = true
	local Increment = S.scopeSettings.steadyTime / S.scopeSettings.breathTime
	while takingBreath do
		if currentSteadyTime < maxSteadyTime then
			local newSteadyTime = currentSteadyTime + Increment
			currentSteadyTime = (newSteadyTime > maxSteadyTime and maxSteadyTime or newSteadyTime)
		elseif currentSteadyTime >= maxSteadyTime then
			break
		end
		RS.RenderStepped:wait()
	end
	if takingBreath then
		scopeSteady.Text = "Hold "..convertKey(S.Keys.scopeSteady).." to Steady"
		scopeSteady.TextColor3 = Color3.new(1, 1, 0)
		takingBreath = false
	end
end

--------------------[ SPRINTING FUNCTIONS ]-------------------------------------------

function canRun(midRun)
	return ((Forward and (not Backward)) and
		Walking and (Stamina > 0) and Running and
		Selected and (midRun and true or onGround) and
		runReady and (S.canFireWhileRunning and true or (not Firing))
	)
end

function monitorStamina()
	Running = true
	if (not canRun(false)) then
		Running = false
		return
	end
	if Aimed then unAimGun(true) end
	if Stance == 1 or Stance == 2 then Stand() end
	if (not (Reloading and S.reloadSettings.Anim)) then
		if S.canFireWhileRunning then
			tweenJoint(LWeld, armC0[1], S.unAimedC1.leftArm, Sine, 0.4)
			tweenJoint(RWeld, armC0[2], S.unAimedC1.rightArm, Sine, 0.4)
			tweenJoint(Grip, nil, S.unAimedC1.Grip, Sine, 0.4)
		else
			tweenJoint(LWeld, armC0[1], S.runningC1.leftArm, Sine, 0.4)
			tweenJoint(RWeld, armC0[2], S.runningC1.rightArm, Sine, 0.4)
			tweenJoint(Grip, nil, S.runningC1.Grip, Sine, 0.4)
		end
	end
	crossOffset = 50
	while runKeyPressed do
		if canRun(true) then
			if onGround then
				local newStamina = Stamina - 1
				Stamina = (newStamina < 0 and 0 or newStamina)
			end
		else
			break
		end
		RS.RenderStepped:wait()
	end
	Running = false
	if (not Aimed) and (not (Reloading and S.reloadSettings.Anim)) and (not S.canFireWhileRunning) then
		crossOffset = 0
		tweenJoint(LWeld, armC0[1], S.unAimedC1.leftArm, Sine, 0.4)
		tweenJoint(RWeld, armC0[2], S.unAimedC1.rightArm, Sine, 0.4)
		tweenJoint(Grip, nil, S.unAimedC1.Grip, Sine, 0.4)
	end
	
	rechargeStamina()
end

function rechargeStamina()
	chargingStamina = true
	while ((not runKeyPressed) or (Stamina < maxStamina)) and (not Running) do
		if Stamina < maxStamina then
			local newStamina = Stamina + (S.sprintTime / S.staminaCoolTime)
			Stamina = (newStamina > maxStamina and maxStamina or newStamina)
		elseif Stamina >= maxStamina then
			break
		end
		RS.RenderStepped:wait()
	end
	chargingStamina = false
end

--------------------[ STANCE FUNCTIONS ]----------------------------------------------

function Stand(onDeselected)
	local LHip = Torso["Left Hip"]
	local RHip = Torso["Right Hip"]
	LLegWeld.Part1 = nil
	LHip.Part1 = LLeg
	RLegWeld.Part1 = nil
	RHip.Part1 = RLeg
	Stance = 0
	spreadStance = "Stand"
	baseSpread = S.spreadSettings[spreadZoom][spreadStance][spreadMotion]
	if S.stanceSettings.Anim and (not onDeselected) then
		spawn(function()
			local prevStanceSway = stanceSway
			local X = 0
			local Increment = 1.5 / S.stanceSettings.Speed
			while true do
				RS.RenderStepped:wait()
				local newX = X + Increment
				X = (newX > 90 and 90 or newX)
				if Stance ~= 0 then break end
				stanceSway = numLerp(prevStanceSway, 1, Sine(X))
				if X == 90 then break end
			end
		end)
		tweenJoint(ABWeld, CF(), nil, Sine, S.stanceSettings.Speed)
		tweenJoint(LLegWeld, legC0.Stand[1], nil, Sine, S.stanceSettings.Speed)
		tweenJoint(RLegWeld, legC0.Stand[2], nil, Sine, S.stanceSettings.Speed)
		tweenJoint(LHip, CF(-1, -1, 0) * CFANG(0, RAD(-90), 0), CF(-0.5, 1, 0) * CFANG(0, RAD(-90), 0), Sine, S.stanceSettings.Speed)
		tweenJoint(RHip, CF(1, -1, 0) * CFANG(RAD(-180), RAD(90), 0), CF(0.5, 1, 0) * CFANG(RAD(-180), RAD(90), 0), Sine, S.stanceSettings.Speed)
		tweenJoint(Root, CFANG(RAD(-90), 0, RAD(180)), nil, Sine, S.stanceSettings.Speed)
		tweenJoint(headWeld, CF(0, 1.5, 0), nil, Sine, S.stanceSettings.Speed)
	elseif onDeselected or (not S.stanceSettings.Anim) then
		ABWeld.C0 = CF()
		LLegWeld.C0 = legC0.Stand[1]
		RLegWeld.C0 = legC0.Stand[2]
		LHip.C0, LHip.C1 = CF(-1, -1, 0) * CFANG(0, RAD(-90), 0), CF(-0.5, 1, 0) * CFANG(0, RAD(-90), 0)
		RHip.C0, RHip.C1 = CF(1, -1, 0) * CFANG(RAD(-180), RAD(90), 0), CF(0.5, 1, 0) * CFANG(RAD(-180), RAD(90), 0)
		Root.C0 = CFANG(RAD(-90), 0, RAD(180))
		headWeld.C0 = CF(0, 1.5, 0)
	end
end

function Crouch()
	local LHip = Torso["Left Hip"]
	local RHip = Torso["Right Hip"]
	LHip.Part1 = nil
	LLegWeld.Part1 = LLeg
	RHip.Part1 = nil
	RLegWeld.Part1 = RLeg
	Stance = 1
	spreadStance = "Crouch"
	baseSpread = S.spreadSettings[spreadZoom][spreadStance][spreadMotion]
	if S.stanceSettings.Anim then
		spawn(function()
			local prevStanceSway = stanceSway
			local X = 0
			local Increment = 1.5 / S.stanceSettings.Speed
			while true do
				RS.RenderStepped:wait()
				local newX = X + Increment
				X = (newX > 90 and 90 or newX)
				if Stance ~= 1 then break end
				stanceSway = numLerp(prevStanceSway, 0.75, Sine(X))
				if X == 90 then break end
			end
		end)
		tweenJoint(ABWeld, CF(0, 0, -0.05), nil, Sine, S.stanceSettings.Speed)
		tweenJoint(LLegWeld, legC0.Crouch[1], nil, Sine, S.stanceSettings.Speed)
		tweenJoint(RLegWeld, legC0.Crouch[2], nil, Sine, S.stanceSettings.Speed)
		tweenJoint(LHip, CF(-1, -0.5, 0) * CFANG(0, RAD(-90), 0), CF(-0.5, 0.5, 1) * CFANG(0, RAD(-90), RAD(-90)), Sine, S.stanceSettings.Speed)
		tweenJoint(RHip, CF(1, -0.5, 0.25) * CFANG(RAD(-180), RAD(90), 0), CF(0.5, 0.5, 1) * CFANG(RAD(-180), RAD(90), 0), Sine, S.stanceSettings.Speed)
		tweenJoint(Root, CF(0, -1, 0) * CFANG(RAD(-90), 0, RAD(180)), nil, Sine, S.stanceSettings.Speed)
		tweenJoint(headWeld, CF(0, 1.5, 0), nil, Sine, S.stanceSettings.Speed)
	else
		ABWeld.C0 = CF(0, 0, -1 / 16)
		LLegWeld.C0 = legC0.Crouch[1]
		RLegWeld.C0 = legC0.Crouch[2]
		LHip.C0, LHip.C1 = CF(-1, -0.5, 0) * CFANG(0, RAD(-90), 0), CF(-0.5, 0.5, 1) * CFANG(0, RAD(-90), RAD(-90))
		RHip.C0, RHip.C1 = CF(1, -0.5, 0.25) * CFANG(RAD(-180), RAD(90), 0), CF(0.5, 0.5, 1) * CFANG(RAD(-180), RAD(90), 0)
		Root.C0 = CF(0, -1, 0) * CFANG(RAD(-90), 0, RAD(180))
		headWeld.C0 = CF(0, 1.5, 0)
	end
end

function Prone()
	local LHip = Torso["Left Hip"]
	local RHip = Torso["Right Hip"]
	LHip.Part1 = nil
	LLegWeld.Part1 = LLeg
	RHip.Part1 = nil
	RLegWeld.Part1 = RLeg
	Stance = 2
	spreadStance = "Prone"
	baseSpread = S.spreadSettings[spreadZoom][spreadStance][spreadMotion]
	if S.stanceSettings.Anim then
		spawn(function()
			local prevStanceSway = stanceSway
			local X = 0
			local Increment = 1.5 / S.stanceSettings.Speed
			while true do
				RS.RenderStepped:wait()
				local newX = X + Increment
				X = (newX > 90 and 90 or newX)
				if Stance ~= 2 then break end
				stanceSway = numLerp(prevStanceSway, 0.5, Sine(X))
				if X == 90 then break end
			end
		end)
		tweenJoint(ABWeld, CF(0, 0, -0.1), nil, Sine, S.stanceSettings.Speed)
		tweenJoint(LLegWeld, legC0.Prone[1], nil, Sine, S.stanceSettings.Speed)
		tweenJoint(RLegWeld, legC0.Prone[2], nil, Sine, S.stanceSettings.Speed)
		tweenJoint(Root, CF(0, -2.5, 1) * CFANG(RAD(180), 0, RAD(180)), nil, Sine, S.stanceSettings.Speed)
		tweenJoint(headWeld, CF(0, 1, 1) * CFANG(RAD(90), 0, 0), nil, Sine, S.stanceSettings.Speed)
	else
		ABWeld.C0 = CF(0, 0, -1 / 8)
		LLegWeld.C0 = legC0.Prone[1]
		RLegWeld.C0 = legC0.Prone[2]
		Root.C0 = CF(0, -2.5, 1) * CFANG(RAD(180), 0, RAD(180))
		headWeld.C0 = CF(0, 1, 1) * CFANG(RAD(90), 0, 0)
	end
end

function Dive()
	onGround = false
	local diveDirection = (HRP.CFrame * CFANG(S.diveSettings.Angle, 0, 0)).lookVector * S.walkSpeeds.Sprinting * S.diveSettings.Force
	local BF = Instance.new("BodyForce")
	BF.force = diveDirection + Vector3.new(0, playerMass * 196.2, 0)
	BF.Parent = HRP
	--[[spawn(function()
		HRP.Velocity = HRP.CFrame.lookVector * 60 + V3(0, 40, 0)
		wait(0.1)
		HRP.Velocity = HRP.CFrame.lookVector * 70 + V3(0, 30, 0)
		wait(0.4)
		HRP.Velocity = HRP.CFrame.lookVector * 30 + V3(0, -10, 0)
	end)]]
	delay(0.05, function()
		spawn(function()
			while true do
				local newRay = Ray.new(HRP.Position, V3(0, -3.1, 0))
				local H, _ = workspace:FindPartOnRayWithIgnoreList(newRay, Ignore)
				if H then
					onGround = true
					break
				end
				wait()
			end
		end)
		Prone()
		wait(0.1)
		BF:Destroy()
	end)
end

--------------------[ MOUSE FUNCTIONS ]-----------------------------------------------

function onMB1Down()
	MB1Down = true
	firstShot = true
	if fireFunction then
		fireFunction()
	end
end

function onMB1Up()
	MB1Down = false
	lowerSpread()
end

function onMB2Down()
	if S.aimSettings.holdToADS then
		if (not AimingIn) and (not Aimed) then
			AimingIn = true
			aimGun()
			AimingIn = false
		end
	else
		if Aimed then
			unAimGun()
		else
			aimGun()
		end
	end
end

function onMB2Up()
	if S.aimSettings.holdToADS then
		if (not AimingOut) and Aimed then
			AimingOut = true
			unAimGun()
			AimingOut = false
		end
	end
end

function onScrollUp()
	local newAimSensitivity = aimSensitivity + S.sensitivitySettings.Increment
	aimSensitivity = (
		newAimSensitivity < S.sensitivitySettings.Min and S.sensitivitySettings.Min or
		newAimSensitivity > S.sensitivitySettings.Max and S.sensitivitySettings.Max or
		newAimSensitivity
	)
	mouseSensitivity = (Aimed and aimSensitivity or mouseSensitivity)
	
	Sens.Text = "S: "..aimSensitivity
	if mainGUI:IsDescendantOf(game) then
		Sens.Visible = true
		local t0 = tick()
		lastSensUpdate = t0
		
		wait(0.3)
		
		if lastSensUpdate <= t0 then
			Sens.Visible = false
		end
	end
end

function onScrollDown()
	local newAimSensitivity = aimSensitivity - S.sensitivitySettings.Increment
	aimSensitivity = (
		newAimSensitivity < S.sensitivitySettings.Min and S.sensitivitySettings.Min or
		newAimSensitivity > S.sensitivitySettings.Max and S.sensitivitySettings.Max or
		newAimSensitivity
	)
	mouseSensitivity = (Aimed and aimSensitivity or mouseSensitivity)
	
	Sens.Text = "S: "..aimSensitivity
	if mainGUI:IsDescendantOf(game) then
		Sens.Visible = true
		local t0 = tick()
		lastSensUpdate = t0
		
		wait(0.3)
		
		if lastSensUpdate <= t0 then
			Sens.Visible = false
		end
	end
end

--------------------[ KEYBOARD FUNCTIONS ]--------------------------------------------

function keyDown(K)
	local Key = string.lower(K)
	
	if Key == S.Keys.lowerStance and S.canChangeStance then
		if (not Running) then
			if Stance == 0 then
				if S.stanceSettings.Stances.Crouch then
					Crouch()
				elseif S.stanceSettings.Stances.Prone then
					Prone()
				end
			elseif Stance == 1 then
				if S.stanceSettings.Stances.Prone then
					Prone()
				end
			end
		elseif S.dolphinDive then
			wait()
			if Humanoid:GetState() ~= Enum.HumanoidStateType.Freefall and (not UIS:IsKeyDown("Space")) and runReady then
				local tempConnection = Humanoid.Changed:connect(function()
					Humanoid.Jump = false
				end)
				runReady = false
				Dive()
				Running = false
				wait(S.diveSettings.rechargeTime)
				tempConnection:disconnect()
				runReady = true
			end
		end
	end
	
	if Key == S.Keys.raiseStance and S.canChangeStance then
		if (not Running) then
			if Stance == 2 then
				if S.stanceSettings.Stances.Crouch then
					Crouch()
				else
					Stand()
				end
			elseif Stance == 1 then
				Stand()
			end
		end
	end
	
	if Key == S.Keys.ADS then
		if S.aimSettings.holdToADS then
			if (not AimingIn) and (not Aimed) then
				AimingIn = true
				aimGun()
				AimingIn = false
			end
		else
			if Aimed then
				unAimGun()
			else
				aimGun()
			end
		end
	end
	
	if Key == S.Keys.selectFire and S.selectFire then
		if canSelectFire then
			canSelectFire = false
			rawFireMode = rawFireMode + 1
			modeGUI.Text = Modes[((rawFireMode - 1) % numModes) + 1]
			if modeGUI.Text == "AUTO" then
				fireFunction = autoFire
			elseif modeGUI.Text == "BURST" then
				fireFunction = burstFire
			elseif modeGUI.Text == "SEMI" then
				fireFunction = semiFire
			else
				fireFunction = nil
			end
			local speedAlpha = S.selectFireSettings.animSpeed / 0.6
			if S.selectFireSettings.GUI then
				spawn(function()
					fireSelect.Visible = true
					local prevRawFireMode = rawFireMode
					local Increment = 1.5 / (speedAlpha * 0.25)
					local X = 0
					wait(speedAlpha * 0.1)
					while true do
						RS.RenderStepped:wait()
						local newX = X + Increment
						X = (newX > 90 and 90 or newX)
						if prevRawFireMode ~= rawFireMode then break end
						updateModeLabels(rawFireMode - 1, rawFireMode, X)
						if X == 90 then break end
					end
					wait(speedAlpha * 0.25)
					fireSelect.Visible = false
				end)
			end
			if S.selectFireSettings.Animation and (not Aimed) and (not isRunning) and (not isCrawling) then
				spawn(function()
					local sequenceTable = {
						function()
							tweenJoint(RWeld2, nil, CFANG(0, RAD(5), 0), Sine, speedAlpha * 0.15)
							tweenJoint(LWeld, armC0[1], CF(0.1, 1, -0.3) * CFANG(RAD(-7), 0, RAD(-65)), Linear, speedAlpha * 0.15)
							wait(speedAlpha * 0.2)
						end;
						
						function()
							tweenJoint(LWeld, armC0[1], CF(0.1, 1, -0.3) * CFANG(RAD(-10), 0, RAD(-65)), Linear, speedAlpha * 0.1)
							wait(speedAlpha * 0.2)
						end;
						
						function()
							tweenJoint(RWeld2, nil, CF(), Sine, speedAlpha * 0.2)
							tweenJoint(LWeld, armC0[1], S.unAimedC1.leftArm, Sine, speedAlpha * 0.2)
							wait(speedAlpha * 0.2)
						end;
					}
					
					for _, F in pairs(sequenceTable) do
						if Aimed or isRunning or isCrawling or Reloading then
							break
						end
						F()
					end
				end)
			end
			if S.selectFireSettings.Animation or S.selectFireSettings.GUI then
				wait(S.selectFireSettings.animSpeed)
			end
			canSelectFire = true
		end
	end
	
	if Key == S.Keys.Reload then
		if (not Reloading) and (not isCrawling) then
			Reload()
		end
	end
	
	if Key == S.Keys.Sprint then
		runKeyPressed = true
		if runReady then
			if (not Idling) and Walking and (not Running) and (not Knifing) and (not (Aimed and S.guiScope and S.Keys.Sprint == S.Keys.scopeSteady)) then
				monitorStamina()
			end
		end
	end
	
	if Key == S.Keys.scopeSteady then
		steadyKeyPressed = true
		if Aimed and (not Aiming) then
			takingBreath = false
			steadyCamera()
		end
	end
	
	for _, PTable in pairs(Plugins.KeyDown) do
		if Key == string.lower(PTable.Key) then
			spawn(function()
				PTable.Plugin()
			end)
		end
	end
end

function keyUp(K)
	local Key = string.lower(K)
	
	if Key == S.Keys.ADS then
		if S.aimSettings.holdToADS then
			if (not AimingOut) and Aimed then
				AimingOut = true
				unAimGun()
				AimingOut = false
			end
		end
	end
	
	if Key == S.Keys.Sprint then
		runKeyPressed = false
		Running = false
		if (not chargingStamina) then
			rechargeStamina()
		end
	end
	
	if Key == S.Keys.scopeSteady then
		steadyKeyPressed = false
	end
	
	for _, PTable in pairs(Plugins.KeyUp) do
		if Key == string.lower(PTable.Key) then
			spawn(function()
				PTable.Plugin()
			end)
		end
	end
end

--------------------[ END FUNCTIONS ]-------------------------------------------------

--------------------------------------------------------------------------------------
--------------------[ PRE-CONNECTIONS ]-----------------------------------------------
--------------------------------------------------------------------------------------

local function updateAnimVars()
	wait()
	Forward = (UIS:IsKeyDown("W") or UIS:IsKeyDown("Up"))
	Backward = (UIS:IsKeyDown("S") or UIS:IsKeyDown("Down"))
	local Right = UIS:IsKeyDown("D")
	local Left = UIS:IsKeyDown("A")
	
	local walkingForward = (Forward and (not Backward))
	local walkingBackward = ((not Forward) and Backward)
	local walkingRight = (Right and (not Left))
	local walkingLeft = ((not Right) and Left)
	
	if (Forward or Backward or Right or Left) then
		Walking, Idling = true, false
		if (not Running) and (not Aimed) then
			spreadMotion = "Moving"
			baseSpread = S.spreadSettings[spreadZoom][spreadStance][spreadMotion]
		end
	elseif (not (Forward and Backward and Right and Left)) then
		Walking, Idling = false, true
		if (not Aimed) then
			spreadMotion = "Idling"
			baseSpread = S.spreadSettings[spreadZoom][spreadStance][spreadMotion]
		end
	end
	
	local newArmTilt = (
		((walkingForward or walkingBackward) and walkingRight) and 2.5 or
		((walkingForward or walkingBackward) and walkingLeft) and -2.5 or
		((not (walkingForward and walkingBackward)) and walkingRight) and 5 or
		((not (walkingForward and walkingBackward)) and walkingLeft) and -5 or 0
	)
	local newMoveAng = (
		(walkingForward and (not (walkingRight or walkingLeft))) and 0 or
		(walkingForward and walkingRight) and RAD(-45) or
		((not (walkingForward or walkingBackward)) and walkingRight) and RAD(-90) or
		(walkingBackward and walkingRight) and RAD(-135) or
		(walkingBackward and (not (walkingRight or walkingLeft))) and (moveAng < 0 and RAD(-180) or RAD(180)) or
		(walkingBackward and walkingLeft) and RAD(135) or
		((not (walkingForward or walkingBackward)) and walkingLeft) and RAD(90) or
		(walkingForward and walkingLeft) and RAD(45) or 0
	)
	
	local newAnimCode = math.random(-1e9, 1e9)
	animCode = newAnimCode
	local startTilt = armTilt
	local startAng = (ABS(moveAng) == RAD(180)) and (newMoveAng > 0 and RAD(180) or RAD(-180)) or moveAng
	local Increment = (startTilt == newArmTilt and 1.5 / 0.7 or 1.5 / (0.35 * ABS(startTilt - newArmTilt) / 5))
	local X = 0
	while true do
		RS.RenderStepped:wait()
		local newX = X + Increment
		X = (newX > 90 and 90 or newX)
		if animCode ~= newAnimCode then break end
		armTilt = numLerp(startTilt, newArmTilt, Sine(X))
		moveAng = numLerp(startAng, newMoveAng, Sine(X))
		if X == 90 then break end
	end
end

M2.KeyDown:connect(updateAnimVars)
M2.KeyUp:connect(updateAnimVars)
updateAnimVars()

--------------------------------------------------------------------------------------
--------------------[ TOOL SELECTION AND DESELECTION ]--------------------------------
--------------------------------------------------------------------------------------

function onEquipped()
	wait()
	if Humanoid.Health ~= 0 and (not Selected) and Gun.Parent == Char then
		Selected = true
		breakReload = false
		equipAnimPlaying = true
		
		math.randomseed(tick()) --This sets a new seed for the random function each time you select the gun
		
		--------------------[ FAILSAFE RESETING ]-------------------------------------
		
		for _, GM in pairs(ignoreModel:GetChildren()) do
			if GM.Name == "gunIgnore_"..Player.Name then
				GM:Destroy()
			end
		end
		
		for _, c in pairs(Connections) do
			c:disconnect()
		end
		
		Connections = {}
		
		--------------------[ REMOTE GUN SETUP ]--------------------------------------
		
		--[[local Vars = {
			ignoreModel = ignoreModel;
			Humanoid = Humanoid;
			Shoulders = Shoulders;
			Torso = Torso;
			Head = Head;
			armC0 = armC0;
			leftArmC1 = S.equipSettings.leftArmC1;
			rightArmC1 = S.equipSettings.rightArmC1;
			LArm = LArm;
			RArm = RArm;
			gunParts = gunParts;
			Handle = Handle;
		}
		gunIgnore, playerFolder, headWeld, headWeld2, animWeld, ABWeld, LWeld, RWeld, LWeld2, RWeld2, LLegWeld, RLegWeld, gunParts2 = gunSetup:InvokeServer(Vars)]]
		
		--------------------[ CREATING IGNORE MODELS ]--------------------------------
		
		gunIgnore = Instance.new("Model")
		gunIgnore.Name = "gunIgnore_"..Player.Name
		gunIgnore.Parent = ignoreModel
		
		--------------------[ MODIFYING THE PLAYER ]----------------------------------
		
		Player.CameraMode = Enum.CameraMode.LockFirstPerson
		Cam.CameraType = Enum.CameraType.Scriptable
		Cam.FieldOfView = 80
		UIS.MouseBehavior = Enum.MouseBehavior.LockCenter
		UIS.MouseIconEnabled = false
		
		local initialX, initialY = getYawPitch(Cam.CoordinateFrame)
		camAng = -VEC2(initialX, initialY)
		
		mainGUI.Parent = Player.PlayerGui
		
		setUpGUI()
		updateHealth()
		
		if S.selectFire then
			local currentMode = Modes[((rawFireMode - 1) % numModes) + 1]
			if currentMode == "AUTO" then
				fireFunction = autoFire
			elseif currentMode == "BURST" then
				fireFunction = burstFire
			elseif currentMode == "SEMI" then
				fireFunction = semiFire
			else
				fireFunction = nil
			end
		else
			if S.gunType.Semi then
				fireFunction = semiFire
			elseif S.gunType.Auto then
				fireFunction = autoFire
			elseif S.gunType.Burst then
				fireFunction = burstFire
			else
				fireFunction = nil
			end
		end
		
		changePlayerTrans(Char, 1)
		
		Humanoid.AutoRotate = false
		
		Shoulders.Right.Part1 = nil
		Shoulders.Left.Part1 = nil

		playerFolder = Instance.new("Model")
		playerFolder.Name = "playerFolder"
		playerFolder.Parent = gunIgnore
		
		local headBase = Instance.new("Part")
		headBase.Transparency = 1
		headBase.Name = "headBase"
		headBase.CanCollide = false
		headBase.FormFactor = Enum.FormFactor.Custom
		headBase.Size = V3(0.2, 0.2, 0.2)
		headBase.BottomSurface = Enum.SurfaceType.Smooth
		headBase.TopSurface = Enum.SurfaceType.Smooth
		headBase.Parent = playerFolder
		
		headWeld = Instance.new("Weld")
		headWeld.Part0 = Torso
		headWeld.Part1 = headBase
		headWeld.C0 = CF(0, 1.5, 0)
		headWeld.Parent = Torso
		
		headWeld2 = Instance.new("Weld")
		headWeld2.Part0 = headBase
		headWeld2.Part1 = Head
		headWeld2.Parent = headBase
		
		neckClone = Neck:Clone()
		
		--[[local stanceBase = Instance.new("Part")
		stanceBase.Transparency = 1
		stanceBase.Name = "stanceBase"
		stanceBase.CanCollide = false
		stanceBase.FormFactor = Enum.FormFactor.Custom
		stanceBase.Size = V3(0.2, 0.2, 0.2)
		stanceBase.BottomSurface = Enum.SurfaceType.Smooth
		stanceBase.TopSurface = Enum.SurfaceType.Smooth
		stanceBase.Parent = playerFolder
		
		stanceWeld = Instance.new("Weld")
		stanceWeld.Part0 = stanceBase
		stanceWeld.Part1 = Torso
		stanceWeld.Parent = stanceBase]]
		
		local animBase = Instance.new("Part")
		animBase.Transparency = 1
		animBase.Name = "animBase"
		animBase.CanCollide = false
		animBase.FormFactor = Enum.FormFactor.Custom
		animBase.Size = V3(0.2, 0.2, 0.2)
		animBase.BottomSurface = Enum.SurfaceType.Smooth
		animBase.TopSurface = Enum.SurfaceType.Smooth
		animBase.Parent = playerFolder
		
		animWeld = Instance.new("Weld")
		animWeld.Part0 = animBase
		animWeld.Part1 = headBase
		animWeld.Parent = animBase
		
		local ArmBase = Instance.new("Part")
		ArmBase.Transparency = 1
		ArmBase.Name = "ArmBase"
		ArmBase.CanCollide = false
		ArmBase.FormFactor = Enum.FormFactor.Custom
		ArmBase.Size = V3(0.2, 0.2, 0.2)
		ArmBase.BottomSurface = Enum.SurfaceType.Smooth
		ArmBase.TopSurface = Enum.SurfaceType.Smooth
		ArmBase.Parent = playerFolder
		
		ABWeld = Instance.new("Weld")
		ABWeld.Part0 = ArmBase
		ABWeld.Part1 = animBase
		ABWeld.Parent = ArmBase
		
		local LArmBase = Instance.new("Part")
		LArmBase.Transparency = 1
		LArmBase.Name = "LArmBase"
		LArmBase.CanCollide = false
		LArmBase.FormFactor = Enum.FormFactor.Custom
		LArmBase.Size = V3(0.2, 0.2, 0.2)
		LArmBase.BottomSurface = Enum.SurfaceType.Smooth
		LArmBase.TopSurface = Enum.SurfaceType.Smooth
		LArmBase.Parent = playerFolder
		
		local RArmBase = Instance.new("Part")
		RArmBase.Transparency = 1
		RArmBase.Name = "RArmBase"
		RArmBase.CanCollide = false
		RArmBase.FormFactor = Enum.FormFactor.Custom
		RArmBase.Size = V3(0.2, 0.2, 0.2)
		RArmBase.BottomSurface = Enum.SurfaceType.Smooth
		RArmBase.TopSurface = Enum.SurfaceType.Smooth
		RArmBase.Parent = playerFolder
		
		LWeld = Instance.new("Weld")
		LWeld.Name = "LWeld"
		LWeld.Part0 = ArmBase
		LWeld.Part1 = LArmBase
		LWeld.C0 = armC0[1]
		LWeld.C1 = S.equipSettings.leftArmC1
		LWeld.Parent = ArmBase
		
		RWeld = Instance.new("Weld")
		RWeld.Name = "RWeld"
		RWeld.Part0 = ArmBase
		RWeld.Part1 = RArmBase
		RWeld.C0 = armC0[2]
		RWeld.C1 = S.equipSettings.rightArmC1
		RWeld.Parent = ArmBase
		
		LWeld2 = Instance.new("Weld")
		LWeld2.Name = "LWeld"
		LWeld2.Part0 = LArmBase
		LWeld2.Part1 = LArm
		LWeld2.Parent = LArmBase
		
		RWeld2 = Instance.new("Weld")
		RWeld2.Name = "RWeld"
		RWeld2.Part0 = RArmBase
		RWeld2.Part1 = RArm
		RWeld2.Parent = RArmBase
		
		LLegWeld = Instance.new("Weld")
		LLegWeld.Name = "LLegWeld"
		LLegWeld.Part0 = Torso
		LLegWeld.Part1 = nil
		LLegWeld.C0 = CF(-0.5, -2, 0)
		LLegWeld.Parent = Torso
		
		RLegWeld = Instance.new("Weld")
		RLegWeld.Name = "RLegWeld"
		RLegWeld.Part0 = Torso
		RLegWeld.Part1 = nil
		RLegWeld.C0 = CF(0.5, -2, 0)
		RLegWeld.Parent = Torso
		
		if S.playerArms then
			armModel = Instance.new("Model", workspace.FilteringEnabled and playerFolder or Cam)
			
			fakeLArm = LArm:Clone()
			fakeLArm.Parent = armModel
			fakeLArm.Transparency = S.fakeArmSettings.Transparency
			fakeLArm.CanCollide = false
			fakeLArm.Size = S.fakeArmSettings.armSize
			fakeLArm:BreakJoints()
			
			--LArm.Transparency = 1
			
			local fakeLWeld = Instance.new("Weld")
			fakeLWeld.Part0 = fakeLArm
			fakeLWeld.Part1 = LArm
			fakeLWeld.Parent = fakeLArm
			
			fakeRArm = RArm:Clone()
			fakeRArm.Parent = armModel
			fakeRArm.Transparency = S.fakeArmSettings.Transparency
			fakeRArm.CanCollide = false
			fakeRArm.Size = S.fakeArmSettings.armSize
			fakeRArm:BreakJoints()
			
			--RArm.Transparency = 1
			
			local fakeRWeld = Instance.new("Weld")
			fakeRWeld.Part0 = fakeRArm
			fakeRWeld.Part1 = RArm
			fakeRWeld.Parent = fakeRArm
			
			Instance.new("Humanoid", armModel)
			
			if S.fakeArmSettings.characterMeshes then
				for _,Obj in pairs(Char:GetChildren()) do
					if Obj:IsA("CharacterMesh") then
						Obj:Clone().Parent = armModel
					end
				end
			end
			for _,Obj in pairs(Char:GetChildren()) do
				if Obj:IsA("Shirt") then
					Obj:Clone().Parent = armModel
				end
			end
		else
			armTable = createArms()
			if workspace.FilteringEnabled then
				armTable[1].Model.Parent = playerFolder
				armTable[2].Model.Parent = playerFolder
			else
				armTable[1].Model.Parent = Cam--playerFolder
				armTable[2].Model.Parent = Cam--playerFolder
			end
			
			fakeLArm = armTable[1].armPart
			
			--LArm.Transparency = 1
			
			local fakeLWeld = Instance.new("Weld")
			fakeLWeld.Part0 = fakeLArm
			fakeLWeld.Part1 = LArm
			fakeLWeld.Parent = fakeLArm
			
			fakeRArm = armTable[2].armPart
			
			--RArm.Transparency = 1
			
			local fakeRWeld = Instance.new("Weld")
			fakeRWeld.Part0 = fakeRArm
			fakeRWeld.Part1 = RArm
			fakeRWeld.Parent = fakeRArm
		end
		
		--------------------[ MODIFYING THE GUN ]-------------------------------------
		
		for _, Tab in pairs(gunParts) do
			local Weld = Instance.new("Weld")
			Weld.Name = "MainWeld"
			Weld.Part0 = Handle
			Weld.Part1 = Tab.Obj
			Weld.C0 = Tab.Obj.weldCF.Value
			Weld.Parent = Handle
			Tab.Weld = Weld
		end
		
		Grip = RArm:WaitForChild("RightGrip")
		
		local handleCF = Torso.CFrame * CF(0, 0.5, 0) * armC0[2] * S.aimedC1.rightArm:inverse() * Grip.C0
		local handleOffset = AimPart.CFrame:toObjectSpace(Handle.CFrame)
		aimedGripCF = ((Torso.CFrame * CF(headOffset.X, headOffset.Y, 0)) * handleOffset):toObjectSpace(handleCF)
		
		Grip.C1 = S.equipSettings.GripC1
		
		--------------------[ RUNNING PLUGINS ]---------------------------------------
		
		for _, Plugin in pairs(Plugins.OnEquipped) do
			spawn(function()
				Plugin()
			end)
		end
		
		--------------------[ GETTING PLAYER MASS ]-----------------------------------
		
		local connectedParts = HRP:GetConnectedParts(true)
		for _, v in pairs(connectedParts) do
			if v:IsA("BasePart") then
				playerMass = playerMass + v:GetMass()
			end
		end
		
		--------------------[ CONNECTIONS ]-------------------------------------------
		
		INSERT(Connections, Humanoid.Died:connect(function()
			onUnequipped(true)
		end))
		
		INSERT(Connections, Humanoid.Jumping:connect(function()
			if Stance ~= 0 then
				Stand()
			end
		end))
		
		INSERT(Connections, Humanoid.StateChanged:connect(onHumanoidStateChanged))
		
		INSERT(Connections, Humanoid.HealthChanged:connect(updateHealth))
		
		INSERT(Connections, M2.Button1Down:connect(onMB1Down))
		
		INSERT(Connections, M2.Button1Up:connect(onMB1Up))
		
		INSERT(Connections, M2.Button2Down:connect(onMB2Down))
		
		INSERT(Connections, M2.Button2Up:connect(onMB2Up))
		
		INSERT(Connections, M2.KeyDown:connect(keyDown))
		
		INSERT(Connections, M2.KeyUp:connect(keyUp))
		
		if S.sensitivitySettings.scrollToChange then
			INSERT(Connections, M2.WheelForward:connect(onScrollUp))
			INSERT(Connections, M2.WheelBackward:connect(onScrollDown))
		end
		
		if S.AutoKnife then
			INSERT(Connections, RS.Stepped:connect(function()
				local H, P = AdvRayCast(Head.CFrame.p, Head.CFrame.lookVector, S.AutoKnifeDist, nil)
				if H then
					local HitHuman = findFirstClass(H.Parent, "Humanoid")
					if HitHuman and isEnemy(HitHuman) and HitHuman.Health ~= 0 then
						Knife()
					end
				end
			end))
		end
		
		INSERT(Connections, UIS.InputChanged:connect(function(inputObj)
			if inputObj.UserInputType == Enum.UserInputType.MouseMovement then
				local rawCamAng = camAng - (VEC2(RAD(inputObj.Delta.x), RAD(inputObj.Delta.y)) * mouseSensitivity * 0.25)
				camAng = VEC2(rawCamAng.x, (rawCamAng.y > RAD(80) and RAD(80) or rawCamAng.y < RAD(-80) and RAD(-80) or rawCamAng.y))
				
				desiredXOffset = math.min(math.max(inputObj.Delta.x, -S.momentumSettings.maxInput), S.momentumSettings.maxInput)
				desiredYOffset = math.min(math.max(inputObj.Delta.y, -S.momentumSettings.maxInput), S.momentumSettings.maxInput)
			end
		end))
		
		INSERT(Connections, M2.Idle:connect(function(inputObj)
			desiredXOffset = 0
			desiredYOffset = 0
		end))
		
		INSERT(Connections, RS.Stepped:connect(function()
			if tick() - lastBeat > (Humanoid.Health / 75) then
				lastBeat = tick()
				HUD.Health.Tray.Beat:TweenPosition(
					UDim2.new(0, -21, 0, 0),
					Enum.EasingDirection.Out,
					Enum.EasingStyle.Linear,
					0.7 - ((100 - Humanoid.Health) / 400),
					false,
					function()
						HUD.Health.Tray.Beat.Position = UDim2.new(1, 0, 0, 0)
					end
				)
			end
		end))
		
		INSERT(Connections, RS.RenderStepped:connect(function()
			--Main animation
			local animC0, animC1 = getAnimCF()
			animWeld.C0 = animC0
			animWeld.C1 = animC1
			
			--Camera updating
			renderCamera()
		end))
		
		--------------------[ ANIMATE GUN ]-------------------------------------------
		
		tweenJoint(LWeld, nil, S.unAimedC1.leftArm, Sine, S.equipSettings.Time)
		tweenJoint(RWeld, nil, S.unAimedC1.rightArm, Sine, S.equipSettings.Time)
		tweenJoint(Grip, nil, S.unAimedC1.Grip, Sine, S.equipSettings.Time)
		spawn(function()
			local T = tick()
			while true do
				if tick() - T > S.equipSettings.Time then break end
				if (not Selected) then break end
				wait()
			end
			equipAnimPlaying = false
		end)
		
		Animate()
	end
end

function onUnequipped(deleteTool)
	if Selected then
		Selected = false
		
		breakReload = true
		
		--------------------[ RUNNING PLUGINS ]---------------------------------------
		
		for _, Plugin in pairs(Plugins.OnUnEquipped) do
			spawn(function()
				Plugin()
			end)
		end
		
		--------------------[ MODIFYING THE PLAYER ]----------------------------------
		
		Cam.FieldOfView = 70
		Cam.CameraType = Enum.CameraType.Custom
		
		UIS.MouseBehavior = Enum.MouseBehavior.Default
		UIS.MouseIconEnabled = true
		
		Player.CameraMode = Enum.CameraMode.Classic
		
		if armTable then
			armTable[1].Model:Destroy()
			armTable[2].Model:Destroy()
		elseif armModel then
			armModel:Destroy()
		end
		
		LLegWeld:Destroy()
		RLegWeld:Destroy()
		
		changePlayerTrans(Char, 0)
		
		mainGUI.Parent = script
		
		Shoulders.Right.Part1 = RArm
		Shoulders.Left.Part1 = LArm
		
		neckClone.Parent = Torso
		headWeld:Destroy()
		
		Humanoid.WalkSpeed = 16
		Humanoid.AutoRotate = true
		
		--------------------[ RESETING THE TOOL ]-------------------------------------
		
		gunIgnore:Destroy()
		
		mouseSensitivity = S.sensitivitySettings.Default
		
		MB1Down = false
		
		playerMass = 0
		
		Aimed = false
		
		camOffsets = {
			guiScope = {
				Rot = V3();
			};
			Reload = {
				Rot = V3();
				Code = nil;
			};
			Recoil = {
				Rot = V3();
				Code = nil;
			};
		}
		
		recoilAnim = {
			Pos = V3();
			Rot = V3();
			Code = nil;
		}

		--Setting the aim variables to unaimed
		spreadZoom = "unAimed"
		scopeMain.Visible = false
		scopeSteady.Visible = false
		aimAlpha = 0
		aimHeadOffset = 0
		jumpAnimMultiplier = 1
		translationDivisor = 7
		rotationMultiplier = S.momentumSettings.Amplitude.unAimed
		armTiltMultiplier = 1
		Scope.BackgroundTransparency = 1
		if S.guiScope then
			spawn(function()
				for _, Obj in pairs(Gun:GetChildren()) do
					if Obj:IsA("BasePart") then
						Obj.LocalTransparencyModifier = 0
					end
				end
			end)
		end
		
		onGround = true
		
		for _, Tab in pairs(gunParts) do
			Tab.Weld:Destroy()
			Tab.Weld = nil
		end
		
		for _,c in pairs(Connections) do
			c:disconnect()
		end
		
		Connections = {}
		
		if deleteTool then
			Cam:ClearAllChildren()
			Gun:Destroy()
		end
		
		wait() --This is here in case you dolphin dived and deselected the tool instantly
		
		if S.stanceSettings.standOnDeselect and Stance ~= 0 then
			crawlCamRot = 0
			isCrawling = false
			stanceSway = 1
			spreadStance = "Stand"
			Stand(true)
		end
		baseSpread = S.spreadSettings[spreadZoom][spreadStance][spreadMotion]
	end
end

Gun.Equipped:connect(onEquipped)
Gun.Unequipped:connect(function() onUnequipped(false) end)

--------------------------------------------------------------------------------------
--------------------[ END PROGRAM ]---------------------------------------------------
--------------------------------------------------------------------------------------]]></ProtectedString>
			</Properties>
			<Item class="IntValue" referent="RBXD3F913AE96B94E658997138E5A756768">
				<Properties>
					<string name="Name">ignoreCode</string>
					<int name="Value">0</int>
				</Properties>
			</Item>
			<Item class="Folder" referent="RBX824483C8DFE2486A9EC57F91A8AF6770">
				<Properties>
					<string name="Name">Server_Scripts</string>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX83FFD05C001D4E1A8FE2D29F076FB282">
				<Properties>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Spring</string>
					<string name="ScriptGuid"></string>
					<ProtectedString name="Source"><![CDATA[local Spring = {}

function Spring.new(Initial)
	local t0 = tick()
	local p0 = Initial or 0
	local v0 = Initial and Vector3.new() or 0
	local t	= Initial or 0
	local d	= 1
	local s	= 1

	local function positionVelocity(Tick)
		local x	= Tick - t0
		local c0 = p0 - t
		if s == 0 then
			return p0, 0
		elseif d < 1 then
			local c	= math.sqrt(1 - d ^ 2)
			local c1 = (v0 / s + d * c0) / c
			local co = math.cos(c * s * x)
			local si = math.sin(c * s * x)
			local e	= math.exp(d * s * x)
			local p = t + (c0 * co + c1 * si) / e
			local v = s * ((c * c1 - d * c0) * co - (c * c0 + d * c1) * si) / e
			return p, v
		else
			local c1 = v0 / s + c0
			local e	= math.exp(s * x)
			local p = t + (c0 + c1 * s * x) / e
			local v = s * (c1 - c0 - c1 * s * x) / e
			return p, v
		end
	end

	return setmetatable(
		{
			accelerate = function(_, acceleration)
				local T = tick()
				local p, v = positionVelocity(T)
				p0 = p
				v0 = v + acceleration
				t0 = T
			end;
		},
		{
			__index = function(_, index)
				if index == "value" or index == "position" or index == "p" then
					local p, v = positionVelocity(tick())
					return p
				elseif index == "velocity" or index == "v" then
					local p, v = positionVelocity(tick())
					return v
				elseif index == "acceleration" or index == "a" then
					local x	= tick() - t0
					local c0 = p0 - t
					if s == 0 then
						return 0
					elseif d < 1 then
						local c = math.sqrt(1 - d ^ 2)
						local c1 = (v0 / s + d * c0) / c
						local cs = (c0 * d ^ 2 - 2 * c * d * c1 - c0 * c ^ 2) * math.cos(c * s * x)
						local sn = (c1 * d ^ 2 + 2 * c * d * c0 - c1 * c ^ 2) * math.sin(c * s * x)
						return s ^ 2 *(cs + sn) / math.exp(d * s * x)
					else
						local c1 = v0 / s + c0
						return s ^ 2 * (c0 - 2 * c1 + c1 * s * x) / math.exp(s * x)
					end
				elseif index == "target" or index == "t" then
					return t
				elseif index == "damper" or index == "d" then
					return d
				elseif index == "speed" or index == "s" then
					return s
				elseif index == "magnitude" or index == "m" then
					local p, v = positionVelocity(tick())
					return p.magnitude
				else
					error(index.." is not a valid member of spring", 0)
				end
			end;
			
			__newindex = function(_, index, value)
				local T = tick()
				if index == "value" or index == "position" or index == "p" then
					local p, v = positionVelocity(T)
					p0, v0 = value, v
				elseif index == "velocity" or index == "v" then
					local p, v = positionVelocity(T)
					p0, v0 = p, value
				elseif index == "acceleration" or index == "a" then
					local p, v = positionVelocity(T)
					p0, v0 = p, v + value
				elseif index == "target" or index == "t" then
					p0, v0 = positionVelocity(T)
					t = value
				elseif index == "damper" or index == "d" then
					p0, v0 = positionVelocity(T)
					d = value < 0 and 0 or value < 1 and value or 1
				elseif index == "speed" or index == "s" then
					p0, v0 = positionVelocity(T)
					s = value < 0 and 0 or value
				else
					error(index.." is not a valid member of spring", 0)
				end
				t0 = T
			end;
		}
	)
end

return Spring]]></ProtectedString>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBXA8E08443FAAF4CD393ABFD0EFCDE356D">
				<Properties>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Particle</string>
					<string name="ScriptGuid"></string>
					<ProtectedString name="Source"><![CDATA[---------------------------------------------------------------------------------------------------------
--[[
	
	AUTHOR: TurboFusion
	DATE CREATED: 4/8/16
	
	DESCRIPTION: This is a module that creates gui particles which simulates physical parts
	
	function Particle.new(Prop)
	
	ARGUMENT: Table {
		Table rayIgnore;	--This table contains objects that the visiblity checking ray should ignore (DEFAULT: {})
		Color3 Color;		--This color3 value is what color the particle will be (DEFAULT: Color3.new(1, 1, 1))
		float Length;		--This float value is how long the particle will be in world space (DEFAULT: 1)
		float Width;		--This float value is how wide the particle will be in world space (DEFAULT: 1)
		Vector3 p0;			--This Vector3 value is the initial position of the particle (Must exist)
		Vector3 v0;			--This Vector3 value is the initial velocity of the particle (Must exist)
		Vector3 a0;			--This Vector3 value is the initial acceleration of the particle (Must exist)
	}
	
	RETURNS: Metatable
	
	EDITABLE PROPERTIES:
		Particle.t = float Time --Sets a time value in seconds which is used to figure out where to render the particle (t=0 will be initial conditions)
		
	READ-ONLY PROPERTIES:
		Particle.p or Particle.position --Returns a world position of the particle
		Particle.v or Particle.velocity --Returns a world velocity of the particle
		Particle.obj or Particle.object --Returns the particle frame itself
		
	METHODS:
		Particle:delete() --This method deletes the particle and stops rendering calculations (use this instead of directly destroying the frame itself)
		
	EXAMPLE CODE:
		local t = 0
		local Particle = Particle.new(
			{
				Color = Color3.new(1, 1, 0);
				Width = 1;
				p0 = Vector3.new();
				v0 = Vector3.new(0, 100, 100);
				a0 = Vector3.new(0, -196.2, 0);
			}
		)
		Particle.obj.Parent = screenGui
		while true do
			Particle.t = t
			t = t + 1/30
			wait()
		end

--]]
---------------------------------------------------------------------------------------------------------

local Particle = {}

function Particle.new(Prop)
	----------[ CONSTANTS ]--------------------
	
	local Cam = workspace.CurrentCamera
	local rayIgnore = Prop.rayIgnore or {} --If the property doesn't exist, then set it to it's default
	local Color = Prop.Color or Color3.new(1, 1, 1)
	local Length = Prop.Length or 1
	local Width = Prop.Width or 1
	local p0 = Prop.p0 or error("Particle.new requires a p0 (origin position) property!", 0) --Give an error message if you don't this
	local v0 = Prop.v0 or error("Particle.new requires a v0 (initial velocity) property!", 0)
	local a0 = Prop.a0 or error("Particle.new requires an a0 (initial acceleration) property!", 0)
	
	----------[ VARIABLES ]--------------------
	
	local Deleted = false
	local p = p0 --Set the position, velocity, and acceleration as the intial conditions
	local v = v0
	local a = a0
	local t = 0
	
	----------[ FUNCTIONS ]--------------------
	
	local function worldWidthToScreenWidth(Width, Depth) --A function I made that gives you a screen width given a world width and depth
		local Center = Cam.CoordinateFrame * CFrame.new(0, 0, -Depth)
		local wp1 = (Center * CFrame.new(0, Width / 2, 0)).p
		local wp2 = (Center * CFrame.new(0, -Width / 2, 0)).p
		local sp1 = Cam:WorldToScreenPoint(wp1) --Use the WorldToScreenPoint method of the camera to get the screen width from the world width
		local sp2 = Cam:WorldToScreenPoint(wp2)
		return (sp1 - sp2).magnitude
	end
	
	----------[ MAIN PROGRAM ]-----------------
	
	local Container = Instance.new("Frame")
	Container.BackgroundTransparency = 1
	Container.Position = UDim2.new()
	Container.Size = UDim2.new()
	local Line = Instance.new("Frame")
	Line.BackgroundColor3 = Color
	Line.BorderSizePixel = 0
	Line.Position = UDim2.new()
	Line.Size = UDim2.new()
	Line.Parent = Container
	
	return setmetatable(
		{
			delete = function() --This function safely removes the particle
				Container:Destroy()
				Deleted = true
			end
		},
		{
			__index = function(_, Index)
				if Index == "p" or Index == "position" then --Return the world position of the particle
					return (Deleted and nil or p)
				elseif Index == "v" or Index == "velocity" then --Return the world velocity of the particle
					return (Deleted and nil or v)
				elseif Index == "obj" or Index == "object" then --Return the particle frame itself
					return (Deleted and nil or Container)
				else
					error(Index.." is not a member of Particle!", 0) --Give an error message if any other index is called
				end
			end;
			
			__newindex = function(_, Index, Value)
				if Index == "t" or Index == "time" and (not Deleted) then --Render the particle given a time value
					t = Value
					p = p0 + (v0 * t) + (0.5 * a0 * t * t) --update the position given the time
					v = v0 + (a0 * t) --update the velocity given the time
					
					local testRay1 = Ray.new(Cam.CoordinateFrame.p, (p + (v.unit * Length) / 2) - Cam.CoordinateFrame.p)
					local testRay2 = Ray.new(Cam.CoordinateFrame.p, (p - (v.unit * Length) / 2) - Cam.CoordinateFrame.p)
					local H1, _ = workspace:FindPartOnRayWithIgnoreList(testRay1, rayIgnore)
					local H2, _ = workspace:FindPartOnRayWithIgnoreList(testRay2, rayIgnore)
					
					if H1 and H2 then
						Line.Visible = false
					else
						local face1 = Cam:WorldToScreenPoint(p + (v.unit * Length) / 2) --Get the 2 endpoints of the particle in screen space
						local face2 = Cam:WorldToScreenPoint(p - (v.unit * Length) / 2)
						local Center, isVisible = Cam:WorldToScreenPoint(p) --Get the center of the particle in screen space
						
						local screenLength = (face1 - face2).magnitude
						local screenWidth = worldWidthToScreenWidth(Width, Center.Z)
						local Ang = math.atan2(face1.Y - face2.Y, face1.X - face2.X) --Get the angle the particle needs to be at in order to line up
						
						Line.Position = UDim2.new(0, 0, 0, -screenWidth / 2)
						Line.Size = UDim2.new(1, 0, 0, screenWidth)
						Line.Visible = isVisible --Make the particle invisible if the world point isn't on screen
						
						Container.Position = UDim2.new(
							0,
							face2.X + (math.cos(Ang) - 1) * screenLength / 2, --Yay trig!
							0,
							face2.Y + math.sin(Ang) * screenLength / 2
						)
						Container.Size = UDim2.new(0, screenLength, 0, 0)
						Container.Rotation = math.deg(Ang)
					end
				else
					error(Index.." is not a member of Particle!", 0) --Give an error message if any other index is being changed
				end
			end
		}
	)
end

return Particle]]></ProtectedString>
				</Properties>
			</Item>
			<Item class="ScreenGui" referent="RBX53FECA6E041E4BAE9C3607CB6AD14A5C">
				<Properties>
					<string name="Name">mainGUI</string>
				</Properties>
				<Item class="ImageLabel" referent="RBX276C82CF9B4E48E1B5B28AF92EA06439">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<Content name="Image"><url>http://www.roblox.com/asset/?id=121173757</url></Content>
						<Color3 name="ImageColor3">4294967295</Color3>
						<Vector2 name="ImageRectOffset">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Vector2 name="ImageRectSize">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<float name="ImageTransparency">0</float>
						<string name="Name">hitMarker</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>-13</XO>
							<YS>0.5</YS>
							<YO>-31</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<token name="ScaleType">0</token>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>26</XO>
							<YS>0</YS>
							<YO>26</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<Rect2D name="SliceCenter">
							<min>
								<X>0</X>
								<Y>0</Y>
							</min>
							<max>
								<X>0</X>
								<Y>0</Y>
							</max>
						</Rect2D>
						<bool name="Visible">false</bool>
						<int name="ZIndex">10</int>
					</Properties>
					<Item class="NumberValue" referent="RBX48F30CC7D5BE4F3D8B9F7C6137142530">
						<Properties>
							<string name="Name">lastMark</string>
							<double name="Value">0</double>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX3401095173D54951B8A0633D3610C680">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4278190080</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">crossHair</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>-18</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="ImageLabel" referent="RBXA4353F2BA299444F90760F159C855F5F">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=68308747</url></Content>
							<Color3 name="ImageColor3">4294967295</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<string name="Name">ImageLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>-150</XO>
								<YS>0</YS>
								<YO>-150</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<token name="ScaleType">0</token>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>300</XO>
								<YS>0</YS>
								<YO>300</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<bool name="Visible">false</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX4EC27816A06841FB869C16D581E522B6">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">6</token>
							<string name="Name">Reload</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>-50</XO>
								<YS>0</YS>
								<YO>70</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>100</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">Reloading...</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX1F1902CEDF66494A88A4D321E55BA25A">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">true</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">C</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>-2</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>4</XO>
								<YS>0</YS>
								<YO>500</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX75875683040B4EC282EF50AA276A6EEF">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4284769380</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">5</token>
								<string name="Name">Line</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>-1</XO>
									<YS>0</YS>
									<YO>10</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>2</XO>
									<YS>0</YS>
									<YO>15</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX588FEDBCB3A745D9BCCA721CCAA53EAB">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">true</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">A</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>-2</XO>
								<YS>0</YS>
								<YO>-500</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>4</XO>
								<YS>0</YS>
								<YO>500</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBXD994252176424F798FF16260F4F31914">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4284769380</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">5</token>
								<string name="Name">Line</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>-1</XO>
									<YS>1</YS>
									<YO>-25</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>2</XO>
									<YS>0</YS>
									<YO>15</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX1D7AF211C6D94648944049F1FB5BF0CD">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">true</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">B</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>-2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>500</XO>
								<YS>0</YS>
								<YO>4</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBXB7E7E3DAF4584DAC9E510F53CD5FA3F5">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4284769380</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">5</token>
								<string name="Name">Line</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>10</XO>
									<YS>0.5</YS>
									<YO>-1</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>15</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX03ACB08294CD46C4A1C80648296309DD">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">true</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">D</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>-500</XO>
								<YS>0</YS>
								<YO>-2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>500</XO>
								<YS>0</YS>
								<YO>4</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX0F437E67A95B473C8DF12670D0F18286">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4284769380</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">5</token>
								<string name="Name">Line</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>1</XS>
									<XO>-25</XO>
									<YS>0.5</YS>
									<YO>-1</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>15</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBXDD6DC86A4B2643998E6E1142F528AEB9">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4280821800</Color3>
						<float name="BackgroundTransparency">0.300000012</float>
						<Color3 name="BorderColor3">4280821800</Color3>
						<int name="BorderSizePixel">5</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">HUD</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>1</XS>
							<XO>-200</XO>
							<YS>1</YS>
							<YO>-165</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>175</XO>
							<YS>0</YS>
							<YO>90</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">10</int>
					</Properties>
					<Item class="Frame" referent="RBX68BFC928206E46BFB76AF3AF9BC1A47F">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Ammo</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>45</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>175</XO>
								<YS>0</YS>
								<YO>40</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">10</int>
						</Properties>
						<Item class="TextLabel" referent="RBXD8ED2A4C33194144B6B18930760F5DB1">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">7</token>
								<string name="Name">Slash</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>90</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>10</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">/</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">10</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX05656A7CFFB746D6885D45067F4F9062">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">7</token>
								<string name="Name">Stored</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>105</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>70</XO>
									<YS>0</YS>
									<YO>25</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">100</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">10</int>
							</Properties>
							<Item class="TextLabel" referent="RBX186A4652C0FB416EB48AFEE9116231AB">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">7</token>
									<string name="Name">Background</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">000</string>
									<Color3 name="TextColor3">4288059030</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0.800000012</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">10</int>
								</Properties>
							</Item>
						</Item>
						<Item class="TextLabel" referent="RBXDAA00DBE8FB246F2951ADF33B24A56EC">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">9</token>
								<string name="Name">Clip</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>85</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">9</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">1</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">10</int>
							</Properties>
							<Item class="TextLabel" referent="RBXBAD135847681460BA3974EB9C8B3069D">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">9</token>
									<string name="Name">Background</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">000</string>
									<Color3 name="TextColor3">4288059030</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0.800000012</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">1</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">10</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Frame" referent="RBXFCC7B8451EF44584BC5832F07EF04BB8">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Mode</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>90</XO>
								<YS>0</YS>
								<YO>65</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>85</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">10</int>
						</Properties>
						<Item class="TextLabel" referent="RBXD92B8741A76B42299E4D57A740724920">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">6</token>
								<string name="Name">Bracket</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">[</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">10</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX645A9995043042759486709ED974BE77">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">6</token>
								<string name="Name">Bracket</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>1</XS>
									<XO>-5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">]</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">10</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBXB642B6D9D2714BF0A001ED7CA3809A6D">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">4</token>
								<token name="FontSize">6</token>
								<string name="Name">Main</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Auto</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">10</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX65C1204195374E9AB5E3D2BFCF708A8E">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4280821800</Color3>
							<float name="BackgroundTransparency">0.300000012</float>
							<Color3 name="BorderColor3">4280821800</Color3>
							<int name="BorderSizePixel">5</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Health</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>-40</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">10</int>
						</Properties>
						<Item class="TextLabel" referent="RBXED092A7F039E4CF39EEA0A45B956B4AF">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4278190080</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">7</token>
								<string name="Name">Num</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>1</XS>
									<XO>-50</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>50</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">100%</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">0</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">1</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">10</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX0975142E9D314ECA8900C8ABE368AA38">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4278190080</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">true</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Tray</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>2</XO>
									<YS>0.5</YS>
									<YO>-10</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-60</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">10</int>
							</Properties>
							<Item class="Frame" referent="RBX018A55CFAD074E6E9BDDE759854A5E2D">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4278190080</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Beat</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>21</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">10</int>
								</Properties>
								<Item class="Frame" referent="RBX23EC4FD4DEEE44A1AF755AFD1FE0588D">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">00</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0.5</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXB660FE9D7DBB4AA7B757E018D8D7FFC7">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">01</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0.423076928</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX532065109D834FAB9029E5C47772509D">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">02</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.095238097</XS>
											<XO>0</XO>
											<YS>0.346153855</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX5528F4FBCCBA42089441409AA5F0DD07">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">03</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.142857149</XS>
											<XO>0</XO>
											<YS>0.269230783</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXCAE7CB5F8F004B2AB881BA3A6F078221">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">04</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.190476194</XS>
											<XO>0</XO>
											<YS>0.192307696</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX8AF57FE5DC024CF286A9C92996B5FA52">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">05</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.238095239</XS>
											<XO>0</XO>
											<YS>0.115384616</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX7462FC8541094BE29B5D795907775FAA">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">06</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.285714298</XS>
											<XO>0</XO>
											<YS>0.0384615399</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX3890372E649C4FD791FDC765BA1BB3A1">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">07</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.333333343</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX6D318B1D2442454D9D6AB6329DFCB75E">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">08</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.380952388</XS>
											<XO>0</XO>
											<YS>0.142857149</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX833832ABB77745169E25E241F2EBF082">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">09</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.428571433</XS>
											<XO>0</XO>
											<YS>0.285714298</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXFF2C1B8FF9FB4154B384391FFD248E2A">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">10</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.476190478</XS>
											<XO>0</XO>
											<YS>0.428571433</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXD263519491E84A6EAE82BD9F1DC89EA3">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">11</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.523809552</XS>
											<XO>0</XO>
											<YS>0.571428597</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX5D83C24CA3EB4E8E9E5C8675552AE23C">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">12</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.571428597</XS>
											<XO>0</XO>
											<YS>0.714285731</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXA8DAC9150B1B4704A3D762E587F973A0">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">13</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.619047642</XS>
											<XO>0</XO>
											<YS>0.857142866</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX5516D16A15694120885BB93ABDC9C581">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">14</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.666666687</XS>
											<XO>0</XO>
											<YS>0.916666687</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXE9A6B33BABFC404DA6C16B4C62CFCCA8">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">15</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.714285731</XS>
											<XO>0</XO>
											<YS>0.833333313</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXCC2EB7B64AE54CDDADF6614B64E45738">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">16</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.761904776</XS>
											<XO>0</XO>
											<YS>0.75</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXC6A418768C9F43D6BD473688C8626BDE">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">17</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.809523821</XS>
											<XO>0</XO>
											<YS>0.666666687</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX2B675C146E9B42E8AF93F8A9AFDDA545">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">18</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.857142866</XS>
											<XO>0</XO>
											<YS>0.583333313</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXC274BC2B204E41259E5B2C3F24233C4F">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">19</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.90476191</XS>
											<XO>0</XO>
											<YS>0.5</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXF34C76A4C8574841AE71F11F0B2CE524">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">20</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.952000022</XS>
											<XO>0</XO>
											<YS>0.49000001</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX88AD999371BF47B29E9D09C4AFC77426">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Line</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0.5</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>200</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX87FEABFD39CE417EB8BD80F44B268EA1">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Line</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>-200</XO>
											<YS>0.5</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>200</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="Frame" referent="RBXCF9A06AF8B734DB09030770908F2563B">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4280821800</Color3>
							<float name="BackgroundTransparency">0.300000012</float>
							<Color3 name="BorderColor3">4280821800</Color3>
							<int name="BorderSizePixel">5</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Controls</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>-200</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>120</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">10</int>
						</Properties>
						<Item class="TextLabel" referent="RBXA94F595A76F144A9AD021CFF69FAA65E">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">4</token>
								<token name="FontSize">5</token>
								<string name="Name">Title</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>15</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">CONTROLS</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">10</int>
							</Properties>
							<Item class="TextLabel" referent="RBX60DAD8FE356F4654B905E85894307391">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967040</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">5</token>
									<string name="Name">Line</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>1</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>2</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">10</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX18593009835B4437BFE9A4191ECECAB3">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Grenades</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>90</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>175</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">10</int>
						</Properties>
						<Item class="Frame" referent="RBX7931BC7A8648436FAB1BC95DD089A4A2">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0.800000012</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Lethals</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0.5</XS>
									<XO>-2</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">10</int>
							</Properties>
							<Item class="ImageLabel" referent="RBXBED4AFDC9B2B460A95250C6ED9E2FAD1">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><null></null></Content>
									<Color3 name="ImageColor3">4294967295</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<string name="Name">Icon</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>7</XO>
										<YS>0</YS>
										<YO>2</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<token name="ScaleType">0</token>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>21</XO>
										<YS>0</YS>
										<YO>21</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<bool name="Visible">true</bool>
									<int name="ZIndex">10</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX8461EE8CC1D54CF09E2A6D7CF74486A6">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">6</token>
									<string name="Name">Mult</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0.5</XS>
										<XO>-10</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>20</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">X</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">10</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBXABBED04B9E864F1BA8507324B2FF7D8E">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">6</token>
									<string name="Name">Num</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>1</XS>
										<XO>-7</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">0</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">1</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">10</int>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBXE1DCE8932A8F4E449D79BD5F61A69A85">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0.800000012</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Tacticals</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>2</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0.5</XS>
									<XO>-2</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">10</int>
							</Properties>
							<Item class="ImageLabel" referent="RBX49C1D22F53C94A648A2792818D0AF28B">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><null></null></Content>
									<Color3 name="ImageColor3">4294967295</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<string name="Name">Icon</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>7</XO>
										<YS>0</YS>
										<YO>2</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<token name="ScaleType">0</token>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>21</XO>
										<YS>0</YS>
										<YO>21</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<bool name="Visible">true</bool>
									<int name="ZIndex">10</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX5E86F8D724784F6AA8A5C53F15E0E54B">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">6</token>
									<string name="Name">Num</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>1</XS>
										<XO>-7</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">0</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">1</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">10</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX1375FF23D44A487288E792C51BDBDB39">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">6</token>
									<string name="Name">Mult</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0.5</XS>
										<XO>-10</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>20</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">X</string>
									<Color3 name="TextColor3">4294967295</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">10</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX3835A9478253479886A28739466DE363">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294506744</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">gunName</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>36</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">10</int>
						</Properties>
						<Item class="TextLabel" referent="RBXB511371F07B14A968219CB71B1669394">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">5</token>
								<string name="Name">Line</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>2</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">10</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBXC52EA5FB95A845168F60CB6D7CFEA2BC">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">5</token>
								<string name="Name">Line</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">10</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBXB6CD47ABEB3344EE9141CB5A65F97B8F">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">4</token>
								<token name="FontSize">8</token>
								<string name="Name">Title</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>7</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-7</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Gun</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">0</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">10</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBX5CA34F0BD4284BA28ED875AD4A01E3BE">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">fireSelect</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>-18</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX3F05B93B3B654B07A1E652CFCA294C44">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Modes</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="ImageLabel" referent="RBX89A038C3F766431B937498AEC5EC27E9">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=55754953</url></Content>
							<Color3 name="ImageColor3">4294967295</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0.5</float>
							<string name="Name">Circle</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>-60</XO>
								<YS>0</YS>
								<YO>-60</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<token name="ScaleType">0</token>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>120</XO>
								<YS>0</YS>
								<YO>120</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="ImageLabel" referent="RBXE6C993E467A74D7A8EBFE91234148CA8">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=126877530</url></Content>
							<Color3 name="ImageColor3">4294967295</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<string name="Name">Arrow</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>-20</XO>
								<YS>0</YS>
								<YO>-140</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<token name="ScaleType">0</token>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>40</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBXFEA0C660FEBF49A9BCEC9922864328F5">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Scope</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>-36</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>36</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX65359DB5D68D4185BEBAB28AB410FFF5">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">Steady</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>-60</XO>
								<YS>0.5</YS>
								<YO>50</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>120</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967040</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">9</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBXC773413D82BD495CAC31DDFACEB62BE6">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Main</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="ImageLabel" referent="RBX3790FCBB2FD346009146FABDFCADD190">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=184922644</url></Content>
								<Color3 name="ImageColor3">4294967295</Color3>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">ScopeImg2</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>-10</XO>
									<YS>0</YS>
									<YO>-10</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<token name="ScaleType">0</token>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>20</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<Rect2D name="SliceCenter">
									<min>
										<X>0</X>
										<Y>0</Y>
									</min>
									<max>
										<X>0</X>
										<Y>0</Y>
									</max>
								</Rect2D>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBXBC5EBFFA0CDD44D88FE3600DFBC333D7">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=72002022</url></Content>
								<Color3 name="ImageColor3">4294967295</Color3>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">ScopeImg1</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>-10</XO>
									<YS>0</YS>
									<YO>-10</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<token name="ScaleType">0</token>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>20</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<Rect2D name="SliceCenter">
									<min>
										<X>0</X>
										<Y>0</Y>
									</min>
									<max>
										<X>0</X>
										<Y>0</Y>
									</max>
								</Rect2D>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX23FAFFB3D511413083BDCFF923059E55">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4278190080</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">F2</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>-10</XO>
									<YS>0</YS>
									<YO>-10</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX554A3414A8444810A2A8537D3052E8EE">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4278190080</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">F1</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>-10</XO>
									<YS>0</YS>
									<YO>-10</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="LocalScript" referent="RBX873673ECEBCD4156A7A870FFA7F3512F">
							<Properties>
								<bool name="Disabled">false</bool>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Update</string>
								<string name="ScriptGuid"></string>
								<ProtectedString name="Source"><![CDATA[local GUI = script.Parent

function updateScopeDimension()
	GUI.ScopeImg1.Position = UDim2.new(0.5, -10 - (GUI.AbsoluteSize.y / 2), 0, -10)
	GUI.ScopeImg1.Size = UDim2.new(0, 20 + GUI.AbsoluteSize.y, 0, 20 + GUI.AbsoluteSize.y)
	GUI.ScopeImg2.Position = UDim2.new(0.5, -10 - (GUI.AbsoluteSize.y / 2), 0, -10)
	GUI.ScopeImg2.Size = UDim2.new(0, 20 + GUI.AbsoluteSize.y, 0, 20 + GUI.AbsoluteSize.y)
	GUI.F1.Size = UDim2.new(0, 20 + ((GUI.AbsoluteSize.x - GUI.AbsoluteSize.y) / 2), 1, 20)
	GUI.F2.Size = UDim2.new(0, 20 + ((GUI.AbsoluteSize.x - GUI.AbsoluteSize.y) / 2), 1, 20)
	GUI.F2.Position = UDim2.new(1, -10 - ((GUI.AbsoluteSize.x - GUI.AbsoluteSize.y) / 2), 0, -10)
end

wait()

GUI.Changed:connect(updateScopeDimension)

updateScopeDimension()]]></ProtectedString>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="TextLabel" referent="RBX9B4D2C78F8DB411889968188F9F15297">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">4</token>
						<token name="FontSize">10</token>
						<string name="Name">Sens</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>-50</XO>
							<YS>0.5</YS>
							<YO>50</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>100</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">S: 0.3</string>
						<Color3 name="TextColor3">4294967295</Color3>
						<bool name="TextScaled">false</bool>
						<Color3 name="TextStrokeColor3">4278190080</Color3>
						<float name="TextStrokeTransparency">0</float>
						<float name="TextTransparency">0</float>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">10</int>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="ModuleScript" referent="RBXAA567B717B034756B6FC2D5855E2171B">
			<Properties>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">ANIMATIONS</string>
				<string name="ScriptGuid"></string>
				<ProtectedString name="Source"><![CDATA[--[[
	
	This module script contains all the main animations. I put it into this script so it'll be easier to edit.
	
	Both arms are welded to a single brick called "animBase". This makes it easier to edit movement animations because you only have to
	edit the cframe of one brick instead of 2 arms.
	
	The idling, walking, and running animations have a Pos and a Rot component. The Pos component is the position of the weld and the Rot component
	is the rotation of the weld. They're vector3 values so the script can multiply each value by an alpha and add them together to make the smooth
	transitions possible
	
	The table directly below lets you know how each component of the Vector affects the movement of the weld so it's easier to edit
	
	This module also contains the reload animation which I moved here for easier editing. The animation function has a parameter S that contains all
	the functions and variables that are necessary to make the animation run
	
	HOW TO EDIT THE RELOAD ANIMATION:
		-Make sure each block of the animation is made into a separate function, it needs to be like this so if the reload animation needs to be stopped
		midway, the arms don't glitch out
		-Each animation piece should only have one wait command at the end of the function
		-Multiply every duration value, including the wait time values by the animSpeed. That way if you change the reload time, you won't have to change
		each individual time value for all the animation components
	
--]]

local Animations = {
	
	Reload = function(S) --This is the main reload animation. The parameter S contains all the variables and functions that are necessary for this animation
		--[[
			FUNCTION LIST_
			
				S.tweenJoint(Joint, newC0, newC1, Alpha, Duration) --This function tweens a joint to a given C0 and C1. The Alpha parameter is function
					that returns a number between 0 and 1 given an argument of a number between 0 and 90. The Duration is how fast the joint tweens. NOTE,
					you can put nil as an argument for the newC0 or newC1 parameter and the function won't tween that specific property of the weld. This
					is useful if you only want to mess with the C0 or C1 property of a weld.
					
				S.makeMagInvisible() --This function makes the mag invisible so it looks like the mag was removed
				
				S.makeMagVisible() --This function makes the mag visible again at whatever the previous transparency of the mag parts were
				
				S.isMagVisible() --This function returns a true or false value based on whether or not the mag is visible. This can be used to tell if
					the animation was stopped midway and where to restart the animation
					
				S.isMagEmpty() --This function returns a true or false value based on whether or not the mag is empty, meaning the ammo is 0. This can be
					used to decide if a chambering animation should play after the reload animation
					
				S.setNewMag() --This function sets the newMag variable in the clientMain to true which basically lets the script know that a new mag was
					put into the gun. This is used so that if the reload animation is broken after the new mag was put in but before the chambering animation
					then the script will simply play the chambering animation instead of putting in another mag
					
				S.isNewMag() --This function returns a true or false value based on whether or not the mag that is currently attached to the gun is a new
					mag. In order for it to be a new mag, it needs to have full ammo. Once you fire, the mag becomes an old mag
					
				S.createMag(Key) --This functions clones the Mag and puts it in a table with a Key parameter so you can access the mag in a separate
					function and it returns a Model containing the Mag and a table that contains the original mag bricks and the corresponding clone. NOTE,
					the mag bricks will be made non can collide
					
				S.getMag(Key) --This function gets a Mag from the mag table given a Key argument and it returns the model that the mag is contained in
					and the brick that all the other mag parts are welded to
				
				S.attachGripToHead() --This function detaches the grip from the right arm and attaches it to the Head. This is so you can make reload
					animations that require using the right arm to manipulate the gun in any way. The C0 of the grip is changed so the gun stays in the
					position that it was in before you detached the grip from the right arm.
					
				S.attachGripToArm() --This function detaches the grip from the Head and attaches it to the Arm. The C0 of the grip is changed so the gun
					stays in the position that it was in before you detached the grip from the head
				
				S.Sine(X) --This function is an Alpha function for the tweenJoint function. Given a number between 0 and 90, the function will return the
					sine of that number, which is a number between 0 and 1, which is used to tween a Joint with a Sine movement
					
				S.Linear(X) --This function is an Alpha function for the tweenJoint function. Given a number between 0 and 90, the function will return
					the number / 90, which is a number between 0 and 1, which is used to a tween a Joint with a Linear movement
				
			VARIABLE LIST_
			
				S.Handle --This variable is the Handle of gun
				
				S.LArm --This variable is the left arm
				
				S.RArm --This variable is the right arm
				
				S.LWeld --This variable is the left arm weld which is attached to the animBase
				
				S.RWeld --This variable is the right arm weld which is attached to the animBase
				
				S.LC0 --This variable is the cframe of the left arm joint with respect to the torso
				
				S.RC0 --This variable is the cframe of the right arm joint with respect to the torso
				
				S.Grip --This variable is the Grip weld which is attached to right arm
				
				S.gunIgnore --This variable is the gun ignore model which contains the fake arms and bullets and other stuff
				
				S.Cam --This variable is the player camera
				
				S.CF --This variable is the shortened form of CFrame.new which you can use instead of CFrame.new
				
				S.CFANG --This variable is the shortened form of CFrame.Angles which you can use instead of CFrame.Angles
				
				S.V3 --This variable is the shortened form of Vector3.new which you can use instead of Vector3.new
				
				S.RAD --This variable is the shortened form of math.rad which you can use instead of math.rad
				
				S.reloadTimeLoaded --This variable is the reload time for when the gun is loaded which you can use to modify how fast the reload
					animation runs
					
				S.reloadTimeEmpty --This variable is the reload time for when the gun is empty which you can use to modify how fast the reload
					animation runs
		--]]
		
		local W1 = nil
		local W2 = nil
		local animSpeed = S.isMagEmpty() and S.reloadTimeEmpty / 1.3 or S.reloadTimeLoaded / 0.9
		return {
			function()
				if (not S.isNewMag()) then
					if S.isMagVisible() then
						local Mag1, magTable1 = S.createMag("Mag1")
							
						Mag1.Parent = S.gunIgnore
						
						W1 = Instance.new("Weld")
						W1.Part0 = magTable1[1].magClone
						W1.Part1 = S.Handle
						W1.C0 = magTable1[1].Original.CFrame:toObjectSpace(S.Handle.CFrame)
						W1.Parent = magTable1[1].magClone
						
						S.tweenJoint(S.LWeld, nil, S.CF(-0.9, 2, -1.1) * S.CFANG(S.RAD(-15), 0, S.RAD(-25)), S.Sine, 0.2 * animSpeed)
						S.tweenJoint(S.RWeld, nil, S.CF(0.3, 0.2, -0.31) * S.CFANG(S.RAD(-12), 0, S.RAD(25)), S.Sine, 0.2 * animSpeed)
						S.tweenJoint(S.Grip, nil, S.CFANG(0, S.RAD(20), S.RAD(10)), S.Sine, 0.1 * animSpeed)
						wait(0.2 * animSpeed)
					end
				end
			end;
			
			function()
				if (not S.isNewMag()) then
					if S.isMagVisible() then
						S.makeMagInvisible()
						W1:Destroy()
						local Mag1, magTable1 = S.getMag("Mag1")
						magTable1[1].magClone.Velocity = S.Handle.Velocity + S.Handle.CFrame:vectorToWorldSpace(S.V3(0, -1, 0)) * 20
						
						S.tweenJoint(S.RWeld, nil, S.CF(0.3, 0.2, -0.5) * S.CFANG(S.RAD(-20), S.RAD(10), S.RAD(25)), S.Sine, 0.25 * animSpeed)
						S.tweenJoint(S.Grip, nil, S.CFANG(0, S.RAD(20), S.RAD(10)), S.Sine, 0.2 * animSpeed)
					else
						S.tweenJoint(S.RWeld, nil, S.CF(0.6, 0.2, -0.61) * S.CFANG(S.RAD(-12), S.RAD(20), S.RAD(25)), S.Sine, 0.2 * animSpeed)
						S.tweenJoint(S.Grip, nil, S.CFANG(S.RAD(-10), S.RAD(20), S.RAD(10)), S.Sine, 0.2 * animSpeed)
					end
					
					S.tweenJoint(S.LWeld, nil, S.CF(0, 0.5, 0) * S.CFANG(S.RAD(95), 0, S.RAD(-25)), S.Sine, 0.2 * animSpeed)
					
					wait(0.25 * animSpeed)
				end
			end;
			
			function()
				if (not S.isNewMag()) then
					local Mag1, magTable1 = S.getMag("Mag1")
					if Mag1 then Mag1:Destroy() end
					
					local Mag2, magTable2 = S.createMag("Mag2")
					
					Mag2.Parent = S.gunIgnore
					
					local LArmCF = S.LWeld.Part0.CFrame * S.LWeld.C0 * (S.CF(0.58, 1.63, -1.4) * S.CFANG(S.RAD(-22), S.RAD(20), S.RAD(-60))):inverse()
					local RArmCF = S.RWeld.Part0.CFrame * S.RWeld.C0 * (S.CF(0.6, 0.2, -0.61) * S.CFANG(S.RAD(-15), S.RAD(20), S.RAD(25))):inverse()
					local handleOffsetCF = S.RArm.CFrame:toObjectSpace(S.RArm.CFrame * S.Grip.C0 * (S.CFANG(S.RAD(-10), S.RAD(20), S.RAD(10))):inverse())
					local originalMagOffsetCF = S.Handle.CFrame:toObjectSpace(magTable2[1].Original.CFrame)
					local newMagC0 = LArmCF:toObjectSpace(RArmCF * handleOffsetCF * originalMagOffsetCF)
					
					W2 = Instance.new("Weld")
					W2.Part0 = S.LArm
					W2.Part1 = magTable2[1].magClone
					W2.C0 = newMagC0
					W2.Parent = magTable2[1].magClone
					
					S.tweenJoint(S.LWeld, nil, S.CF(0.55, 1, -2.4) * S.CFANG(S.RAD(-20), S.RAD(20), S.RAD(-60)), S.Sine, 0.2 * animSpeed)--0.25
					S.tweenJoint(S.RWeld, nil, S.CF(0.6, 0.2, -0.61) * S.CFANG(S.RAD(-12), S.RAD(20), S.RAD(25)), S.Sine, 0.2 * animSpeed)
					S.tweenJoint(S.Grip, nil, S.CFANG(S.RAD(-10), S.RAD(20), S.RAD(10)), S.Sine, 0.2 * animSpeed)
					wait(0.2 * animSpeed)
				end
			end;
			
			function()
				if (not S.isNewMag()) then
					S.tweenJoint(S.Grip, nil, S.CFANG(S.RAD(-10), S.RAD(20), S.RAD(10)), S.Sine, 0.15 * animSpeed)
					S.tweenJoint(S.LWeld, nil, S.CF(0.58, 1.63, -1.4) * S.CFANG(S.RAD(-22), S.RAD(20), S.RAD(-60)), S.Sine, 0.15 * animSpeed)--0.25
					S.tweenJoint(S.RWeld, nil, S.CF(0.6, 0.2, -0.61) * S.CFANG(S.RAD(-15), S.RAD(20), S.RAD(25)), S.Sine, 0.2 * animSpeed)
					
					wait(0.2 * animSpeed)
				end
			end;
			
			function()
				if (not S.isNewMag()) then
					local Mag1, _ = S.getMag("Mag1")
					local Mag2, _ = S.getMag("Mag2")
					S.makeMagVisible()
					S.setNewMag()
					if Mag1 then Mag1:Destroy() end
					Mag2:Destroy()
				end
			end;
			
			function()
				if S.isMagEmpty() then
					if S.isNewMag() then
						S.tweenJoint(S.Grip, nil, S.CFANG(S.RAD(-10), S.RAD(20), S.RAD(10)), S.Sine, 0.15 * animSpeed)
						S.tweenJoint(S.LWeld, nil, S.CF(0.58, 1.63, -1.4) * S.CFANG(S.RAD(-22), S.RAD(20), S.RAD(-60)), S.Sine, 0.15 * animSpeed)--0.25
						S.tweenJoint(S.RWeld, nil, S.CF(0.6, 0.2, -0.61) * S.CFANG(S.RAD(-15), S.RAD(20), S.RAD(25)), S.Sine, 0.2 * animSpeed)
					end
					S.tweenJoint(S.LWeld, nil, S.CF(0, 1.3, -0.55) * S.CFANG(S.RAD(-26), 0, 0), S.Sine, 0.2 * animSpeed)
					
					wait(0.2 * animSpeed)
				end
			end;
			
			function()
				if S.isMagEmpty() then
					S.tweenJoint(S.LWeld, nil, S.CF(0.4, 1.6, -0.55) * S.CFANG(S.RAD(-23), 0, S.RAD(-60)), S.Sine, 0.1 * animSpeed)
					
					wait(0.05 * animSpeed)
				end
			end;
			
			function()
				if S.isMagEmpty() then
					S.tweenJoint(S.RWeld, nil, S.CF(0.6, 0.2, -0.61) * S.CFANG(S.RAD(-15), S.RAD(20), S.RAD(20)), S.Sine, 0.05 * animSpeed)
					
					wait(0.15 * animSpeed)
				end
			end;
		}
	end;
	
	Cocking = function(S)
		
	end;
	
	Crawling = function(X, moveDirection, moveSpeed) --This is the animation for when you're crawling
		--[[
			The moveDirection gives you the angle at which your character is moving with respect to the way you're facing. So if you're
			moving to the right and you're facing forward then the moveDirection will give you an angle of -90. If you're moving backward
			and you're facing forward then the moveDirection will give you an angle of 180. I use this angle to adjust the crawling animation
			so that you're arms move in the direction that you're moving so it looks more realistic rather than the arms constantly moving forward
			
			The moveVelocity gives you how fast you're moving in the X-Z plane. It doesn't take your Y-velocity into account so if you're falling your
			moveVelocity will still be how fast you're moving horizontally. You can use this to adjust how fast the crawling animation runs so if you're
			moving really slow the animation will play slower
		--]]
		return {
			leftArm = CFrame.Angles( --This is what the cframe of the right arm will be when you're crawling
				0,
				math.rad(90),
				math.rad(-10)
			) * CFrame.new(
				math.sin(moveDirection) * (math.sin(X * 6) / 4) - 0.2,
				math.cos(moveDirection) * (math.sin(X * 6) / 2) - 0.1,
				math.max(math.cos(X * 6) / 4, 0) - 0.1
			) * CFrame.Angles(
				-math.max(math.cos(X * 6) / 4, 0),
				0,
				0
			);
			leftLeg = CFrame.new( --This is what the cframe of the left leg will be when you're crawling
				math.sin(moveDirection) * (-math.sin(X * 6) / 4) - 0.2,
				math.cos(moveDirection) * (math.sin(X * 6) / 2) + 0.3,
				math.max(math.cos(X * 6) / 4, 0) - 0.1
			):inverse() * CFrame.Angles(
				0,
				0,
				-math.rad(15) - math.cos(moveDirection) * (math.rad(15) * math.sin(X * 6))
			);
			rightArm = CFrame.Angles( --This is what the cframe of the left arm will be when you're crawling
				0,
				math.rad(-5),
				math.rad(10)
			) * CFrame.new(
				math.sin(moveDirection) * (-math.sin(X * 6) / 4) + 0.2,
				math.cos(moveDirection) * (-math.sin(X * 6) / 5) - 0.2,
				math.max(math.cos((X + math.rad(30)) * 6) / 10, 0) - 0.1
			) * CFrame.Angles(
				-math.max(math.cos((X + math.rad(30)) * 6) / 10, 0),
				0,
				0
			);
			rightLeg = CFrame.new( --This is what the cframe of the right leg will be when you're crawling
				math.sin(moveDirection) * (math.sin(X * 6) / 4) + 0.2,
				math.cos(moveDirection) * (-math.sin(X * 6) / 2) + 0.3,
				math.max(math.cos((X + math.rad(30)) * 6) / 4, 0) - 0.1
			):inverse() * CFrame.Angles(
				0,
				0,
				math.rad(15) - math.cos(moveDirection) * (math.rad(15) * math.sin(X * 6))
			);
			Grip = CFrame.Angles( --This is what the cframe of the grip will be when you're crawling
				math.max(math.cos((X + math.rad(30)) * 6) / 7, 0),
				math.rad(5),
				0
			);
			Camera = 1.5 * math.rad(math.cos((X + math.rad(30)) * 6)) + math.rad(0.5); --This is what the roll of the camera will be when you're crawling
		}
	end;
		
	Idling = { --This table holds the Idling animations
		
		unAimed = function(X) --This is the animation when the gun is not aimed
			return {
				Pos = Vector3.new(
					math.sin(X / 2) / 70, --Side to Side motion
					math.sin(X * 5 / 4) / 70, --Up and Down motion
					math.sin(X * 3 / 4) / 70 --Forward and backward motion
				);
				Rot = Vector3.new(
					0, --Pitch rotation
					0, --Yaw rotation
					0 --Roll rotation
				);
			}
		end;
		
		Aimed = function(X) --This is the animation when the gun is aimed
			return {
				Pos = Vector3.new(
					math.sin(X * 3 / 8) / 140,
					math.sin(X * 15 / 16) / 140,
					0
				);
				Rot = Vector3.new(
					0,
					0,
					0
				);
			}
		end;
		
	};
	
	Walking = { --This table holds the Walking animations
		
		unAimed = function(X) --This is the animation when the gun is not aimed
			return {
				Pos = Vector3.new(
					4 * math.sin(X * 4.5) / 50,
					1.5 * math.sin(X * 9) / 50,
					0
				);
				Rot = Vector3.new(
					0,
					0,
					math.rad(math.sin(X * 4.5)) * 2
				);
			}
		end;
		
		Aimed = function(X) --This is the animation when the gun is aimed
			return {
				Pos = Vector3.new(
					2 * math.sin(X * 3) / 150,
					0.75 * math.sin(X * 6) / 150,
					0
				);
				Rot = Vector3.new(
					0,
					0,
					math.rad(math.sin(X * 3)) / 3
				);
			}
		end;
		
	};
	
	Running = function(X) --This is the animation when the player is running
		return {
			Pos = Vector3.new(
				4 * math.sin(X * 4.5 * 1.5) / 30,
				1.5 * math.sin(X * 9 * 1.5) / 40 + 0.2,
				0
			);
			Rot = Vector3.new(
				0,
				-math.rad(math.sin(X * 4.5 * 1.5)) * 5 + math.rad(3),
				math.rad(math.sin(X * 4.5 * 1.5)) * 5
			);
		}
	end;
	
}

return Animations]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBX39285FA6D4CB443BAA158E9999BE7402">
			<Properties>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">PLUGINS</string>
				<string name="ScriptGuid"></string>
				<ProtectedString name="Source"><![CDATA[--[[

	Plugins for this gun kit are basically functions that will run at specific times, i.e. When a key is pressed, when the gun is
	fired, when the gun is aimed, etc.
	
	HOW TO USE IT:
	
		KEYDOWN PLUGIN:
		
			Let's say you wanted to toggle a laser whenever you press the "v" key:
			
			You would create a table like the example below
			The first element would be "Key = INSERT_KEY_HERE"
			The second element would be "Description = INSERT_DESCRIPTION_HERE"
			The third element would be "Plugin = INSERT_FUNCTION_HERE"
			
			So whenever you press the "v" key, the plugin function will run
			
			Pretty useful if you want to add extra code to the script without actually having to modify the script
		
			NOTE: Only the keydown plugin requires this table. Every other plugin just needs a function
			
		EVERY OTHER PLUGIN:
		
			Let's say you wanted to make a shell eject whenever the gun was fired:
			
			You would add function called "Plugin = INSERT_FUNCTION_HERE"
			
			That's it; If you want other stuff to happen when the gun is fired, you would either put it all into 1 function, or
			you would add more Plugins to the "Firing" table. Like so:
			
			Firing = {
				Plugin = function()
					--Code
				end;
				Plugin = function()
					--Code
				end;
				Plugin = function()
					--Code
				end;
			};
	
	That's really it, you just need to know some basic scripting to use it. If you have more questions, pm me.
	
	NOTE: The plugins run seperate from the code in the Gun_Main. For example, if you have a plugin that ejects a shell 1 second
	after the gun is fired, the gun's firing speed won't be affected in any way.
	
--]]

local Gun = script.Parent

local Plugins = {
	
	KeyDown = {
		{ --This is a plugin for a toggleable laser
			Key = "v"; --This is the key you press to activate the plugin
			Description = "Toggle Laser"; --This is what the description of the key will be in the controls
			Plugin = function() --This is the actual plugin function
				local Laser = Gun:WaitForChild("Laser") --These few lines wait for the necessary bricks/models
				local Handle = Gun:WaitForChild("Handle")
				local ignoreCode = Gun.clientMain:WaitForChild("ignoreCode")
				local ignoreModel = game.Workspace:WaitForChild("ignoreModel_"..ignoreCode.Value)
				
				local PlyrName = game.Players:GetPlayerFromCharacter(Gun.Parent).Name
				local playerFolder = ignoreModel:WaitForChild("gunIgnore_"..PlyrName)
				
				local RS = game:GetService("RunService")
				
				local function createLaserDot() --This function creates the red laser dot
					local laserDot = Instance.new("Part")
					laserDot.Transparency = 1
					laserDot.Name = "laserDot"
					laserDot.Anchored = true
					laserDot.CanCollide = false
					laserDot.FormFactor = Enum.FormFactor.Custom
					laserDot.Size = Vector3.new(0.25, 0.25, 1)
					
					local laserGui = Instance.new("SurfaceGui")
					laserGui.CanvasSize = Vector2.new(100, 100)
					laserGui.Parent = laserDot
					
					local laserImage = Instance.new("ImageLabel")
					laserImage.BackgroundTransparency = 1
					laserImage.Size = UDim2.new(1, 0, 1, 0)
					laserImage.Image = "http://www.roblox.com/asset/?id=131394739"
					laserImage.Parent = laserGui
					
					--[[local laserLight = Instance.new("SurfaceLight")
					laserLight.Angle = 180
					laserLight.Brightness = math.huge
					laserLight.Color = Color3.new(1, 0, 0)
					laserLight.Face = Enum.NormalId.Back
					laserLight.Range = 5
					laserLight.Shadows = true
					laserLight.Parent = laserDot]]
					
					return laserDot
				end
				
				local function getHitSurfaceCFrame(Pos, Obj) --This function returns the proper cframe based on the face that the position is on
					local surfaceCF = {
						{"Back", Obj.CFrame * CFrame.new(0, 0, Obj.Size.z)};
						{"Bottom", Obj.CFrame * CFrame.new(0, -Obj.Size.y, 0)};
						{"Front", Obj.CFrame * CFrame.new(0, 0, -Obj.Size.z)};
						{"Left", Obj.CFrame * CFrame.new(-Obj.Size.x, 0, 0)};
						{"Right", Obj.CFrame * CFrame.new(Obj.Size.x, 0, 0)};
						{"Top", Obj.CFrame * CFrame.new(0, Obj.Size.y, 0)}
					}
					local closestDist = math.huge
					local closestSurface = nil
					for _,v in pairs(surfaceCF) do
						local surfaceDist = (Pos - v[2].p).magnitude
						if surfaceDist < closestDist then
							closestDist = surfaceDist
							closestSurface = v
						end
					end
					
					local surfaceDir = CFrame.new(Obj.CFrame.p, closestSurface[2].p)
					local surfaceDist = surfaceDir.lookVector * ((Obj.CFrame.p - closestSurface[2].p).magnitude / 2 - 0.25)
					local surfaceOffset = Pos - closestSurface[2].p + surfaceDist
					local surfaceCFrame = surfaceDir + surfaceDist + surfaceOffset
					
					return surfaceCFrame
				end
				
				local laserDot = createLaserDot() --The code is cleaner when the laser creating code is in a function
				
				Laser.Transparency = (Laser.Transparency == 1 and 0 or 1) --Toggles the laser on or off
				
				while math.floor(Laser.Transparency) == 0 do --This loop will keep running as long as the laser is visible
					if (not game.Players:GetPlayerFromCharacter(Gun.Parent)) then break end --This checks if the gun is a child of the character
					
					local newRay = Ray.new(Laser.Position, Handle.CFrame.lookVector * 999)
					local H, P = game.Workspace:FindPartOnRay(newRay, ignoreModel)
					
					local Distance = (P - Laser.Position).magnitude
					Laser.Mesh.Offset = Vector3.new(0, Distance / 2, 0)
					Laser.Mesh.Scale = Vector3.new(0.075, Distance / 0.2, 0.075)
					
					if H then
						laserDot.CFrame = getHitSurfaceCFrame(P, H) --If the laser hits a part then position the dot on the part
						laserDot.Parent = playerFolder
					else
						laserDot.Parent = nil --If the laser doesn't hit a part then temporarily remove the laser dor
					end
					
					RS.RenderStepped:wait()
				end
				
				laserDot:Destroy() --These lines reset the laser if the laser is transparent or the gun was deselected
				Laser.Transparency = 1
				Laser.Mesh.Offset = Vector3.new()
				Laser.Mesh.Scale = Vector3.new(0.075, 0, 0.075)
			end;
		};
		
		{ --This is a plugin for a toggleable flashlight
			Key = "z";
			Description = "Toggle Flashlight";
			Plugin = function()
				local Flashlight = Gun:WaitForChild("Flashlight")
				if Flashlight then
					for _, Light in pairs(Flashlight:GetChildren()) do
						if Light.Name == "Light" then
							Light.Enabled = (not Light.Enabled)
						end
					end
				end
			end
		};
	};
	
	KeyUp = {
		
	};
	
	Firing = {
		Plugin = function()
			--Put code here
		end;
	};
	
	Aimed = {
		Plugin = function()
			--Put code here
		end;
	};
	
	UnAimed = {
		Plugin = function()
			--Put code here
		end;
	};
	
	OnEquipped = {
		Plugin = function()
			--Put code here
		end
	};
	
	OnUnEquipped = {
		Plugin = function()
			--Put code here
		end
	};
	
}

return Plugins]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBX6028918FC0EB4D188AF67F5260AA33D7">
			<Properties>
				<CoordinateFrame name="CFrame">
					<X>-7.22836542</X>
					<Y>1.23303747</Y>
					<Z>-15.0153999</Z>
					<R00>-0.589185655</R00>
					<R01>0.0127324527</R01>
					<R02>0.807897449</R02>
					<R10>-4.65661287e-010</R10>
					<R11>0.999875963</R11>
					<R12>-0.0157580301</R12>
					<R20>-0.807997763</R20>
					<R21>-0.00928440504</R21>
					<R22>-0.589112461</R22>
				</CoordinateFrame>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<float name="FieldOfView">40</float>
				<CoordinateFrame name="Focus">
					<X>-8.84416103</X>
					<Y>1.26455355</Y>
					<Z>-13.8371744</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="HeadLocked">true</bool>
				<float name="HeadScale">1</float>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>