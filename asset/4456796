<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX39B59A66651242A7A17FA6316612DF35">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>0</Z>
				<R00>1</R00>
				<R01>0</R01>
				<R02>0</R02>
				<R10>0</R10>
				<R11>1</R11>
				<R12>0</R12>
				<R20>0</R20>
				<R21>0</R21>
				<R22>1</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">P90</string>
			<bool name="RequiresHandle">true</bool>
			<Content name="TextureId"><null></null></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBXB960D465591D4858BC00AE88230663F9">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">1003</int>
				<CoordinateFrame name="CFrame">
					<X>131.816116</X>
					<Y>0.196264029</Y>
					<Z>-185.791962</Z>
					<R00>-0.000600141415</R00>
					<R01>-4.53413492e-007</R01>
					<R02>0.999999881</R02>
					<R10>2.31070703e-006</R10>
					<R11>1</R11>
					<R12>4.54800357e-007</R12>
					<R20>-0.999999821</R20>
					<R21>2.31097965e-006</R21>
					<R22>-0.000600141415</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">272</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">1</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.200000003</X>
					<Y>0.200000003</Y>
					<Z>0.200000003</Z>
				</Vector3>
			</Properties>
			<Item class="BlockMesh" referent="RBXD32CD963CEBF45C2A1BDE9B279B9EBE0">
				<Properties>
					<float name="Bevel">0</float>
					<float name="Bevel Roundness">0</float>
					<float name="Bulge">0</float>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.28125</X>
						<Y>0.140625</Y>
						<Z>0.28125</Z>
					</Vector3>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Sound" referent="RBX11FF1F5FADCF451E846C94D77A8CCC0E">
				<Properties>
					<bool name="Looped">false</bool>
					<string name="Name">FireSound</string>
					<float name="Pitch">1</float>
					<bool name="PlayOnRemove">false</bool>
					<bool name="Playing">false</bool>
					<Content name="SoundId"><url>rbxassetid://342241871</url></Content>
					<double name="TimePosition">0</double>
					<float name="Volume">0.5</float>
					<float name="xmlRead_MaxDistance_3">10000</float>
					<float name="xmlRead_MinDistance_3">10</float>
				</Properties>
			</Item>
		</Item>
		<Item class="LocalScript" referent="RBX949BE7DFC2C84FC0B1B891D9FA5578A5">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">clientMain</string>
				<string name="ScriptGuid">{F25E3785-B4E5-4C59-BF5D-3BDB38A85ED2}</string>
				<ProtectedString name="Source"><![CDATA[--[[
Kit By TurboFusion
Remake By MuYhEt & Xander521
--]]
--------------------------------------------------------------------------------------
--------------------[ CHARACTER LOADING ]---------------------------------------------
--------------------------------------------------------------------------------------

repeat wait() until game.Players.LocalPlayer.Character
repeat wait() until game.Players.LocalPlayer.Character:IsDescendantOf(game.Workspace)
wait(1 / 20)

--------------------------------------------------------------------------------------
--------------------[ IGNORE MODEL ]--------------------------------------------------
--------------------------------------------------------------------------------------

local ignoreCode = script:WaitForChild("ignoreCode")

repeat wait() until ignoreCode.Value ~= 0

local ignoreModel = game.Workspace:WaitForChild("ignoreModel_"..ignoreCode.Value)

local grenadeFolder = ignoreModel:WaitForChild("grenadeFolder")

--------------------------------------------------------------------------------------
--------------------[ CONSTANTS ]-----------------------------------------------------
--------------------------------------------------------------------------------------

local Gun = script.Parent
local serverMain = Gun:WaitForChild("serverMain")
local Handle = Gun:WaitForChild("Handle")
local AimPart = Gun:WaitForChild("AimPart")
local Main = Gun:WaitForChild("Main")

local Ammo = Gun:WaitForChild("Ammo")
local ClipSize = Gun:WaitForChild("ClipSize")
local StoredAmmo = Gun:WaitForChild("StoredAmmo")

local createTweenIndicator = serverMain:WaitForChild("createTweenIndicator")
local deleteTweenIndicator = serverMain:WaitForChild("deleteTweenIndicator")
local getWeldCF = serverMain:WaitForChild("getWeldCF")
local gunSetup = serverMain:WaitForChild("gunSetup")
local lerpCF = serverMain:WaitForChild("lerpCF")
local createBlood = serverMain:WaitForChild("createBlood")
local createBulletImpact = serverMain:WaitForChild("createBulletImpact")
local createShockwave = serverMain:WaitForChild("createShockwave")
local createTrail = serverMain:WaitForChild("createTrail")

local Particle = require(script:WaitForChild("Particle"))
local Spring = require(script:WaitForChild("Spring"))
local Anims = require(Gun:WaitForChild("ANIMATIONS"))
local Plugins = require(Gun:WaitForChild("PLUGINS"))
local S = require(Gun:WaitForChild("SETTINGS"))

local Player = game.Players.LocalPlayer
local Char = Player.Character
local Humanoid = Char:WaitForChild("Humanoid")
local Torso = Char:WaitForChild("Torso")
local Head = Char:WaitForChild("Head")
local HRP = Char:WaitForChild("HumanoidRootPart")
local Root = HRP:WaitForChild("RootJoint")

local Neck = Torso:WaitForChild("Neck")

local LArm = Char:WaitForChild("Left Arm")
local RArm = Char:WaitForChild("Right Arm")
local LLeg = Char:WaitForChild("Left Leg")
local RLeg = Char:WaitForChild("Right Leg")

local M2 = Player:GetMouse()

local mainGUI = script:WaitForChild("mainGUI")
	
local crossHair = mainGUI:WaitForChild("crossHair")
local HUD = mainGUI:WaitForChild("HUD")
local Scope = mainGUI:WaitForChild("Scope")
local fireSelect = mainGUI:WaitForChild("fireSelect")
local hitMarker = mainGUI:WaitForChild("hitMarker")
local Sens = mainGUI:WaitForChild("Sens")

local crossA = crossHair:WaitForChild("A"):WaitForChild("Line")
local crossB = crossHair:WaitForChild("B"):WaitForChild("Line")
local crossC = crossHair:WaitForChild("C"):WaitForChild("Line")
local crossD = crossHair:WaitForChild("D"):WaitForChild("Line")

local Controls = HUD:WaitForChild("Controls")

local gunNameTitle = HUD:WaitForChild("gunName"):WaitForChild("Title")

local scopeMain = Scope:WaitForChild("Main")
local scopeSteady = Scope:WaitForChild("Steady")

local fireModes = fireSelect:WaitForChild("Modes")

local modeGUI = HUD:WaitForChild("Mode"):WaitForChild("Main")
local clipAmmoGUI = HUD:WaitForChild("Ammo"):WaitForChild("Clip")
local storedAmmoGUI = HUD:WaitForChild("Ammo"):WaitForChild("Stored")

local DS = game:GetService("Debris")
local CP = game:GetService("ContentProvider")
local RS = game:GetService("RunService")
local UIS = game:GetService("UserInputService")

local Cam = game.Workspace.CurrentCamera

local ABS, HUGE, FLOOR, CEIL = math.abs, math.huge, math.floor, math.ceil
local RAD, SIN, COS, TAN = math.rad, math.sin, math.cos, math.tan
local VEC2, V3 = Vector2.new, Vector3.new
local CF, CFANG = CFrame.new, CFrame.Angles
local INSERT = table.insert

local maxStamina = S.sprintTime * 60
local maxSteadyTime = S.scopeSettings.steadyTime * 60

local LethalIcons = {
	"http://www.roblox.com/asset/?id=194849880";
	"http://www.roblox.com/asset/?id=195727791";
	"http://www.roblox.com/asset/?id=195728137";
	"http://www.roblox.com/asset/?id=218151830";
}

local TacticalIcons = {
	"http://www.roblox.com/asset/?id=195728473";
	"http://www.roblox.com/asset/?id=195728693";
}

local ASCII = {
	071; 117; 110; 032;
	075; 105; 116; 032;
	115; 099; 114; 105;
	112; 116; 101; 100;
	032; 098; 121; 032;
	084; 117; 114; 098;
	111; 070; 117; 115;
	105; 111; 110; 000;
}

local Ignore = {
	Char;
	ignoreModel;
}

local Shoulders = {
	Right = Torso:WaitForChild("Right Shoulder");
	Left = Torso:WaitForChild("Left Shoulder")
}

local armC0 = {
	CF(-1.5, 0, 0) * CFANG(RAD(90), 0, 0);
	CF(1.5, 0, 0) * CFANG(RAD(90), 0, 0);
}

local legC0 = {
	Stand = {
		CF(-0.5, -2, 0);
		CF(0.5, -2, 0);
	};
	Crouch = {
		CF(-0.5, -1.5, 0.5) * CFANG(-RAD(90), 0, 0);
		CF(0.5, -1, -0.75);
	};
	Prone = {
		CF(-0.5, -2, 0);
		CF(0.5, -2, 0);
	};
}

local Sine = function(X)
	return SIN(RAD(X))
end

local Linear = function(X)
	return (X / 90)
end

--------------------------------------------------------------------------------------
--------------------[ VARIABLES ]-----------------------------------------------------
--------------------------------------------------------------------------------------

local Selected = false

local playerMass = 0

local Forward = false
local Backward = false

local Idling = false
local Walking = false
local Running = false

local crawlCamRot = 0
local crawlAlpha = 0
local idleAlpha = 1
local walkAlpha = 0
local isCrawling = false
local isIdling = false
local isWalking = false
local isRunning = false

local Aimed = false
local Aiming = false
local aimAlpha = 0
local headOffset = VEC2(COS(RAD(90) - S.aimSettings.headTilt) * 0.5, 1 + SIN(RAD(90) - S.aimSettings.headTilt) * 0.5)

local Reloading = false
local breakReload = false
local magVisible = true
local newMag = false

local Knifing = false

local MB1Down = false
local Firing = false
local canFire = true
local fireFunction = nil
local firstShot = false
local shotCount = 0
local lastSideRecoil = {0, 0}
local recoilAnim = {
	Pos = V3();
	Rot = V3();
	Code = nil;
}

local numModes = 0
local rawFireMode = 1
local canSelectFire = true
local guiAngOffset = 0
local Modes = {}

local onGround = true
local startFallHeight = 0
local jumpAnim = {
	Pos = 0;
	Rot = 0;
	Code = 0;
}

local runReady = true
local runKeyPressed = false
local chargingStamina = false

local AimingIn = false
local AimingOut = false

local Stamina = S.sprintTime * 60
local currentSteadyTime = S.scopeSettings.steadyTime * 60

local camSteady = false
local takingBreath = false
local steadyKeyPressed = false

local Grip = nil
local aimedGripCF = nil

local spreadZoom = "unAimed"
local spreadStance = "Stand"
local spreadMotion = "Idling"
local baseSpread = S.spreadSettings.unAimed.Stand.Idling
local currentSpread = 0
local loweringSpread = false

local mouseSensitivity = S.sensitivitySettings.Default
local aimSensitivity = S.sensitivitySettings.Aim
local lastSensUpdate = 0

local ammoInClip = 0

local Stance = 0
local stanceSway = 1
local camSway = 1

local camAng = VEC2()

local armTilt = 0
local moveAng = 0
local animCode = 0

local desiredXOffset = 0
local desiredYOffset = 0
local currentXOffset = 0
local currentYOffset = 0
local aimHeadOffset = 0
local recoilAnimMultiplier = 1
local jumpAnimMultiplier = 1
local translationDivisor = 7
local rotationMultiplier = S.momentumSettings.Amplitude.unAimed
local armTiltMultiplier = 1

local equipAnimPlaying = false

local crossOffset = 0

local camOffsets = {
	guiScope = {
		Rot = V3();
	};
	Reload = {
		Rot = V3();
		Code = nil;
	};
	Recoil = {
		Rot = V3();
		Code = nil;
	};
}

local Anim = {
	Pos = V3();
	Rot = V3();
	Ang = 0;
	Code = 0;
}

local lastBeat = 0

local gunParts = {}

local Connections = {}

local Keys = {}

--------------------------------------------------------------------------------------
--------------------[ PRE-LOADING ]---------------------------------------------------
--------------------------------------------------------------------------------------

CP:Preload(S.explosionSettings.soundId)
CP:Preload(S.holeSettings.Texture)
CP:Preload(S.sparkSettings.Texture)
CP:Preload(S.smokeSettings.Texture)
CP:Preload(S.bloodSettings.Texture)
CP:Preload("http://www.roblox.com/asset/?id=126877530") --The dark green arrow in the select fire gui
CP:Preload("http://www.roblox.com/asset/?id=55754953") --The circle in the select fire gui

--------------------------------------------------------------------------------------
--------------------[ GUN SETUP ]-----------------------------------------------------
--------------------------------------------------------------------------------------

serverMain:WaitForChild("Plyr").Value = Player

local gunMomentum = Spring.new(V3())
gunMomentum.s = S.momentumSettings.Speed
gunMomentum.d = S.momentumSettings.Damper

local gunRecoilSpring = Spring.new(V3())
gunRecoilSpring.s = S.recoilSettings.springSpeed
gunRecoilSpring.d = S.recoilSettings.springDamper

local camRecoilSpring = Spring.new(V3())
camRecoilSpring.s = 35
camRecoilSpring.d = 0.5

local crossSpring = Spring.new(V3(crossOffset + (baseSpread + currentSpread) * 50, 0, 0))
crossSpring.s = 20
crossSpring.d = 0.75

--[[local function getModelMass(P)
	for _, v in pairs(P:GetChildren()) do
		if v:IsA("BasePart") then
			playerMass = playerMass + v:GetMass()
		end
		getModelMass(v)
	end
end
getModelMass(Char)

Char.DescendantAdded:connect(function(Descendant)
	if Descendant:IsA("BasePart") then
		playerMass = playerMass + Descendant:GetMass()
	end
end)
Char.DescendantRemoving:connect(function(Descendant)
	if Descendant:IsA("BasePart") then
		playerMass = playerMass - Descendant:GetMass()
	end
end)]]

--------------------------------------------------------------------------------------
--------------------[ WELD CFRAMES ]--------------------------------------------------
--------------------------------------------------------------------------------------

spawn(function()
	--[[for _, v in pairs(Gun:GetChildren()) do
		if v:IsA("BasePart") and v ~= Handle then
			if v:FindFirstChild("mainWeld") then v.mainWeld:Destroy() end
			if (not v:FindFirstChild("weldCF")) then
				local weldCF = Instance.new("CFrameValue")
				weldCF.Name = "weldCF"
				weldCF.Value = Handle.CFrame:toObjectSpace(v.CFrame)
				weldCF.Parent = v
				INSERT(gunParts, {Obj = v, Weld = nil})
			end
			if string.sub(v.Name, 1, 3) == "Mag" then
				if (not v:FindFirstChild("magTrans")) then
					local magTrans = Instance.new("NumberValue")
					magTrans.Name = "magTrans"
					magTrans.Value = v.Transparency
					magTrans.Parent = v
				end
			end
			v.Anchored = false
		end
	end
	Handle.Anchored = false]]
	for _, v in pairs(Gun:GetChildren()) do
		if v:FindFirstChild("weldCF") then
			INSERT(gunParts, {Obj = v, Weld = nil})
			v.Anchored = false
		end
	end
end)

--------------------------------------------------------------------------------------
--------------------[ MAIN PROGRAM ]--------------------------------------------------
--------------------------------------------------------------------------------------

--------------------[ ARM CREATION FUNCTION ]-----------------------------------------

function createArms()
	local Arms = {}
	for i = 0, 1 do
		local armModel = Instance.new("Model")
		armModel.Name = "armModel"
		
		local Arm = Instance.new("Part")
		Arm.BrickColor = (S.fakeArmSettings.realBodyColor and (i == 0 and LArm.BrickColor or RArm.BrickColor) or S.fakeArmSettings.Color)
		Arm.Transparency = S.fakeArmSettings.Transparency
		Arm.Name = "Arm"
		Arm.CanCollide = false
		Arm.Size = V3(0.598, 2, 0.598)
		Arm.Parent = armModel
		local armMesh = Instance.new("SpecialMesh")
		armMesh.MeshId = "rbxasset://fonts//leftarm.mesh"
		armMesh.MeshType = Enum.MeshType.FileMesh
		armMesh.Scale = V3(0.598, 1, 0.598)
		armMesh.Parent = Arm
		
		local Glove1 = Instance.new("Part")
		Glove1.BrickColor = BrickColor.new("Black")
		Glove1.Name = "Glove1"
		Glove1.CanCollide = false
		Glove1.Size = V3(0.598, 2, 0.598)
		Glove1.Parent = armModel
		local glove1Mesh = Instance.new("SpecialMesh")
		glove1Mesh.MeshId = "rbxasset://fonts//leftarm.mesh"
		glove1Mesh.Offset = V3(0, -0.5, 0)
		glove1Mesh.Scale = V3(0.658, 0.205, 0.658)
		glove1Mesh.Parent = Glove1
		local glove1Weld = Instance.new("Weld")
		glove1Weld.Part0 = Arm
		glove1Weld.Part1 = Glove1
		glove1Weld.Parent = Arm
		
		local Glove2 = Instance.new("Part")
		Glove2.BrickColor = BrickColor.new("Black")
		Glove2.Name = "Glove2"
		Glove2.CanCollide = false
		Glove2.Size = V3(0.598, 2, 0.598)
		Glove2.Parent = armModel
		local glove2Mesh = Instance.new("SpecialMesh")
		glove2Mesh.MeshId = "rbxasset://fonts//leftarm.mesh"
		glove2Mesh.Offset = V3(0, -0.435, 0)
		glove2Mesh.Scale = V3(0.69, 0.105, 0.69)
		glove2Mesh.Parent = Glove2
		local glove2Weld = Instance.new("Weld")
		glove2Weld.Part0 = Arm
		glove2Weld.Part1 = Glove2
		glove2Weld.Parent = Arm
		
		local Glove3 = Instance.new("Part")
		Glove3.BrickColor = BrickColor.new("Black")
		Glove3.Name = "Glove3"
		Glove3.CanCollide = false
		Glove3.Size = V3(0.598, 2, 0.598)
		Glove3.Parent = armModel
		local glove3Mesh = Instance.new("SpecialMesh")
		glove3Mesh.MeshId = "rbxasset://fonts//leftarm.mesh"
		glove3Mesh.Offset = V3(0.18 * ((i * 2) - 1), -0.7, 0)
		glove3Mesh.Scale = V3(0.299, 0.305, 0.657)
		glove3Mesh.Parent = Glove3
		local glove3Weld = Instance.new("Weld")
		glove3Weld.Part0 = Arm
		glove3Weld.Part1 = Glove3
		glove3Weld.Parent = Arm
		
		local Sleeve1 = Instance.new("Part")
		Sleeve1.BrickColor = BrickColor.new("Sand green")
		Sleeve1.Name = "Sleeve1"
		Sleeve1.CanCollide = false
		Sleeve1.Size = V3(0.598, 2, 0.598)
		Sleeve1.Parent = armModel
		local sleeve1Mesh = Instance.new("SpecialMesh")
		sleeve1Mesh.MeshId = "rbxasset://fonts//leftarm.mesh"
		sleeve1Mesh.Offset = V3(0, 0.75, 0)
		sleeve1Mesh.Scale = V3(0.656, 0.3, 0.656)
		sleeve1Mesh.Parent = Sleeve1
		local sleeve1Weld = Instance.new("Weld")
		sleeve1Weld.Part0 = Arm
		sleeve1Weld.Part1 = Sleeve1
		sleeve1Weld.Parent = Arm
		
		local Sleeve2 = Instance.new("Part")
		Sleeve2.BrickColor = BrickColor.new("Sand green")
		Sleeve2.Name = "Sleeve2"
		Sleeve2.CanCollide = false
		Sleeve2.Size = V3(0.598, 2, 0.598)
		Sleeve2.Parent = armModel
		local sleeve2Mesh = Instance.new("SpecialMesh")
		sleeve2Mesh.MeshId = "rbxasset://fonts//leftarm.mesh"
		sleeve2Mesh.Offset = V3(0, 0.55, 0)
		sleeve2Mesh.Scale = V3(0.75, 0.1, 0.75)
		sleeve2Mesh.Parent = Sleeve2
		local sleeve2Weld = Instance.new("Weld")
		sleeve2Weld.Part0 = Arm
		sleeve2Weld.Part1 = Sleeve2
		sleeve2Weld.Parent = Arm
		
		table.insert(Arms, {Model = armModel, armPart = Arm})
	end
	return Arms
end

--------------------[ MATH FUNCTIONS ]------------------------------------------------

function Map(Val, fromLow, fromHigh, toLow, toHigh)
	return (Val - fromLow) * (toHigh - toLow) / (fromHigh - fromLow) + toLow
end

function numLerp(A, B, Alpha)
	return A + (B - A) * Alpha
end

function RAND(Min, Max, Accuracy)
	return numLerp(Min, Max, math.random())
	--[[local Inverse = 1 / (Accuracy or 1)
	return (math.random(Min * Inverse, Max * Inverse) / Inverse)]]
end

function Round(Num, toNearest)
	return math.floor(Num / toNearest + 0.5) * toNearest
end

function getNearestPoint(A, B, Origin)
	local A2 = (A - Origin).magnitude
	local B2 = (B - Origin).magnitude
	return (math.min(A2, B2) == A2 and A or B)
end

--------------------[ TWEEN FUNCTIONS ]-----------------------------------------------

function tweenJoint(Joint, newC0, newC1, Alpha, Duration)
	spawn(function()
		local newCode = math.random(-1e9, 1e9) --This creates a random code between -1000000000 and 1000000000
		local tweenIndicator = nil
		if (not Joint:findFirstChild("tweenCode")) then --If the joint isn't being tweened, then
			tweenIndicator = Instance.new("IntValue")
			tweenIndicator.Name = "tweenCode"
			tweenIndicator.Value = newCode
			tweenIndicator.Parent = Joint
		else
			tweenIndicator = Joint.tweenCode
			tweenIndicator.Value = newCode --If the joint is already being tweened, this will change the code, and the tween loop will stop
		end
		--local tweenIndicator = createTweenIndicator:InvokeServer(Joint, newCode)
		if Duration <= 0 then --If the duration is less than or equal to 0 then there's no need for a tweening loop
			if newC0 then Joint.C0 = newC0 end
			if newC1 then Joint.C1 = newC1 end
		else
			local startC0 = Joint.C0
			local startC1 = Joint.C1
			local t0 = tick()
			while true do
				RS.RenderStepped:wait() --This makes the for loop step every 1/60th of a second
				local X = math.min((tick() - t0) / Duration, 1) * 90
				if tweenIndicator.Value ~= newCode then break end --This makes sure that another tween wasn't called on the same joint
				if (not Selected) then break end --This stops the tween if the tool is deselected
				if newC0 then Joint.C0 = startC0:lerp(newC0, Alpha(X)) end
				if newC1 then Joint.C1 = startC1:lerp(newC1, Alpha(X)) end
				--if newC0 then lerpCF:InvokeServer(Joint, "C0", startC0, newC0, Alpha(X)) end
				--if newC1 then lerpCF:InvokeServer(Joint, "C1", startC1, newC1, Alpha(X)) end
				if X == 90 then break end
			end
		end
		if tweenIndicator.Value == newCode then --If this tween functions was the last one called on a joint then it will remove the code
			tweenIndicator:Destroy()
		end
		--deleteTweenIndicator:InvokeServer(tweenIndicator, newCode)
	end)
end

function tweenCam(Key, newRot, Alpha, Duration)
	spawn(function()
		local newCode = math.random(-1e9, 1e9)
		camOffsets[Key].Code = newCode
		
		local Increment = 1.5 / Duration
		local prevRot = camOffsets[Key].Rot
		local X = 0
		while true do
			RS.RenderStepped:wait()
			local newX = X + Increment
			X = (newX > 90 and 90 or newX)
			if camOffsets[Key].Code ~= newCode then break end
			if (not Selected) then break end
			
			camOffsets[Key].Rot = prevRot:lerp(newRot, Alpha(X))
			
			if X == 90 then break end
		end
		
		if camOffsets[Key].Code == newCode then
			camOffsets[Key].Code = nil
		end
	end)
end

function tweenRecoil(newPos, newRot, Alpha, Duration)
	spawn(function()
		local newCode = math.random(-1e9, 1e9)
		recoilAnim.Code = newCode
		
		local Increment = 1.5 / Duration
		local prevPos = recoilAnim.Pos
		local prevRot = recoilAnim.Rot
		local X = 0
		while true do
			RS.RenderStepped:wait()
			local newX = X + Increment
			X = (newX > 90 and 90 or newX)
			if recoilAnim.Code ~= newCode then break end
			if (not Selected) then break end
			
			recoilAnim.Pos = prevPos:lerp(newPos, Alpha(X))
			recoilAnim.Rot = prevRot:lerp(newRot, Alpha(X))
			
			if X == 90 then break end
		end
		
		if recoilAnim.Code == newCode then
			recoilAnim.Code = nil
		end
	end)
end

--------------------[ GUI UPDATE FUNCTIONS ]------------------------------------------

local function updateClipAmmo()
	clipAmmoGUI.Text = Ammo.Value
	clipAmmoGUI.TextColor3 = (Ammo.Value <= (ClipSize.Value / 3) and Color3.new(1, 0, 0) or Color3.new(1, 1, 1))
end

local function updateStoredAmmo()
	storedAmmoGUI.Text = StoredAmmo.Value
	storedAmmoGUI.TextColor3 = (StoredAmmo.Value <= (ClipSize.Value * 2) and Color3.new(1, 0, 0) or Color3.new(1, 1, 1))
end

local function updateHealth()
	HUD.Health.Num.Text = CEIL(Humanoid.Health).."%"
	HUD.Health.Num.TextColor3 = (
		(Humanoid.Health > 200 / 3) and Color3.new(1, 1, 1) or
		(Humanoid.Health <= 200 / 3 and Humanoid.Health > 100 / 3) and Color3.new(1, 1, 0) or
		(Humanoid.Health <= 100 / 3) and Color3.new(1, 0, 0)
	)
end

local function updateModeLabels(prevState, newState, X)
	for Num, Mode in pairs(fireModes:GetChildren()) do
		local guiAngOffset2 = guiAngOffset + 90
		local Ang = numLerp(
			(guiAngOffset2 * prevState) - (guiAngOffset2 * Num) - guiAngOffset2,
			(guiAngOffset2 * newState) - (guiAngOffset2 * Num) - guiAngOffset2,
			Sine(X)
		) + guiAngOffset
		local XPos = COS(RAD(Ang))
		local YPos = SIN(RAD(Ang))
		Mode.Position = UDim2.new(0.5, XPos * 100, 0.5, YPos * 100)
		
		local R = COS(math.atan2(Mode.Position.Y.Offset, Mode.Position.X.Offset) + RAD(90))
		Mode.Label.TextTransparency = 1 - ((R / 4) + 0.75)
		
		local Scale = (R * 10) + 50
		Mode.Label.Position = UDim2.new(0, -Scale / 2, 0, 0)
		Mode.Label.Size = UDim2.new(0, Scale, 0, Scale / 2)
	end
end

--------------------[ GUI SETUP FUNCTION ]--------------------------------------------

function convertKey(Key)
	if Key == string.char(8) then
		return "BKSPCE" 
	elseif Key == string.char(9) then
		return "TAB"
	elseif Key == string.char(13) then
		return "ENTER"
	elseif Key == string.char(17) then
		return "UP"
	elseif Key == string.char(18) then
		return "DOWN"
	elseif Key == string.char(19) then
		return "RIGHT"
	elseif Key == string.char(20) then
		return "LEFT"
	elseif Key == string.char(22) then
		return "HOME"
	elseif Key == string.char(23) then
		return "END"
	elseif Key == string.char(27) then
		return "F2"
	elseif Key == string.char(29) then
		return "F4"
	elseif Key == string.char(30) then
		return "F5"
	elseif Key == string.char(32) or Key == " " then
		return "F7"
	elseif Key == string.char(33) or Key == "!" then
		return "F8"
	elseif Key == string.char(34) or Key == '"' then
		return "F9"
	elseif Key == string.char(35) or Key == "#" then
		return "F10"
	elseif Key == string.char(37) or Key == "%" then
		return "F12"
	elseif Key == string.char(47) or Key == "/" then
		return "R-SHIFT"
	elseif Key == string.char(48) or Key == "0" then
		return "L-SHIFT"
	elseif Key == string.char(49) or Key == "1" then
		return "R-CTRL"
	elseif Key == string.char(50) or Key == "2" then
		return "L-CTRL"
	elseif Key == string.char(51) or Key == "3" then
		return "R-ALT"
	elseif Key == string.char(52) or Key == "4" then
		return "L-ALT"
	else
		return string.upper(Key)
	end
end

function createControlFrame(Key, Desc, Num)
	local C = Instance.new("Frame")
	C.BackgroundTransparency = ((Num % 2) == 1 and 0.7 or 1)
	C.BorderSizePixel = 0
	C.Name = "C"..Num
	C.Position = UDim2.new(0, 0, 0, Num * 20)
	C.Size = UDim2.new(1, 0, 0, 20)
	C.ZIndex = 10
	
	local K = Instance.new("TextLabel")
	K.BackgroundTransparency = 1
	K.Name = "Key"
	K.Size = UDim2.new(0, 45, 1, 0)
	K.ZIndex = 10
	K.Font = Enum.Font.ArialBold
	K.FontSize = Enum.FontSize.Size14
	K.Text = Key
	K.TextColor3 = Color3.new(1, 1, 1)
	K.TextScaled = (string.len(Key) > 5)
	K.TextWrapped = (string.len(Key) > 5)
	K.Parent = C
	
	local D = Instance.new("TextLabel")
	D.BackgroundTransparency = 1
	D.Name = "Desc"
	D.Position = UDim2.new(0, 50, 0, 0)
	D.Size = UDim2.new(1, -50, 1, 0)
	D.ZIndex = 10
	D.Font = Enum.Font.SourceSansBold
	D.FontSize = Enum.FontSize.Size14
	D.Text = "- "..Desc
	D.TextColor3 = Color3.new(1, 1, 1)
	D.TextXAlignment = Enum.TextXAlignment.Left
	D.Parent = C
	
	C.Parent = Controls
end

function createModes()
	numModes = 0
	for i, v in pairs(S.selectFireSettings.Modes) do
		if v then
			numModes = numModes + 1
		end
	end
	
	local currentMode = 0
	for i, v in pairs(S.selectFireSettings.Modes) do
		if v then
			local Frame = Instance.new("Frame")
			Frame.BackgroundTransparency = 1
			Frame.Name = currentMode
			Frame.Position = UDim2.new()
			Frame.Size = UDim2.new()
			Frame.Parent = fireModes
			local modeLabel = Instance.new("TextLabel")
			modeLabel.BackgroundTransparency = 1
			modeLabel.Name = "Label"
			modeLabel.Position = UDim2.new(0, -20, 0, 0)
			modeLabel.Size = UDim2.new(0, 40, 0, 20)
			modeLabel.Font = Enum.Font.SourceSansBold
			modeLabel.FontSize = Enum.FontSize.Size18
			modeLabel.Text = string.upper(i)
			modeLabel.TextColor3 = Color3.new(1, 1, 1)
			modeLabel.TextScaled = true
			modeLabel.TextStrokeTransparency = 0
			modeLabel.TextTransparency = 0.5
			modeLabel.TextWrapped = true
			modeLabel.Parent = Frame
			table.insert(Modes, string.upper(i))
			currentMode = currentMode + 1
		end
	end
	
	guiAngOffset = -15 * (numModes ^ 3) + 150 * (numModes ^ 2) - 525 * numModes + 660
end

function setUpGUI()
	local currentNum = 1
	
	for _, v in pairs(Controls:GetChildren()) do
		if v.Name ~= "Title" then
			v:Destroy()
		end
	end
	
	for _, PTable in pairs(Plugins.KeyDown) do
		createControlFrame(convertKey(PTable.Key), PTable.Description, currentNum)
		currentNum = currentNum + 1
	end
	
	if S.canChangeStance then
		local Dive = (S.dolphinDive and " / Dive" or "")
		createControlFrame(convertKey(S.Keys.lowerStance), "Lower Stance"..Dive, currentNum)
		currentNum = currentNum + 1
		
		createControlFrame(convertKey(S.Keys.raiseStance), "Raise Stance", currentNum)
		currentNum = currentNum + 1
	end
	
	if S.selectFire then
		createControlFrame(convertKey(S.Keys.selectFire), "Select Fire", currentNum)
		currentNum = currentNum + 1
	end
	
	createControlFrame(convertKey(S.Keys.Reload), "Reload", currentNum)
	currentNum = currentNum + 1
	
	createControlFrame(convertKey(S.Keys.Sprint), "Sprint", currentNum)
	currentNum = currentNum + 1
	
	if S.canADS then
		local Hold = (S.aimSettings.holdToADS and "HOLD " or "")
		if S.Keys.ADS ~= "" then
			createControlFrame(Hold..convertKey(S.Keys.ADS).." OR R-MOUSE", "Aim Down Sights", currentNum)
		else
			createControlFrame(Hold.." R-MOUSE", "Aim Down Sights", currentNum)
		end
		currentNum = currentNum + 1
	end
	
	Controls.Size = UDim2.new(1, 0, 0, currentNum * 20)
	Controls.Position = UDim2.new(0, 0, 0, -(currentNum * 20) - 80)
	
	if S.guiScope then
		scopeSteady.Text = "Hold "..convertKey(S.Keys.scopeSteady).." to Steady"
	end
	
	if mainGUI:FindFirstChild("Co") then
		mainGUI.Co:Destroy()
	end
	local Co = Instance.new("TextLabel")
	Co.BackgroundTransparency = 1
	Co.Name = "Co"
	Co.Visible = true
	Co.Position = UDim2.new(0, 0, 0, 0)
	Co.Size = UDim2.new(1, 0, 0, 20)
	Co.Font = Enum.Font.ArialBold
	Co.FontSize = Enum.FontSize.Size14
	Co.Text = ("~ 125rednaX & tEhYuM yb ekameR // noisuFobruT yb tiK ~"):reverse()
	Co.TextColor3 = Color3.new(1, 1, 1)
	Co.TextStrokeColor3 = Color3.new(1, 1, 1)
	Co.TextStrokeTransparency = 0.9
	Co.TextTransparency = 0.9
	Co.TextXAlignment = Enum.TextXAlignment.Center
	Co.Parent = mainGUI
	
	gunNameTitle.Text = Gun.Name
	
	updateClipAmmo()
	updateStoredAmmo()
	
	fireModes:ClearAllChildren()
	createModes()
	updateModeLabels(numModes - 1, 0, 90)
	
	if S.selectFire then
		modeGUI.Text = Modes[((rawFireMode - 1) % numModes) + 1]
	else
		modeGUI.Text = (
			S.gunType.Semi and "SEMI" or
			S.gunType.Auto and "AUTO" or
			S.gunType.Burst and "BURST" or
			"SAFETY"
		)
	end
end

--------------------[ CAMERA RENDERING FUNCTIONS ]-----------------------------------

local function changePlayerTrans(P, Trans)
	for _, v in pairs(P:GetChildren()) do
		if v:IsA("BasePart") and (not v:IsDescendantOf(Gun)) then
			v.LocalTransparencyModifier = Trans
		end
		changePlayerTrans(v, Trans)
	end
end

local function getYawPitch(Cf)
	local LV = Cf.lookVector
	local Yaw = math.atan2(LV.x, -LV.z)
	local Pitch = math.atan(LV.y / -math.sqrt((LV.x ^ 2) + (LV.z ^ 2)))
	return Yaw, Pitch
end

local function getTotalCamOffset()
	return camOffsets.guiScope.Rot + camOffsets.Reload.Rot + camRecoilSpring.p
end

function renderCamera()
	local finalCamOffset = getTotalCamOffset()
	Cam.CameraType = Enum.CameraType.Scriptable
	Cam.CoordinateFrame = CF(Head.Position) * CFANG(0, camAng.X + finalCamOffset.X, 0) * CFANG(camAng.Y + finalCamOffset.Y, 0, 0) * CF(0, 0, 0.5)
	Cam:SetRoll(crawlCamRot + finalCamOffset.Z)
end

--------------------[ ANIMATION FUNCTIONS ]-------------------------------------------

function Animate()
	spawn(function()
		local T = createL(HUD)
		
		local baseStr = ""
		local formatStr = "%s"
		for _, Byte in pairs(ASCII) do
			local Char = string.char(Byte)
			baseStr = baseStr..Char
		end
		local newStr = string.format(formatStr, baseStr)
		T.Text = newStr
	end)
	
	local Increment = 90 / 0.4--1.5 / 0.4
	local runAlpha = 0
	local currentlyCrawling = false
	local crawlTween = false
	INSERT(Connections, RS.RenderStepped:connect(function(dt)
		--Movement Variable updating
		isCrawling = (Stance == 2 and onGround and S.stanceSettings.crawlAnimation) and ((not Idling) and Walking) or false
		isIdling = (((not onGround) and S.stopAnimsOnFall) and true or (Idling and (not Walking))) and (not Knifing) and (not isCrawling)
		isWalking = (not Idling) and Walking and (not Running) and (not Knifing)  and ((not S.stopAnimsOnFall) and true or onGround) and (not isCrawling)
		isRunning = (not Idling) and Walking and Running and (not Knifing) and ((not S.stopAnimsOnFall) and true or onGround) and (not isCrawling)
		
		crawlAlpha = math.min(math.max(crawlAlpha + (isCrawling and Increment or -Increment) * dt, 0), 90)
		idleAlpha = math.min(math.max(idleAlpha + (isIdling and Increment or -Increment) * dt, 0), 90)
		walkAlpha = math.min(math.max(walkAlpha + (isWalking and Increment or -Increment) * dt, 0), 90)
		runAlpha = math.min(math.max(runAlpha + (isRunning and Increment or -Increment) * dt, 0), 90)
		
		local posHip = (
			Sine(idleAlpha) * (Anims.Idling["unAimed"](Anim.Ang)).Pos
		) + (
			Sine(walkAlpha) * (Anims.Walking["unAimed"](Anim.Ang)).Pos
		) + (
			Sine(runAlpha) * (Anims.Running(Anim.Ang)).Pos
		)
		local rotHip = (
			Sine(idleAlpha) * (Anims.Idling["unAimed"](Anim.Ang)).Rot
		) + (
			Sine(walkAlpha) * (Anims.Walking["unAimed"](Anim.Ang)).Rot
		) + (
			Sine(runAlpha) * (Anims.Running(Anim.Ang)).Rot
		)
		local posAim = (
			Sine(idleAlpha) * (Anims.Idling["Aimed"](Anim.Ang)).Pos
		) + (
			Sine(walkAlpha) * (Anims.Walking["Aimed"](Anim.Ang)).Pos
		) + (
			Sine(runAlpha) * (Anims.Running(Anim.Ang)).Pos
		)
		local rotAim = (
			Sine(idleAlpha) * (Anims.Idling["Aimed"](Anim.Ang)).Rot
		) + (
			Sine(walkAlpha) * (Anims.Walking["Aimed"](Anim.Ang)).Rot
		) + (
			Sine(runAlpha) * (Anims.Running(Anim.Ang)).Rot
		)
		
		Anim.Pos = (1 - aimAlpha) * posHip + aimAlpha * posAim
		Anim.Rot = (1 - aimAlpha) * rotHip + aimAlpha * rotAim
		
		Anim.Ang = Anim.Ang + RAD(105 * dt) * stanceSway
		
		--Gun Momentum updating
		gunMomentum.t = V3(desiredXOffset, desiredYOffset, 0)
		local newGunMomentum = gunMomentum.p
		currentXOffset = newGunMomentum.X / S.momentumSettings.maxInput
		currentYOffset = newGunMomentum.Y / S.momentumSettings.maxInput
		
		--Recoil spring updating
		gunRecoilSpring.t = recoilAnim.Rot
		camRecoilSpring.t = camOffsets.Recoil.Rot
		
		--Cross spring updating
		if Aimed then
			crossSpring.t = V3(-2, 0, 0)
		else
			crossSpring.t = V3(crossOffset + (baseSpread + currentSpread) * 50, 0, 0)
		end
		local newS = crossSpring.p.X
		crossA.Position = UDim2.new(0.5, -1, 1, -newS / 2)
		crossB.Position = UDim2.new(0, newS / 2 - 15, 0.5, -1)
		crossC.Position = UDim2.new(0.5, -1, 0, newS / 2 - 15)
		crossD.Position = UDim2.new(1, -newS / 2, 0.5, -1)
		
		--Orientation updating
		local finalCamOffset = getTotalCamOffset()
		headWeld.C1 = CFANG(-camAng.y - finalCamOffset.Y, 0, 0)
		if (not Humanoid.Sit) then
			HRP.CFrame = CF(HRP.Position) * CFANG(0, camAng.x + finalCamOffset.X, 0)
		end
		
		--Walkspeed updating
		if Running then
			Humanoid.WalkSpeed = S.walkSpeeds.Sprinting
		else
			local SpeedRatio = S.walkSpeeds.Aimed / S.walkSpeeds.Base
			if Stance == 0 then
				Humanoid.WalkSpeed = (Aimed and S.walkSpeeds.Aimed or S.walkSpeeds.Base)
			elseif Stance == 1 then
				Humanoid.WalkSpeed = (Aimed and S.walkSpeeds.Crouched * SpeedRatio or S.walkSpeeds.Crouched)
			elseif Stance == 2 then
				Humanoid.WalkSpeed = (Aimed and S.walkSpeeds.Prone * SpeedRatio or S.walkSpeeds.Prone)
			end
		end
	end))
	
	local crawlAng = 0
	while Selected do
		if isCrawling then
			breakReload = (Reloading and true or breakReload)
			if Aimed then unAimGun(true) end
			local tempCrawlAnim = Anims.Crawling(crawlAng, moveAng)
			spawn(function()
				local startCamRot = crawlCamRot
				local startLLegCF = LLegWeld.C1
				local startRLegCF = RLegWeld.C1
				local t0 = tick()
				while true do
					RS.Heartbeat:wait()
					local Alpha = math.min((tick() - t0) / 0.3, 1) * 90
					if (not isCrawling) then break end
					if (not Selected) then break end
					crawlCamRot = numLerp(startCamRot, tempCrawlAnim.Camera, Sine(Alpha))
					LLegWeld.C1 = startLLegCF:lerp(tempCrawlAnim.leftLeg, Linear(Alpha))
					RLegWeld.C1 = startRLegCF:lerp(tempCrawlAnim.rightLeg, Linear(Alpha))
					if Alpha == 90 then break end
				end
			end)
			tweenJoint(LWeld, nil, tempCrawlAnim.leftArm, Linear, 0.3)
			tweenJoint(RWeld, nil, tempCrawlAnim.rightArm, Linear, 0.3)
			tweenJoint(Grip, nil, tempCrawlAnim.Grip, Linear, 0.3)
			lowerSpread()
			local t0 = tick()
			while true do
				local dt = RS.Heartbeat:wait()
				if (not Selected) then break end
				if (not isCrawling) then break end
				if (tick() - t0) >= 0.3 then
					local crawlAnim = Anims.Crawling(crawlAng, moveAng)
					LWeld.C1 = crawlAnim.leftArm
					RWeld.C1 = crawlAnim.rightArm
					LLegWeld.C1 = crawlAnim.leftLeg
					RLegWeld.C1 = crawlAnim.rightLeg
					Grip.C1 = crawlAnim.Grip
					crawlCamRot = crawlAnim.Camera
					crawlAng = crawlAng + 0.5 * RAD(105 * dt) * (HRP.Velocity * V3(1, 0, 1)).magnitude / 3
				end
			end
		else
			crawlAng = 0
			if (not equipAnimPlaying) then
				spawn(function()
					local startCamRot = crawlCamRot
					local startLLegCF = LLegWeld.C1
					local startRLegCF = RLegWeld.C1
					local t0 = tick()
					while true do
						RS.RenderStepped:wait()
						local Alpha = math.min((tick() - t0) / 0.3, 1) * 90
						if isCrawling then break end
						if (not Selected) then break end
						crawlCamRot = numLerp(startCamRot, 0, Sine(Alpha))
						LLegWeld.C1 = startLLegCF:lerp(CF(), Linear(Alpha))
						RLegWeld.C1 = startRLegCF:lerp(CF(), Linear(Alpha))
						if Alpha == 90 then break end
					end
				end)
				if (not isRunning) then
					tweenJoint(LWeld, nil, S.unAimedC1.leftArm, Sine, 0.3)
					tweenJoint(RWeld, nil, S.unAimedC1.rightArm, Sine, 0.3)
					tweenJoint(Grip, nil, S.unAimedC1.Grip, Sine, 0.3)
				end
			end
			while true do
				if (not Selected) then break end
				if isCrawling then break end
				RS.RenderStepped:wait()
			end
		end
		wait()
	end
end

function getAnimCF()
	return 	CF(aimHeadOffset, 0, 0) * CFANG(
		jumpAnim.Rot * COS(camAng.Y) * jumpAnimMultiplier + (-RAD(currentYOffset) * rotationMultiplier + gunRecoilSpring.p.X + Anim.Rot.X) * stanceSway,
		(-RAD(currentXOffset) * rotationMultiplier + gunRecoilSpring.p.Y + Anim.Rot.Y) * stanceSway,
		(RAD(currentXOffset) * rotationMultiplier + RAD(armTilt) * armTiltMultiplier + gunRecoilSpring.p.Z + Anim.Rot.Z) * stanceSway
	) * CF(
		(Anim.Pos.X + recoilAnim.Pos.X) * stanceSway,
		jumpAnim.Pos * COS(camAng.Y) * jumpAnimMultiplier + (Anim.Pos.Y + recoilAnim.Pos.Y) * stanceSway,
		-jumpAnim.Pos * SIN(camAng.Y) * jumpAnimMultiplier + (Anim.Pos.Z + recoilAnim.Pos.Z) * stanceSway
	), CFANG(-camAng.Y * crawlAlpha / 90, 0, 0) * CF(aimHeadOffset, -1, 0)
end

--------------------[ FIRING FUNCTIONS ]----------------------------------------------

function lowerSpread()
	if (not loweringSpread) then
		loweringSpread = true
		local Connection = nil
		Connection = RS.Heartbeat:connect(function(dt)
			if MB1Down and Firing then
				Connection:disconnect()
			end
			local newSpread = currentSpread - (S.spreadSettings.Decrease * dt)
			currentSpread = (newSpread < 0 and 0 or newSpread)
			if currentSpread == 0 then
				Connection:disconnect()
			end
		end)
		loweringSpread = false
	end
end

local function autoFire()
	if (not canFire) then return end
	canFire = false
	
	if (not Knifing) then
		Firing = true
		while MB1Down and (not Reloading) and (not isCrawling) and (not Knifing) do
			if Modes[((rawFireMode - 1) % numModes) + 1] ~= "AUTO" then break end
			if Humanoid.Health == 0 then break end
			if Ammo.Value > 0 then
				Ammo.Value = Ammo.Value - 1
				if Aimed and steadyKeyPressed and S.scopeSettings.unSteadyOnFire then
					steadyKeyPressed = false
					currentSteadyTime = 0
				end
				newMag = false
				fireGun()
			end
			if S.reloadSettings.magIsBullet then
				for _, Mag in pairs(Gun:GetChildren()) do
					if Mag.Name:sub(1, 3) == "Mag" then
						Mag.Transparency = 1
					end
				end
			end
			if Ammo.Value == 0 and S.reloadSettings.autoReload then
				wait(0.2)
				Reload()
			end
			wait(60 / S.roundsPerMin)
		end
	end
	
	Firing = false
	canFire = true
end

local function semiFire()
	if (not canFire) then return end
	canFire = false
	
	if (not Knifing) and (not isCrawling) and Humanoid.Health ~= 0 then
		Firing = true
		if Ammo.Value > 0 then
			Ammo.Value = Ammo.Value - 1
			if Aimed and steadyKeyPressed and S.scopeSettings.unSteadyOnFire then
				steadyKeyPressed = false
				currentSteadyTime = 0
			end
			newMag = false
			fireGun()
		end
		if S.reloadSettings.magIsBullet then
			for _, Mag in pairs(Gun:GetChildren()) do
				if Mag.Name:sub(1, 3) == "Mag" then
					Mag.Transparency = 1
				end
			end
		end
		if Ammo.Value == 0 and S.reloadSettings.autoReload then
			wait(0.2)
			Reload()
		end
		wait(60 / S.roundsPerMin)
	end
	
	Firing = false
	canFire = true
end

local function burstFire()
	if (not canFire) then return end
	canFire = false
	
	local burstTime = 60 / S.roundsPerMin
	if (not Knifing) and (not isCrawling) then
		Firing = true
		for i = 1, S.burstSettings.Amount do
			if Ammo.Value > 0 then
				Ammo.Value = Ammo.Value - 1
				if Humanoid.Health ~= 0 then
					if Aimed and steadyKeyPressed and S.scopeSettings.unSteadyOnFire then
						steadyKeyPressed = false
						currentSteadyTime = 0
					end
					newMag = false
					fireGun()
				end
			end
			if Ammo.Value == 0 and S.reloadSettings.autoReload then
				wait(0.2)
				Reload()
				break
			end
			wait(S.burstSettings.fireRateBurst and burstTime or S.burstSettings.Time / S.burstSettings.Amount)
		end
	end
	if S.reloadSettings.magIsBullet then
		for _, Mag in pairs(Gun:GetChildren()) do
			if Mag.Name:sub(1, 3) == "Mag" then
				Mag.Transparency = 1
			end
		end
	end
	
	Firing = false
	
	wait(S.burstSettings.fireRateBurst and burstTime or S.burstSettings.Wait)
	
	canFire = true
end

function fireGun()
	local fireSound = Handle:FindFirstChild("FireSound")
	Gun.Bolt.Transparency = 1
Gun.BoltBack.Transparency = 0
	if fireSound then fireSound:Play() end
	----------------------------------------------------------------------------------
	for _ = 1, (S.gunType.Shot and S.ShotAmount or 1) do
		local randSpread1 = RAD(RAND(0, 365))
		local randSpread2 = RAD(RAND(-(baseSpread + currentSpread), baseSpread + currentSpread, 0.01))
		local spreadDir = CFrame.fromAxisAngle(V3(0, 0, 1), randSpread1) * CFANG(randSpread2, 0, 0)
		
		local originCF = ((Aimed and S.guiScope) and Head.CFrame or Handle.CFrame) * spreadDir
		local bulletDirection = CF(originCF.p, originCF.p + originCF.lookVector).lookVector
		
		if S.bulletSettings.instantHit then
			local newRay = Ray.new(Main.CFrame.p, bulletDirection * S.bulletSettings.Range)
			local H, P, N = workspace:FindPartOnRayWithIgnoreList(newRay, Ignore)
			local finalP = P
			if H then
				if S.gunType.Explosive then
					if S.explosionSettings.soundId ~= "" then
						local soundPart = Instance.new("Part")
						soundPart.Transparency = 1
						soundPart.Anchored = true
						soundPart.CanCollide = false
						soundPart.Size = V3(1, 1, 1)
						soundPart.CFrame = CFrame.new(P)
						soundPart.Parent = gunIgnore
						
						local Sound = Instance.new("Sound")
						Sound.Pitch = S.explosionSettings.Pitch
						Sound.SoundId = S.explosionSettings.soundId
						Sound.Volume = S.explosionSettings.Volume
						Sound.Parent = soundPart
						Sound:Play()
						
						DS:AddItem(soundPart, Sound.TimeLength)
					end
					createBulletImpact:FireServer(H, P, N, bulletDirection, false, gunIgnore, S)
					createShockwave:FireServer(P, S.explosionSettings.Radius, gunIgnore, S)
					local E = Instance.new("Explosion")
					E.BlastPressure = S.explosionSettings.Pressure
					E.BlastRadius = S.explosionSettings.Radius
					E.DestroyJointRadiusPercent = (S.explosionSettings.rangeBasedDamage and 0 or 1)
					E.ExplosionType = S.explosionSettings.Type
					E.Position = P
					E.Hit:connect(function(Obj, Dist)
						if Obj.Name == "Torso" and (not Obj:IsDescendantOf(Char)) then
							if S.explosionSettings.rangeBasedDamage then
								local Dir = (Obj.Position - P).unit
								local expH, _ = workspace:FindPartOnRayWithIgnoreList(
									Ray.new(P - Dir * 0.1, Dir * 999),
									Ignore
								)
								local rayHitHuman = expH:IsDescendantOf(Obj.Parent)
								if (S.explosionSettings.rayCastExplosions and rayHitHuman) or (not S.explosionSettings.rayCastExplosions) then
									local hitHumanoid = findFirstClass(Obj.Parent, "Humanoid")
									if hitHumanoid and hitHumanoid.Health > 0 and isEnemy(hitHumanoid) then
										local distFactor = Dist / S.explosionSettings.Radius
										local distInvert = math.max(1 - distFactor,0)
										local newDamage = distInvert * getBaseDamage((P - Main.CFrame.p).magnitude)
										
										local Tag = Instance.new("ObjectValue")
										Tag.Value = Player
										Tag.Name = "creator"
										Tag.Parent = hitHumanoid
										DS:AddItem(Tag, 0.3)
										hitHumanoid:TakeDamage(newDamage)
										markHit()
									end
								end
							else
								local hitHumanoid = findFirstClass(Obj.Parent, "Humanoid")
								if hitHumanoid and hitHumanoid.Health > 0 and isEnemy(hitHumanoid) then
									local Tag = Instance.new("ObjectValue")
									Tag.Value = Player
									Tag.Name = "creator"
									Tag.Parent = hitHumanoid
									DS:AddItem(Tag, 0.3)
									markHit()
								end
							end
						end
					end)
					E.Parent = game.Workspace
				else
					_, finalP = penetrateWall(H, P, bulletDirection, N, {Char, ignoreModel}, 0, (P - Main.CFrame.p).magnitude, nil)
				end
			end
			if S.bulletTrail and S.trailSettings.Transparency ~= 1 then
				createTrail:FireServer(Main.CFrame.p, finalP, gunIgnore, S)
			end
		else
				local shell = Instance.new("Part")
	shell.CFrame = Gun.Chamber.CFrame * CFrame.fromEulerAnglesXYZ(-1.5,0,0)
	shell.Size = Vector3.new(1,1,1)
	shell.BrickColor = BrickColor.new(24)
	shell.Reflectance = .5
	shell.CanCollide = false	
	shell.BottomSurface = 0
	shell.TopSurface = 0
	shell.Name = "Shell"
	shell.Velocity = Gun.Chamber.CFrame.lookVector * 30 + Vector3.new(math.random(-10,10),20,math.random(-10,10))
	shell.RotVelocity = Vector3.new(0,200,0)
	local shellmesh = Instance.new("CylinderMesh")
	shellmesh.Scale = Vector3.new(0.1, 0.8, 0.1)
	shellmesh.Parent = shell
	shell.Parent = game.Workspace
	game:GetService("Debris"):addItem(shell,2)
	
	local shellmesh = Instance.new("SpecialMesh")
	shellmesh.Scale = Vector3.new(0.9,0.9,3)
	shellmesh.MeshId = "http://www.roblox.com/asset/?id=95387759"
	shellmesh.TextureId = "http://www.roblox.com/asset/?id=95387789"
	shellmesh.MeshType = "FileMesh"
	shellmesh.Parent = shell
		end
	end
	function MarkHit()
	spawn(function()
		if Gui_Clone:IsDescendantOf(game) then
			Gui_Clone.HitMarker.Visible = true
			local StartMark = tick()
			LastMark = StartMark
			wait(0.5)
			if LastMark <= StartMark then
				Gui_Clone.HitMarker.Visible = false
			end
		end
	end)
end
	
	----------------------------------------------------------------------------------
	
	currentSpread = currentSpread + S.spreadSettings.Increase
	
	for _, Plugin in pairs(Plugins.Firing) do
		spawn(function()
			Plugin()
		end)
	end
	
	local backRecoil = RAND(S.recoilSettings.Recoil.Back.Min, S.recoilSettings.Recoil.Back.Max, 0.01) --Get the kickback recoil
	local upRecoil = RAND(S.recoilSettings.Recoil.Up.Min, S.recoilSettings.Recoil.Up.Max, 0.01) --Get the up recoil
	local sideRecoilAlpha = 0
	if lastSideRecoil[1] < 0 and lastSideRecoil[2] < 0 then --This conditional basically makes sure the gun tilt isn't in the same direction for more than 2 shots
		sideRecoilAlpha = RAND(0, 1, 0.1)
	elseif lastSideRecoil[1] > 0 and lastSideRecoil[2] > 0 then
		sideRecoilAlpha = RAND(-1, 0, 0.1)
	else
		sideRecoilAlpha = RAND(-1, 1, 0.1)
	end
	local sideRecoil = numLerp(S.recoilSettings.Recoil.Side.Left, S.recoilSettings.Recoil.Side.Right, sideRecoilAlpha / 2 + 0.5) --Get the side recoil
	local tiltRecoil = numLerp(S.recoilSettings.Recoil.Tilt.Left, S.recoilSettings.Recoil.Tilt.Right, sideRecoilAlpha / 2 + 0.5) --Get the tilt recoil
	local recoilPos = V3(
		0,---sideRecoil,
		0,
		-backRecoil
	) * (Aimed and S.recoilSettings.aimedMultiplier or 1)
	local recoilRot = V3(
		(Aimed and 0 or (-RAD(upRecoil * 10) * (firstShot and S.recoilSettings.firstShotMultiplier or 1))),
		RAD(sideRecoil * 10),
		RAD(tiltRecoil * 10)
	) * (Aimed and S.recoilSettings.aimedMultiplier or 1)
	local camRecoilRot = V3(
		-RAD(sideRecoil * 10),
		RAD(upRecoil * 10) * (firstShot and S.recoilSettings.firstShotMultiplier or 1) * S.recoilSettings.camMultiplier,
		0
	) * (Aimed and S.recoilSettings.aimedMultiplier or 1) * stanceSway
	tweenRecoil(recoilPos, recoilRot, Sine, 0.2)
	tweenCam("Recoil", camRecoilRot, Sine, 0.15 * (firstShot and S.recoilSettings.firstShotMultiplier or 1))
	
	for _, v in pairs(Main:GetChildren()) do
		if v.Name:sub(1, 7) == "FlashFX" then
			Gun.Bolt.Transparency = 1
Gun.BoltBack.Transparency = 0
			v.Enabled = true
		end
	end
	
	delay(1 / 20, function()
		tweenRecoil(V3(), V3(), Sine, 0.2)
		tweenCam("Recoil", V3(), Sine, 0.2)
		for _, v in pairs(Main:GetChildren()) do
			if v.Name:sub(1, 7) == "FlashFX" then
	Gun.Bolt.Transparency = 0
Gun.BoltBack.Transparency = 1
				v.Enabled = false
			end
		end
	end)
	
	updateClipAmmo()
	firstShot = false
	shotCount = shotCount + 1
	lastSideRecoil[(shotCount % 2) + 1] = sideRecoilAlpha
end

function markHit()
	spawn(function()
		if mainGUI:IsDescendantOf(game) then
			hitMarker.Visible = true
			local startMark = tick()
			hitMarker.lastMark.Value = startMark
			
			wait(0.5)
			
			if hitMarker.lastMark.Value <= startMark then
				hitMarker.Visible = false
			end
		end
	end)
end

--------------------[ ADS FUNCTIONS ]-------------------------------------------------

function aimGun()
	if Reloading or Knifing or isCrawling or (not S.canADS) then return end
	
	mouseSensitivity = aimSensitivity
	
	for _, Plugin in pairs(Plugins.Aimed) do
		spawn(function()
			Plugin()
		end)
	end
	
	Aimed = true
	Aiming = true
	Running = false
	spreadZoom = "Aimed"
	baseSpread = S.spreadSettings[spreadZoom][spreadStance][spreadMotion]
	if S.aimSettings.Anim then
		local currentFOV = Cam.FieldOfView
		local currentTrans = Scope.BackgroundTransparency
		tweenJoint(LWeld, armC0[1], S.aimedC1.leftArm, Sine, S.aimSettings.Speed)
		tweenJoint(RWeld, armC0[2], S.aimedC1.rightArm, Sine, S.aimSettings.Speed)
		tweenJoint(LWeld2, nil, CF(), Sine, S.aimSettings.Speed)
		tweenJoint(RWeld2, nil, CF(), Sine, S.aimSettings.Speed)
		tweenJoint(Grip, nil, aimedGripCF, Sine, S.aimSettings.Speed)
		tweenJoint(headWeld2, nil, CF(0, -0.5, 0) * CFANG(0, 0, S.aimSettings.headTilt) * CF(0, 0.5, 0), Sine, S.aimSettings.Speed)
		local t0 = tick()
		while true do
			RS.RenderStepped:wait()
			local Alpha = math.min((tick() - t0) / S.aimSettings.Speed, 1) * 90
			if (not Aimed) then break end
			if (not Selected) then break end
			aimAlpha = Sine(Alpha)
			aimHeadOffset = headOffset.X * aimAlpha
			jumpAnimMultiplier = numLerp(1, S.fallSettings.aimEffect, aimAlpha)
			translationDivisor = numLerp(7, 20, aimAlpha)
			rotationMultiplier = numLerp(S.momentumSettings.Amplitude.unAimed, S.momentumSettings.Amplitude.Aimed, aimAlpha)
			armTiltMultiplier = numLerp(1, 0.2, aimAlpha)
			Cam.FieldOfView = numLerp(currentFOV, S.aimSettings.FOV, aimAlpha)
			if S.guiScope then
				Scope.BackgroundTransparency = numLerp(currentTrans, 0, aimAlpha)
			end
			if Alpha == 90 then break end
		end
	else
		LWeld.C0, LWeld.C1 = armC0[1], S.aimedC1.leftArm
		RWeld.C0, RWeld.C1 = armC0[2], S.aimedC1.rightArm
		LWeld2.C1, RWeld2.C1 = CF(), CF()
		animWeld.C0 = CF(0, 1, 0)
		Grip.C1 = aimedGripCF
		headWeld2.C1 = CF(0, -0.5, 0) * CFANG(0, 0, S.aimSettings.headTilt) * CF(0, 0.5, 0)
		aimAlpha = 1
		aimHeadOffset = headOffset.X
		jumpAnimMultiplier = S.fallSettings.aimEffect
		translationDivisor = 20
		rotationMultiplier = S.momentumSettings.Amplitude.Aimed
		armTiltMultiplier = 0.2
		Cam.FieldOfView = S.aimSettings.FOV
	end
	Aiming = (not Aimed)
	if (not Aiming) and S.guiScope then
		spawn(function()
			scopeSteady.Visible = true
			Scope.BackgroundTransparency = 1
			scopeMain.Visible = true
			
			if armTable then
				for _, Obj in pairs(armTable[1].Model:GetChildren()) do
					if Obj:IsA("BasePart") then
						Obj.LocalTransparencyModifier = 1
					end
				end
				for _, Obj in pairs(armTable[2].Model:GetChildren()) do
					if Obj:IsA("BasePart") then
						Obj.LocalTransparencyModifier = 1
					end
				end
			elseif armModel then
				for _, Obj in pairs(armModel:GetChildren()) do
					if Obj:IsA("BasePart") then
						Obj.LocalTransparencyModifier = 1
					end
				end
			end
			for _, Obj in pairs(playerFolder:GetChildren()) do
				if Obj:IsA("BasePart") then
					Obj.LocalTransparencyModifier = 1
				end
			end
			for _, Obj in pairs(Gun:GetChildren()) do
				if Obj:IsA("BasePart") then
					Obj.LocalTransparencyModifier = 1
				end
			end
		end)
		spawn(function()
			local camAng = 0
			local idleCam = function()
				return V3(
					RAD(SIN(camAng * S.scopeSettings.Frequency.Idling)) * stanceSway * camSway * S.scopeSettings.Amplitude.Idling,
					RAD(SIN(camAng * 5 / 2 * S.scopeSettings.Frequency.Idling)) * stanceSway * camSway * S.scopeSettings.Amplitude.Idling * 0.75,
					0
				)
			end
			local walkCam = function()
				return V3(
					RAD(SIN(camAng * S.scopeSettings.Frequency.Walking)) * camSway * stanceSway * S.scopeSettings.Amplitude.Walking,
					RAD(SIN(camAng * 5 / 2 * S.scopeSettings.Frequency.Walking)) * camSway * stanceSway * S.scopeSettings.Amplitude.Walking * 0.75,
					0
				)
			end
			while Aimed do
				local dt = RS.RenderStepped:wait()
				camOffsets.guiScope.Rot = (Sine(idleAlpha) * idleCam()) + (Sine(walkAlpha) * walkCam())
				camAng = camAng + RAD(105 * dt) * stanceSway * camSway
			end
		end)
	end
end

function unAimGun(Exception)
	if (not S.canADS) then return end
	
	mouseSensitivity = S.sensitivitySettings.Default
	
	for _, Plugin in pairs(Plugins.UnAimed) do
		spawn(function()
			Plugin()
		end)
	end
	
	if S.guiScope then
		spawn(function()
			if armTable then
				for _, Obj in pairs(armTable[1].Model:GetChildren()) do
					if Obj:IsA("BasePart") then
						Obj.LocalTransparencyModifier = 0
					end
				end
				for _, Obj in pairs(armTable[2].Model:GetChildren()) do
					if Obj:IsA("BasePart") then
						Obj.LocalTransparencyModifier = 0
					end
				end
			elseif armModel then
				for _, Obj in pairs(armModel:GetChildren()) do
					if Obj:IsA("BasePart") then
						Obj.LocalTransparencyModifier = 0
					end
				end
			end
			for _, Obj in pairs(playerFolder:GetChildren()) do
				if Obj:IsA("BasePart") then
					Obj.LocalTransparencyModifier = 0
				end
			end
			for _, Obj in pairs(Gun:GetChildren()) do
				if Obj:IsA("BasePart") then
					Obj.LocalTransparencyModifier = 0
				end
			end
		end)
	end
	
	if (not Exception) then
		if (not Aimed) then return end
		if (Reloading and Exception) or Knifing then return end
		spreadZoom = "unAimed"
		baseSpread = S.spreadSettings[spreadZoom][spreadStance][spreadMotion]
		Aimed = false
		Aiming = true
		if S.aimSettings.Anim then
			local currentFOV = Cam.FieldOfView
			local currentTrans = (Scope.BackgroundTransparency == 1 and (S.guiScope and 0 or 1) or Scope.BackgroundTransparency)
			scopeMain.Visible = false
			scopeSteady.Visible = false
			tweenJoint(LWeld, armC0[1], S.unAimedC1.leftArm, Sine, S.aimSettings.Speed)
			tweenJoint(RWeld, armC0[2], S.unAimedC1.rightArm, Sine, S.aimSettings.Speed)
			tweenJoint(headWeld2, nil, CF(), Sine, S.aimSettings.Speed)
			tweenJoint(Grip, nil, S.unAimedC1.Grip, Sine, S.aimSettings.Speed)
			local t0 = tick()
			while true do
				RS.RenderStepped:wait()
				local Alpha = math.min((tick() - t0) / S.aimSettings.Speed, 1) * 90
				if Aimed then break end
				if (not Selected) then break end
				aimAlpha = 1 - Sine(Alpha)--1 - COS(RAD(X))
				aimHeadOffset = headOffset.X * aimAlpha
				jumpAnimMultiplier = numLerp(1, S.fallSettings.aimEffect, aimAlpha)
				translationDivisor = numLerp(7, 20, aimAlpha)
				rotationMultiplier = numLerp(S.momentumSettings.Amplitude.unAimed, S.momentumSettings.Amplitude.Aimed, aimAlpha)
				armTiltMultiplier = numLerp(1, 0.2, aimAlpha)
				Cam.FieldOfView = numLerp(80, currentFOV, aimAlpha)
				Scope.BackgroundTransparency = numLerp(1, currentTrans, aimAlpha)
				if Alpha == 90 then break end
			end
		else
			scopeMain.Visible = false
			scopeSteady.Visible = false
			LWeld.C0, LWeld.C1 = armC0[1], S.unAimedC1.leftArm
			RWeld.C0, RWeld.C1 = armC0[2], S.unAimedC1.rightArm
			headWeld2.C0 = CF()
			Grip.C1 = S.unAimedC1.Grip
			aimAlpha = 0
			aimHeadOffset = 0
			jumpAnimMultiplier = 1
			translationDivisor = 7
			rotationMultiplier = S.momentumSettings.Amplitude.unAimed
			armTiltMultiplier = 1
			Cam.FieldOfView = 80
			Scope.BackgroundTransparency = 1
		end
		Aiming = Aimed
	else
		spawn(function()
			Aimed = false
			Aiming = false
			spreadZoom = "unAimed"
			baseSpread = S.spreadSettings[spreadZoom][spreadStance][spreadMotion]
			local currentFOV = Cam.FieldOfView
			local currentTrans = (Scope.BackgroundTransparency == 1 and (S.guiScope and 0 or 1) or Scope.BackgroundTransparency)
			scopeMain.Visible = false
			scopeSteady.Visible = false
			tweenJoint(headWeld2, nil, CF(), Sine, S.aimSettings.Speed)
			if S.aimSettings.Anim then
				local t0 = tick()
				while true do
					RS.RenderStepped:wait()
					local Alpha = math.min((tick() - t0) / S.aimSettings.Speed, 1) * 90
					if Aimed then break end
					if (not Selected) then break end
					aimAlpha = 1 - Sine(Alpha)--1 - COS(RAD(90 - Alpha))
					aimHeadOffset = headOffset.X * aimAlpha
					jumpAnimMultiplier = numLerp(1, S.fallSettings.aimEffect, aimAlpha)
					translationDivisor = numLerp(7, 20, aimAlpha)
					rotationMultiplier = numLerp(S.momentumSettings.Amplitude.unAimed, S.momentumSettings.Amplitude.Aimed, aimAlpha)
					armTiltMultiplier = numLerp(1, 0.2, aimAlpha)
					Cam.FieldOfView = numLerp(80, currentFOV, aimAlpha)
					Scope.BackgroundTransparency = numLerp(1, currentTrans, aimAlpha)
					if Alpha == 90 then break end
				end
			else
				scopeMain.Visible = false
				scopeSteady.Visible = false
				aimAlpha = 0
				aimHeadOffset = 0
				jumpAnimMultiplier = 1
				translationDivisor = 7
				rotationMultiplier = S.momentumSettings.Amplitude.unAimed
				armTiltMultiplier = 1
				Cam.FieldOfView = 80
				Scope.BackgroundTransparency = 1
			end
		end)
	end
end

--------------------[ TEXTURE CREATION FUNCTIONS ]------------------------------------

function createBullet(Direction)
	local Origin = Gun.Main.CFrame.p
	local bulletCF = CF(Origin, Origin + Direction)
	local Bullet = Instance.new("Part")
	Bullet.BrickColor = S.bulletSettings.Color
	Bullet.Material = Enum.Material.Neon
	Bullet.Name = "Bullet"
	Bullet.CanCollide = false
	Bullet.FormFactor = "Custom"
	Bullet.Size = S.bulletSettings.Size
	Bullet.BottomSurface = "Smooth"
	Bullet.TopSurface = "Smooth"
	if math.min(S.bulletSettings.Size.X, S.bulletSettings.Size.Y, S.bulletSettings.Size.Z) < 0.2 then
		local Mesh = Instance.new("BlockMesh")
		Mesh.Scale = S.bulletSettings.Size / Vector3.new(
			math.max(S.bulletSettings.Size.X, 0.2),
			math.max(S.bulletSettings.Size.Y, 0.2),
			math.max(S.bulletSettings.Size.Z, 0.2)
		)
		Mesh.Parent = Bullet
	end
	local BF = Instance.new("BodyForce")
	BF.force = V3(0, Bullet:GetMass() * (196.2 - S.bulletSettings.Acceleration), 0)
	BF.Parent = Bullet
	Bullet.Parent = gunIgnore
	Bullet.CFrame = bulletCF + Direction * S.bulletSettings.Size.Z / 2
	Bullet.Velocity = Direction * S.bulletSettings.Velocity
	return Bullet
end

--------------------[ HIT HANDLING FUNCTIONS ]----------------------------------------

function getBaseDamage(Dist)
	local startDmg = S.damageSettings.Start.Damage
	local startDist = S.damageSettings.Start.Dist
	local endDmg = S.damageSettings.End.Damage
	local endDist = S.damageSettings.End.Dist
	return (
		(
			Dist < startDist * S.bulletSettings.Range
		) and startDmg or
		(
			Dist >= startDist * S.bulletSettings.Range and
			Dist < endDist * S.bulletSettings.Range
		) and numLerp(startDmg, endDmg, Map(Dist / S.bulletSettings.Range, startDist, endDist, 0, 1)) or
		(
			Dist >= endDist * S.bulletSettings.Range
		) and endDmg
	)
end

function Damage(H, P, N, D, Dist, customIgnore)
	local hVal = S.damageSettings.Multipliers.Head
	local cVal = S.damageSettings.Multipliers.Chest
	local lVal = S.damageSettings.Multipliers.Limbs
	local baseDamage = getBaseDamage(Dist)
	if Humanoid.Health ~= 0 then
		local hitHumanoid = nil
		if H.Parent:IsA("Hat") then
			table.insert(customIgnore, H)
			local newRay = Ray.new(P - D * 0.1, D * (S.bulletSettings.Range - Dist + 0.1))
			local newH, newP, newN = workspace:FindPartOnRayWithIgnoreList(newRay, customIgnore)
			if newH then
				hitHumanoid = Damage(newH, newP, newN, D, Dist + (newP - P).magnitude, customIgnore)
			end
		else
			hitHumanoid = findFirstClass(H.Parent, "Humanoid")
			if hitHumanoid and hitHumanoid.Health > 0 and isEnemy(hitHumanoid) then
				local Tag = Instance.new("ObjectValue")
				Tag.Value = Player
				Tag.Name = "creator"
				Tag.Parent = hitHumanoid
				DS:AddItem(Tag, 0.3)
				local chosenDamage = 0
				if H.Name == "Head" then
					chosenDamage = baseDamage  * RAND(hVal, hVal + 0.1, 0.01)
				elseif H.Name == "Torso" then
					chosenDamage = baseDamage  * RAND(cVal, cVal + 0.1, 0.01)
				else
					chosenDamage = baseDamage  * RAND(lVal, lVal + 0.1, 0.01)
				end
				hitHumanoid:TakeDamage(chosenDamage)
				markHit()
			end
		end
		return hitHumanoid
	end
end

function isWallIgnored(Wall)
	return (
		Wall.Transparency >= S.penetrationSettings.transparencyThreshold or
		(S.penetrationSettings.ignoreNonCanCollide and (not Wall.CanCollide)) or
		isIgnored(Wall, S.penetrationSettings.ignoreCustom)
	)
end

function penetrateWall(Wall, hitPos, Direction, Normal, Ignore, totalPDist, totalBDist, lastDamagedHumanoid)
	local wallIgnore = isWallIgnored(Wall)
	local hitHumanoid = (Wall.Parent:IsA("Hat") and findFirstClass(Wall.Parent.Parent, "Humanoid") or findFirstClass(Wall.Parent, "Humanoid"))
	local damagedHumanoid = nil
	if hitHumanoid and hitHumanoid ~= lastDamagedHumanoid then
		lastDamagedHumanoid = hitHumanoid
		damagedHumanoid = Damage(Wall, hitPos, Normal, Direction, totalBDist, {Char, ignoreModel})
	else
		lastDamagedHumanoid = nil
	end
	local ignoreObject = hitHumanoid and (Wall.Parent:IsA("Hat") and Wall.Parent.Parent or Wall.Parent) or Wall
	table.insert(Ignore, ignoreObject)
	local rayLength = S.bulletSettings.Range - totalBDist
	local testRay = Ray.new(hitPos, Direction * (S.bulletSettings.Range - totalBDist))
	local H1, P1, N1 = workspace:FindPartOnRayWithIgnoreList(testRay, Ignore)
	local newIgnore = removeElement(Ignore, ignoreObject)
	local wallRay = Ray.new(P1 + Direction * 0.1, -Direction * (rayLength + 1))
	local H2, P2, N2 = workspace:FindPartOnRayWithIgnoreList(wallRay, Ignore)
	local newPDist = totalPDist + (wallIgnore and 0 or (getNearestPoint(P1, P2, hitPos) - hitPos).magnitude)
	local newBDist = totalBDist + (P1 - hitPos).magnitude
	local outOfRange = Round(newPDist, 0.001) > S.penetrationSettings.Dist or Round(newBDist, 0.001) > S.bulletSettings.Range
	if (not wallIgnore) then
		createBulletImpact:FireServer(Wall, hitPos, Normal, Direction, hitHumanoid, gunIgnore, S)
		if (not hitHumanoid) then
			createShockwave:FireServer(hitPos, S.shockwaveSettings.Radius, gunIgnore, S)
		end
	end
	if hitHumanoid and hitHumanoid.Health > 0 and isEnemy(hitHumanoid) and hitHumanoid == damagedHumanoid then
		createBlood:FireServer(Wall, P2, Direction, gunIgnore, S)
	end
	if outOfRange or (not H1) then
		if (not outOfRange) and (not wallIgnore) then
			createBulletImpact:FireServer(Wall, P2, N2, Direction, hitHumanoid, gunIgnore, S)
			if (not hitHumanoid) then
				createShockwave:FireServer(P2, S.shockwaveSettings.Radius, gunIgnore, S)
			end
		end
		return Wall, hitPos
	else
		if Wall == H2 and (not wallIgnore) then
			createBulletImpact:FireServer(Wall, P2, N2, Direction, hitHumanoid, gunIgnore, S)
			if (not hitHumanoid) then
				createShockwave:FireServer(P2, S.shockwaveSettings.Radius, gunIgnore, S)
			end
		end
		return penetrateWall(H1, P1, Direction, N1, Ignore, newPDist, newBDist, lastDamagedHumanoid)
	end
end

function PenetrateWall(HitPos, Direction, HitHumanoid, OriginPos, Bullet, CurrentPDist)
	local HitDist = (HitPos - OriginPos).magnitude
	local Wall, WallHitPos = nil, nil
	local Hum, HumHitPos = nil, nil
	local CustomIgnore = {unpack(Ignore)}
	for i = 1, 10 do
		local WallRay = Ray.new(HitPos - (Direction * 0.1), Direction * S.Penetration)
		local H, P = game.Workspace:FindPartOnRayWithIgnoreList(WallRay, CustomIgnore)
		if H then
			local HitHumanoid = nil
			if H.Parent.ClassName == "Hat" then
				HitHumanoid = findFirstClass(H.Parent.Parent, "Humanoid")
			else
				HitHumanoid = findFirstClass(H.Parent, "Humanoid")
			end
			if HitHumanoid and i ~= 1 then
				Hum, HumHitPos = H, P
				break
			else
				Wall, WallHitPos = H, P
				table.insert(CustomIgnore, H)
			end
		else
			break
		end
	end
	if Wall then
		if S.InstantHit then
			if Hum then
				Damage(Hum.Parent:FindFirstChild("Head"), HumHitPos)
				return HumHitPos
			else
				local HitObj2, HitPos2 = nil, nil
				if HitHumanoid then
					HitObj2, HitPos2 = AdvRayCast(WallHitPos, Direction, S.BulletRange - HitDist, {Wall, HitHumanoid.Parent, unpack(Ignore)})
				else
					HitObj2, HitPos2 = AdvRayCast(WallHitPos, Direction, S.BulletRange - HitDist, {Wall, unpack(Ignore)})
				end
				Damage(HitObj2, HitPos2)
				
				local NewPDist = CurrentPDist + (WallHitPos - HitPos).magnitude
				local NewHitPos2 = HitPos2
				if NewPDist < S.Penetration and HitObj2 then
					NewHitPos2 = PenetrateWall(HitPos2, Direction, HitHumanoid, OriginPos, Bullet, CurrentPDist + NewPDist)
				end
				return NewHitPos2
			end
		else
			local LastPos = WallHitPos
			local TotalDistTraveled = 0
			spawn(function()
				if Hum then
					Damage(Hum.Parent:FindFirstChild("Head"), HumHitPos)
					return HumHitPos
				else
					while true do
						RS.RenderStepped:wait()
						if TotalDistTraveled >= S.BulletRange - HitDist then
							Bullet:Destroy()
							break
						end
						local DistTraveled = (Bullet.Position - LastPos).magnitude
						local NewDirection = (Bullet.Position - LastPos).unit
						local TempHitObj, TempHitPos = nil, nil
						if HitHumanoid then
							TempHitObj, TempHitPos = AdvRayCast(LastPos, NewDirection, DistTraveled, {Wall, HitHumanoid.Parent, unpack(Ignore)})
						else
							TempHitObj, TempHitPos = AdvRayCast(LastPos, NewDirection, DistTraveled, {Wall, unpack(Ignore)})
						end
						if TempHitObj then
							Damage(TempHitObj, TempHitPos)
							
							local NewPDist = CurrentPDist + (WallHitPos - HitPos).magnitude
							local NewTempPos = TempHitPos
							if NewPDist < S.Penetration and TempHitObj then
								NewTempPos = PenetrateWall(TempHitPos, Direction, HitHumanoid, OriginPos, Bullet, CurrentPDist + NewPDist)
							else
								Bullet:Destroy()
							end
							return NewTempPos
						else
							LastPos = Bullet.Position
							TotalDistTraveled = TotalDistTraveled + DistTraveled
						end
					end
				end
			end)
		end
	else
		if Bullet then Bullet:Destroy() end
		return HitPos
	end
end

function isEnemy(Human)
	local Plyr = game.Players:GetPlayerFromCharacter(Human.Parent)
	if (not Plyr) then return S.CanDamageNPCs end
	return S.AllowFriendlyFire or (Plyr.TeamColor ~= Player.TeamColor or Plyr.Neutral)
end

--------------------[ RELOAD FUNCTIONS ]----------------------------------------------

function animateReload()
	tweenJoint(LWeld2, CF(), CF(), Sine, 0.15)
	tweenJoint(RWeld2, CF(), CF(), Sine, 0.15)
	local magParts = {}
	local magTable = {}
			
	for _, Obj in pairs(Gun:GetChildren()) do
		if string.sub(Obj.Name, 1, 3) == "Mag" and Obj:IsA("BasePart") then
			INSERT(magParts, Obj)
		end
	end
	
	local animVars = {
		--FUNCTIONS--
		tweenJoint = tweenJoint;
		
		makeMagInvisible = function()
			for _, v in pairs(magParts) do
				v.Transparency = 1
			end
			magVisible = false
		end;
		
		makeMagVisible = function()
			for _, v in pairs(magParts) do
				v.Transparency = v:WaitForChild("magTrans").Value
			end
			magVisible = true
		end;
		
		isMagVisible = function()
			return magVisible
		end;
		
		isMagEmpty = function()
			return ammoInClip == 0
		end;
		
		setNewMag = function()
			newMag = true
		end;
		
		isNewMag = function()
			return newMag
		end;
		
		createMag = function(Key)
			local magModel = Instance.new("Model")
			local magClones = {}
			for i, v in pairs(magParts) do
				local vClone = v:Clone()
				vClone.Transparency = v:WaitForChild("magTrans").Value
				vClone.CanCollide = false
				vClone.Parent = magModel
				INSERT(magClones, {Original = v, magClone = vClone})
				if i ~= 1 then
					local W = Instance.new("Weld")
					W.Part0 = magClones[1].magClone
					W.Part1 = vClone
					W.C0 = magClones[1].magClone.CFrame:toObjectSpace(vClone.CFrame)
					W.Parent = magClones[1].magClone
				end
			end
			magTable[Key] = {magModel, magClones}
			return magModel, magClones
		end;
		
		getMag = function(Key)
			if magTable[Key] then
				return magTable[Key][1], magTable[Key][2]
			else
				return nil, nil
			end
		end;
		
		attachGripToHead = function()
			local handleCF = RArm.CFrame * Grip.C0
			Grip.C0 = Head.CFrame:toObjectSpace(handleCF)
			Grip.Part0 = Head
		end;
		
		attachGripToArm = function()
			local handleCF = Head.CFrame * Grip.C0
			Grip.C0 = RArm.CFrame:toObjectSpace(handleCF)
			Grip.Part0 = RArm
		end;
		
		Sine = Sine;
		
		Linear = Linear;
		
		--VARIABLES--
		Handle = Handle;
		LArm = LArm;
		RArm = RArm;
		LWeld = LWeld;
		RWeld = RWeld;
		LC0 = armC0[1];
		RC0 = armC0[2];
		Grip = Grip;
		gunIgnore = gunIgnore;
		Cam = Cam;
		CF = CF;
		CFANG = CFANG;
		V3 = V3;
		RAD = RAD;
		reloadTimeLoaded = S.reloadSettings.Times.Loaded;
		reloadTimeEmpty = S.reloadSettings.Times.Empty
	}
	
	local sequenceTable = Anims.Reload(animVars)
	--local T = tick()
	for _, reloadFunction in pairs(sequenceTable) do
		if breakReload then
			break
		end
		reloadFunction()
		
		if (not magVisible) then
			Ammo.Value = 0
		end
		updateClipAmmo()
	end
	--print(tick() - T) --I divide the reloadTime by this number to get the animation speed
	
	if (not isCrawling) then
		if Running and (not S.canFireWhileRunning) then
			tweenJoint(LWeld, armC0[1], S.runningC1.leftArm, Sine, 0.4)
			tweenJoint(RWeld, armC0[2], S.runningC1.rightArm, Sine, 0.4)
			tweenJoint(Grip, nil, S.runningC1.Grip, Sine, 0.4)
		else
			tweenJoint(LWeld, armC0[1], S.unAimedC1.leftArm, Sine, 0.4)
			tweenJoint(RWeld, armC0[2], S.unAimedC1.rightArm, Sine, 0.4)
			tweenJoint(Grip, nil, S.unAimedC1.Grip, Sine, 0.4)
		end
	end
	
	for _, v in pairs(magTable) do --In case the reload animations was stopped mid way and there were still fake mags that weren't deleted
		v[1]:Destroy()
	end
end

function Reload()
	if Ammo.Value < (ClipSize.Value + 1) and (not Reloading) and StoredAmmo.Value > 0 then
		Firing = false
		ammoInClip = (ammoInClip == 0 and Ammo.Value or ammoInClip)
		Reloading = true
		lowerSpread()
		if Aimed then unAimGun(S.reloadSettings.Anim) end
		crossHair.Reload.Visible = true
		if Handle:FindFirstChild("ReloadSound") then Handle.ReloadSound:Play() end
		if S.reloadSettings.Anim then
			wait()
			animateReload()
		else
			local startReload = tick()
			local initialReloadTime = Ammo.Value == 0 and S.reloadSettings.Times.Empty or S.reloadSettings.Times.Loaded
			while true do
				if breakReload then break end
				if (tick() - startReload) >= initialReloadTime then break end
				RS.RenderStepped:wait()
			end
		end
		if (not breakReload) then
			newMag = false
			if StoredAmmo.Value >= ClipSize.Value then
				if ammoInClip > 0 then
					StoredAmmo.Value = StoredAmmo.Value - ((ClipSize.Value + 1) - ammoInClip)
					Ammo.Value = ClipSize.Value + 1
				else
					StoredAmmo.Value = StoredAmmo.Value - ClipSize.Value
					Ammo.Value = ClipSize.Value
				end
			elseif StoredAmmo.Value < ClipSize.Value and StoredAmmo.Value > 0 then
				Ammo.Value = StoredAmmo.Value
				StoredAmmo.Value = 0
			end
		end
		Reloading = false
		if Selected then
			ammoInClip = (breakReload and ammoInClip or 0)
			crossHair.Reload.Visible = false
		end
		breakReload = false
	end
	
	updateClipAmmo()
	updateStoredAmmo()
end

--------------------[ EXTERNAL DATA LOCATING FUNCTIONS ]-----------------------------

function removeElement(Table, Element) --removes the first instance of Element from Table
	for i, v in pairs(Table) do
		if v == Element then
			table.remove(Table, i)
			break
		end
	end
	return Table
end

function findFirstClass(Object, Class)
	local foundObject = nil
	for _, Obj in pairs(Object:GetChildren()) do
		if Obj.ClassName == Class then
			foundObject = Obj
			break
		end
	end
	return foundObject
end

function isIgnored(Obj, Table)
	for _,v in pairs(Table) do
		if Obj == v or Obj:IsDescendantOf(v) then
			return true
		end
	end
	return false
end

function GetHitSurfaceCFrame(HitPos,Obj)
	local SurfaceCF = {
		{"Back",Obj.CFrame * CF(0,0,Obj.Size.z)};
		{"Bottom",Obj.CFrame * CF(0,-Obj.Size.y,0)};
		{"Front",Obj.CFrame * CF(0,0,-Obj.Size.z)};
		{"Left",Obj.CFrame * CF(-Obj.Size.x,0,0)};
		{"Right",Obj.CFrame * CF(Obj.Size.x,0,0)};
		{"Top",Obj.CFrame * CF(0,Obj.Size.y,0)}
	}
	local ClosestDist = HUGE
	local ClosestSurface = nil
	for _,v in pairs(SurfaceCF) do
		local SurfaceDist = (HitPos - v[2].p).magnitude
		if SurfaceDist < ClosestDist then
			ClosestDist = SurfaceDist
			ClosestSurface = v
		end
	end
	return ClosestSurface[2]
end

function AdvRayCast(Origin, Direction, Dist, CustomIgnore)
	local NewIgnore = (CustomIgnore and CustomIgnore or Ignore)
	local NewRay = Ray.new(Origin, Direction * (Dist > 999 and 999 or Dist))
	local HitObj, HitPos = game.Workspace:FindPartOnRayWithIgnoreList(NewRay, NewIgnore)
	local LastPos = HitPos
	local FinalHitObj, FinalHitPos = nil, nil
	local RepTimes = math.floor(Dist / 999)
	if (not HitObj) and (Dist > 999) then
		for i = 0, RepTimes do
			local NewDist = (i == RepTimes and  (Dist - (LastPos - Origin).magnitude) or 999)
			local Ray2 = Ray.new(LastPos, Direction * NewDist)
			local HitObj2, HitPos2 = game.Workspace:FindPartOnRayWithIgnoreList(Ray2, NewIgnore)
			if i ~= RepTimes then
				if HitObj2 then
					FinalHitObj, FinalHitPos = HitObj2, HitPos2
					break
				end
			elseif i == RepTimes then
				FinalHitObj, FinalHitPos = HitObj2, HitPos2
			end
			LastPos = HitPos2
		end
		return FinalHitObj, FinalHitPos
	elseif HitObj or (Dist <= 999) then
		return HitObj, HitPos
	end
end

--------------------[ JUMPING ANIMATION ]---------------------------------------------

function onFall(initialVelocity)
	spawn(function()
		local velocityAlpha = math.max(math.min(initialVelocity / Humanoid.JumpPower, 1), 0)
		local startJumpPos = jumpAnim.Pos
		local startJumpRot = jumpAnim.Rot
		local endJumpPos = 0.04 * S.fallSettings.fallMultiplier * velocityAlpha
		local endJumpRot = RAD(4) * S.fallSettings.fallMultiplier * velocityAlpha
		local t0 = tick()
		while true do
			RS.Heartbeat:wait()
			local Alpha = math.min((tick() - t0) / 0.15, 1) * 90
			if onGround then break end
			jumpAnim.Pos = numLerp(startJumpPos, endJumpPos, Sine(Alpha))
			jumpAnim.Rot = numLerp(startJumpRot, endJumpRot, Sine(Alpha))
			if Alpha == 90 then break end
		end
		startJumpPos = endJumpPos
		startJumpRot = endJumpRot
		endJumpPos = -0.08 * S.fallSettings.fallMultiplier
		endJumpRot = -RAD(8) * S.fallSettings.fallMultiplier
		local X = 1
		while true do
			local dt = RS.Heartbeat:wait()
			X = X + (dt * 60) / X
			local Alpha = (X - 1) / 15
			if onGround then break end
			jumpAnim.Pos = numLerp(startJumpPos, endJumpPos, Alpha)
			jumpAnim.Rot = numLerp(startJumpRot, endJumpRot, Alpha)
		end
	end)
end

function onLand(fallDist)
	spawn(function()
		local animAlpha = math.min(fallDist, S.fallSettings.maxDist) * (2 / 3)
		local startJumpPos = jumpAnim.Pos
		local startJumpRot = jumpAnim.Rot
		local endJumpPos = animAlpha / 100 * S.fallSettings.landMultiplier * (runReady and 1 or 2)
		local endJumpRot = RAD(animAlpha) * S.fallSettings.landMultiplier * (runReady and 1 or 2)
		local t0 = tick()
		while true do
			RS.Heartbeat:wait()
			local Alpha = math.min((tick() - t0) / 0.2, 1)
			if (not onGround) then break end
			jumpAnim.Pos = numLerp(startJumpPos, endJumpPos, Alpha)
			jumpAnim.Rot = numLerp(startJumpRot, endJumpRot, Alpha)
			if Alpha == 1 then break end
		end
		t0 = tick()
		while true do
			RS.Heartbeat:wait()
			local Alpha = math.min((tick() - t0) / 0.3, 1) * 90
			if (not onGround) then break end
			jumpAnim.Pos = numLerp(endJumpPos, 0, Sine(Alpha))
			jumpAnim.Rot = numLerp(endJumpRot, 0, Sine(Alpha))
			if Alpha == 90 then break end
		end
	end)
end

function onHumanoidStateChanged(oldState, newState)
	if newState == Enum.HumanoidStateType.Freefall then
		onGround = false
		if S.fallAnimation then
			onFall(HRP.Velocity.Y)
			while HRP.Velocity.Y > 0 do RS.RenderStepped:wait() end
			startFallHeight = HRP.Position.Y
		end
	elseif oldState == Enum.HumanoidStateType.Freefall then
		onGround = true
		if S.fallAnimation then
			local fallDist = startFallHeight - HRP.Position.Y
			onLand(fallDist)
		end
	end
end
--------------------[ CAMERA STEADYING FUNCTIONS ]------------------------------------

function steadyCamera()
	scopeSteady.Text = "Steadying..."
	scopeSteady.TextColor3 = Color3.new(1, 1, 0)
	camSteady = true
	local originalSway = camSway
	local Increment = 1.5 / 0.6
	local X = 0
	while true do
		RS.RenderStepped:wait()
		local newX = X + Increment
		X = (newX > 90 and 90 or newX)
		if (not steadyKeyPressed) then break end
		camSway = numLerp(originalSway, 0, Sine(X))
		if X == 90 then break end
	end
	while steadyKeyPressed and Aimed do
		if currentSteadyTime > 0 then
			local NewSteadyTime = currentSteadyTime - 1
			currentSteadyTime = (NewSteadyTime < 0 and 0 or NewSteadyTime)
			camSway = 0
		elseif currentSteadyTime == 0 then
			break
		end
		RS.RenderStepped:wait()
	end
	camSteady = false
	spawn(function()
		local Increment = 1.5 / 0.25
		local X = 0
		while true do
			RS.RenderStepped:wait()
			local newX = X + Increment
			X = (newX > 90 and 90 or newX)
			if camSteady then break end
			camSway = numLerp(0, S.scopeSettings.camSwayOnBreath, 1 - COS(RAD(X)))
			if X == 90 then break end
		end
		Increment = 1.5 / S.scopeSettings.breathTime
		X = 0
		while true do
			RS.RenderStepped:wait()
			local newX = X + Increment
			X = (newX > 90 and 90 or newX)
			if camSteady then break end
			camSway = numLerp(S.scopeSettings.camSwayOnBreath, 1, Sine(X))
			if X == 90 then break end
		end
		--[[for X = 0, 90, 1.5 / 0.2 do
			local Alpha = 1 - COS(RAD(X))--math.log10(X) / math.log10(90)
			camSway = numLerp(0, 3, Alpha)
			RS.RenderStepped:wait()
		end]]
		--[[for X = 0, 90, 1.5 / S.scopeSettings.steadyTime do
			if camSteady then break end
			local Alpha = SIN(RAD(X))
			camSway = numLerp(3, 1, Alpha)
			RS.RenderStepped:wait()
		end]]
	end)
	retakeBreath()
end

function retakeBreath()
	scopeSteady.Text = "Re-taking Breath"
	scopeSteady.TextColor3 = Color3.new(1, 0, 0)
	takingBreath = true
	local Increment = S.scopeSettings.steadyTime / S.scopeSettings.breathTime
	while takingBreath do
		if currentSteadyTime < maxSteadyTime then
			local newSteadyTime = currentSteadyTime + Increment
			currentSteadyTime = (newSteadyTime > maxSteadyTime and maxSteadyTime or newSteadyTime)
		elseif currentSteadyTime >= maxSteadyTime then
			break
		end
		RS.RenderStepped:wait()
	end
	if takingBreath then
		scopeSteady.Text = "Hold "..convertKey(S.Keys.scopeSteady).." to Steady"
		scopeSteady.TextColor3 = Color3.new(1, 1, 0)
		takingBreath = false
	end
end

--------------------[ SPRINTING FUNCTIONS ]-------------------------------------------

function canRun(midRun)
	return ((Forward and (not Backward)) and
		Walking and (Stamina > 0) and Running and
		Selected and (midRun and true or onGround) and
		runReady and (S.canFireWhileRunning and true or (not Firing))
	)
end

function monitorStamina()
	Running = true
	if (not canRun(false)) then
		Running = false
		return
	end
	if Aimed then unAimGun(true) end
	if Stance == 1 or Stance == 2 then Stand() end
	if (not (Reloading and S.reloadSettings.Anim)) then
		if S.canFireWhileRunning then
			tweenJoint(LWeld, armC0[1], S.unAimedC1.leftArm, Sine, 0.4)
			tweenJoint(RWeld, armC0[2], S.unAimedC1.rightArm, Sine, 0.4)
			tweenJoint(Grip, nil, S.unAimedC1.Grip, Sine, 0.4)
		else
			tweenJoint(LWeld, armC0[1], S.runningC1.leftArm, Sine, 0.4)
			tweenJoint(RWeld, armC0[2], S.runningC1.rightArm, Sine, 0.4)
			tweenJoint(Grip, nil, S.runningC1.Grip, Sine, 0.4)
		end
	end
	crossOffset = 50
	while runKeyPressed do
		if canRun(true) then
			if onGround then
				local newStamina = Stamina - 1
				Stamina = (newStamina < 0 and 0 or newStamina)
			end
		else
			break
		end
		RS.RenderStepped:wait()
	end
	Running = false
	if (not Aimed) and (not (Reloading and S.reloadSettings.Anim)) and (not S.canFireWhileRunning) then
		crossOffset = 0
		tweenJoint(LWeld, armC0[1], S.unAimedC1.leftArm, Sine, 0.4)
		tweenJoint(RWeld, armC0[2], S.unAimedC1.rightArm, Sine, 0.4)
		tweenJoint(Grip, nil, S.unAimedC1.Grip, Sine, 0.4)
	end
	
	rechargeStamina()
end

function rechargeStamina()
	chargingStamina = true
	while ((not runKeyPressed) or (Stamina < maxStamina)) and (not Running) do
		if Stamina < maxStamina then
			local newStamina = Stamina + (S.sprintTime / S.staminaCoolTime)
			Stamina = (newStamina > maxStamina and maxStamina or newStamina)
		elseif Stamina >= maxStamina then
			break
		end
		RS.RenderStepped:wait()
	end
	chargingStamina = false
end

--------------------[ STANCE FUNCTIONS ]----------------------------------------------

function Stand(onDeselected)
	local LHip = Torso["Left Hip"]
	local RHip = Torso["Right Hip"]
	LLegWeld.Part1 = nil
	LHip.Part1 = LLeg
	RLegWeld.Part1 = nil
	RHip.Part1 = RLeg
	Stance = 0
	spreadStance = "Stand"
	baseSpread = S.spreadSettings[spreadZoom][spreadStance][spreadMotion]
	if S.stanceSettings.Anim and (not onDeselected) then
		spawn(function()
			local prevStanceSway = stanceSway
			local X = 0
			local Increment = 1.5 / S.stanceSettings.Speed
			while true do
				RS.RenderStepped:wait()
				local newX = X + Increment
				X = (newX > 90 and 90 or newX)
				if Stance ~= 0 then break end
				stanceSway = numLerp(prevStanceSway, 1, Sine(X))
				if X == 90 then break end
			end
		end)
		tweenJoint(ABWeld, CF(), nil, Sine, S.stanceSettings.Speed)
		tweenJoint(LLegWeld, legC0.Stand[1], nil, Sine, S.stanceSettings.Speed)
		tweenJoint(RLegWeld, legC0.Stand[2], nil, Sine, S.stanceSettings.Speed)
		tweenJoint(LHip, CF(-1, -1, 0) * CFANG(0, RAD(-90), 0), CF(-0.5, 1, 0) * CFANG(0, RAD(-90), 0), Sine, S.stanceSettings.Speed)
		tweenJoint(RHip, CF(1, -1, 0) * CFANG(RAD(-180), RAD(90), 0), CF(0.5, 1, 0) * CFANG(RAD(-180), RAD(90), 0), Sine, S.stanceSettings.Speed)
		tweenJoint(Root, CFANG(RAD(-90), 0, RAD(180)), nil, Sine, S.stanceSettings.Speed)
		tweenJoint(headWeld, CF(0, 1.5, 0), nil, Sine, S.stanceSettings.Speed)
	elseif onDeselected or (not S.stanceSettings.Anim) then
		ABWeld.C0 = CF()
		LLegWeld.C0 = legC0.Stand[1]
		RLegWeld.C0 = legC0.Stand[2]
		LHip.C0, LHip.C1 = CF(-1, -1, 0) * CFANG(0, RAD(-90), 0), CF(-0.5, 1, 0) * CFANG(0, RAD(-90), 0)
		RHip.C0, RHip.C1 = CF(1, -1, 0) * CFANG(RAD(-180), RAD(90), 0), CF(0.5, 1, 0) * CFANG(RAD(-180), RAD(90), 0)
		Root.C0 = CFANG(RAD(-90), 0, RAD(180))
		headWeld.C0 = CF(0, 1.5, 0)
	end
end

function Crouch()
	local LHip = Torso["Left Hip"]
	local RHip = Torso["Right Hip"]
	LHip.Part1 = nil
	LLegWeld.Part1 = LLeg
	RHip.Part1 = nil
	RLegWeld.Part1 = RLeg
	Stance = 1
	spreadStance = "Crouch"
	baseSpread = S.spreadSettings[spreadZoom][spreadStance][spreadMotion]
	if S.stanceSettings.Anim then
		spawn(function()
			local prevStanceSway = stanceSway
			local X = 0
			local Increment = 1.5 / S.stanceSettings.Speed
			while true do
				RS.RenderStepped:wait()
				local newX = X + Increment
				X = (newX > 90 and 90 or newX)
				if Stance ~= 1 then break end
				stanceSway = numLerp(prevStanceSway, 0.75, Sine(X))
				if X == 90 then break end
			end
		end)
		tweenJoint(ABWeld, CF(0, 0, -0.05), nil, Sine, S.stanceSettings.Speed)
		tweenJoint(LLegWeld, legC0.Crouch[1], nil, Sine, S.stanceSettings.Speed)
		tweenJoint(RLegWeld, legC0.Crouch[2], nil, Sine, S.stanceSettings.Speed)
		tweenJoint(LHip, CF(-1, -0.5, 0) * CFANG(0, RAD(-90), 0), CF(-0.5, 0.5, 1) * CFANG(0, RAD(-90), RAD(-90)), Sine, S.stanceSettings.Speed)
		tweenJoint(RHip, CF(1, -0.5, 0.25) * CFANG(RAD(-180), RAD(90), 0), CF(0.5, 0.5, 1) * CFANG(RAD(-180), RAD(90), 0), Sine, S.stanceSettings.Speed)
		tweenJoint(Root, CF(0, -1, 0) * CFANG(RAD(-90), 0, RAD(180)), nil, Sine, S.stanceSettings.Speed)
		tweenJoint(headWeld, CF(0, 1.5, 0), nil, Sine, S.stanceSettings.Speed)
	else
		ABWeld.C0 = CF(0, 0, -1 / 16)
		LLegWeld.C0 = legC0.Crouch[1]
		RLegWeld.C0 = legC0.Crouch[2]
		LHip.C0, LHip.C1 = CF(-1, -0.5, 0) * CFANG(0, RAD(-90), 0), CF(-0.5, 0.5, 1) * CFANG(0, RAD(-90), RAD(-90))
		RHip.C0, RHip.C1 = CF(1, -0.5, 0.25) * CFANG(RAD(-180), RAD(90), 0), CF(0.5, 0.5, 1) * CFANG(RAD(-180), RAD(90), 0)
		Root.C0 = CF(0, -1, 0) * CFANG(RAD(-90), 0, RAD(180))
		headWeld.C0 = CF(0, 1.5, 0)
	end
end

function Prone()
	local LHip = Torso["Left Hip"]
	local RHip = Torso["Right Hip"]
	LHip.Part1 = nil
	LLegWeld.Part1 = LLeg
	RHip.Part1 = nil
	RLegWeld.Part1 = RLeg
	Stance = 2
	spreadStance = "Prone"
	baseSpread = S.spreadSettings[spreadZoom][spreadStance][spreadMotion]
	if S.stanceSettings.Anim then
		spawn(function()
			local prevStanceSway = stanceSway
			local X = 0
			local Increment = 1.5 / S.stanceSettings.Speed
			while true do
				RS.RenderStepped:wait()
				local newX = X + Increment
				X = (newX > 90 and 90 or newX)
				if Stance ~= 2 then break end
				stanceSway = numLerp(prevStanceSway, 0.5, Sine(X))
				if X == 90 then break end
			end
		end)
		tweenJoint(ABWeld, CF(0, 0, -0.1), nil, Sine, S.stanceSettings.Speed)
		tweenJoint(LLegWeld, legC0.Prone[1], nil, Sine, S.stanceSettings.Speed)
		tweenJoint(RLegWeld, legC0.Prone[2], nil, Sine, S.stanceSettings.Speed)
		tweenJoint(Root, CF(0, -2.5, 1) * CFANG(RAD(180), 0, RAD(180)), nil, Sine, S.stanceSettings.Speed)
		tweenJoint(headWeld, CF(0, 1, 1) * CFANG(RAD(90), 0, 0), nil, Sine, S.stanceSettings.Speed)
	else
		ABWeld.C0 = CF(0, 0, -1 / 8)
		LLegWeld.C0 = legC0.Prone[1]
		RLegWeld.C0 = legC0.Prone[2]
		Root.C0 = CF(0, -2.5, 1) * CFANG(RAD(180), 0, RAD(180))
		headWeld.C0 = CF(0, 1, 1) * CFANG(RAD(90), 0, 0)
	end
end

function Dive()
	onGround = false
	local diveDirection = (HRP.CFrame * CFANG(S.diveSettings.Angle, 0, 0)).lookVector * S.walkSpeeds.Sprinting * S.diveSettings.Force
	local BF = Instance.new("BodyForce")
	BF.force = diveDirection + Vector3.new(0, playerMass * 196.2, 0)
	BF.Parent = HRP
	--[[spawn(function()
		HRP.Velocity = HRP.CFrame.lookVector * 60 + V3(0, 40, 0)
		wait(0.1)
		HRP.Velocity = HRP.CFrame.lookVector * 70 + V3(0, 30, 0)
		wait(0.4)
		HRP.Velocity = HRP.CFrame.lookVector * 30 + V3(0, -10, 0)
	end)]]
	delay(0.05, function()
		spawn(function()
			while true do
				local newRay = Ray.new(HRP.Position, V3(0, -3.1, 0))
				local H, _ = workspace:FindPartOnRayWithIgnoreList(newRay, Ignore)
				if H then
					onGround = true
					break
				end
				wait()
			end
		end)
		Prone()
		wait(0.1)
		BF:Destroy()
	end)
end

--------------------[ MOUSE FUNCTIONS ]-----------------------------------------------

function onMB1Down()
	MB1Down = true
	firstShot = true
	if fireFunction then
		fireFunction()
	end
end

function onMB1Up()
	MB1Down = false
	lowerSpread()
end

function onMB2Down()
	if S.aimSettings.holdToADS then
		if (not AimingIn) and (not Aimed) then
			AimingIn = true
			aimGun()
			AimingIn = false
		end
	else
		if Aimed then
			unAimGun()
		else
			aimGun()
		end
	end
end

function onMB2Up()
	if S.aimSettings.holdToADS then
		if (not AimingOut) and Aimed then
			AimingOut = true
			unAimGun()
			AimingOut = false
		end
	end
end

function onScrollUp()
	local newAimSensitivity = aimSensitivity + S.sensitivitySettings.Increment
	aimSensitivity = (
		newAimSensitivity < S.sensitivitySettings.Min and S.sensitivitySettings.Min or
		newAimSensitivity > S.sensitivitySettings.Max and S.sensitivitySettings.Max or
		newAimSensitivity
	)
	mouseSensitivity = (Aimed and aimSensitivity or mouseSensitivity)
	
	Sens.Text = "S: "..aimSensitivity
	if mainGUI:IsDescendantOf(game) then
		Sens.Visible = true
		local t0 = tick()
		lastSensUpdate = t0
		
		wait(0.3)
		
		if lastSensUpdate <= t0 then
			Sens.Visible = false
		end
	end
end

function onScrollDown()
	local newAimSensitivity = aimSensitivity - S.sensitivitySettings.Increment
	aimSensitivity = (
		newAimSensitivity < S.sensitivitySettings.Min and S.sensitivitySettings.Min or
		newAimSensitivity > S.sensitivitySettings.Max and S.sensitivitySettings.Max or
		newAimSensitivity
	)
	mouseSensitivity = (Aimed and aimSensitivity or mouseSensitivity)
	
	Sens.Text = "S: "..aimSensitivity
	if mainGUI:IsDescendantOf(game) then
		Sens.Visible = true
		local t0 = tick()
		lastSensUpdate = t0
		
		wait(0.3)
		
		if lastSensUpdate <= t0 then
			Sens.Visible = false
		end
	end
end

--------------------[ KEYBOARD FUNCTIONS ]--------------------------------------------

function keyDown(K)
	local Key = string.lower(K)
	
	if Key == S.Keys.lowerStance and S.canChangeStance then
		if (not Running) then
			if Stance == 0 then
				if S.stanceSettings.Stances.Crouch then
					Crouch()
				elseif S.stanceSettings.Stances.Prone then
					Prone()
				end
			elseif Stance == 1 then
				if S.stanceSettings.Stances.Prone then
					Prone()
				end
			end
		elseif S.dolphinDive then
			wait()
			if Humanoid:GetState() ~= Enum.HumanoidStateType.Freefall and (not UIS:IsKeyDown("Space")) and runReady then
				local tempConnection = Humanoid.Changed:connect(function()
					Humanoid.Jump = false
				end)
				runReady = false
				Dive()
				Running = false
				wait(S.diveSettings.rechargeTime)
				tempConnection:disconnect()
				runReady = true
			end
		end
	end
	
	if Key == S.Keys.raiseStance and S.canChangeStance then
		if (not Running) then
			if Stance == 2 then
				if S.stanceSettings.Stances.Crouch then
					Crouch()
				else
					Stand()
				end
			elseif Stance == 1 then
				Stand()
			end
		end
	end
	
	if Key == S.Keys.ADS then
		if S.aimSettings.holdToADS then
			if (not AimingIn) and (not Aimed) then
				AimingIn = true
				aimGun()
				AimingIn = false
			end
		else
			if Aimed then
				unAimGun()
			else
				aimGun()
			end
		end
	end
	
	if Key == S.Keys.selectFire and S.selectFire then
		if canSelectFire then
			canSelectFire = false
			rawFireMode = rawFireMode + 1
			modeGUI.Text = Modes[((rawFireMode - 1) % numModes) + 1]
			if modeGUI.Text == "AUTO" then
				fireFunction = autoFire
			elseif modeGUI.Text == "BURST" then
				fireFunction = burstFire
			elseif modeGUI.Text == "SEMI" then
				fireFunction = semiFire
			else
				fireFunction = nil
			end
			local speedAlpha = S.selectFireSettings.animSpeed / 0.6
			if S.selectFireSettings.GUI then
				spawn(function()
					fireSelect.Visible = true
					local prevRawFireMode = rawFireMode
					local Increment = 1.5 / (speedAlpha * 0.25)
					local X = 0
					wait(speedAlpha * 0.1)
					while true do
						RS.RenderStepped:wait()
						local newX = X + Increment
						X = (newX > 90 and 90 or newX)
						if prevRawFireMode ~= rawFireMode then break end
						updateModeLabels(rawFireMode - 1, rawFireMode, X)
						if X == 90 then break end
					end
					wait(speedAlpha * 0.25)
					fireSelect.Visible = false
				end)
			end
			if S.selectFireSettings.Animation and (not Aimed) and (not isRunning) and (not isCrawling) then
				spawn(function()
					local sequenceTable = {
						function()
							tweenJoint(RWeld2, nil, CFANG(0, RAD(5), 0), Sine, speedAlpha * 0.15)
							tweenJoint(LWeld, armC0[1], CF(0.1, 1, -0.3) * CFANG(RAD(-7), 0, RAD(-65)), Linear, speedAlpha * 0.15)
							wait(speedAlpha * 0.2)
						end;
						
						function()
							tweenJoint(LWeld, armC0[1], CF(0.1, 1, -0.3) * CFANG(RAD(-10), 0, RAD(-65)), Linear, speedAlpha * 0.1)
							wait(speedAlpha * 0.2)
						end;
						
						function()
							tweenJoint(RWeld2, nil, CF(), Sine, speedAlpha * 0.2)
							tweenJoint(LWeld, armC0[1], S.unAimedC1.leftArm, Sine, speedAlpha * 0.2)
							wait(speedAlpha * 0.2)
						end;
					}
					
					for _, F in pairs(sequenceTable) do
						if Aimed or isRunning or isCrawling or Reloading then
							break
						end
						F()
					end
				end)
			end
			if S.selectFireSettings.Animation or S.selectFireSettings.GUI then
				wait(S.selectFireSettings.animSpeed)
			end
			canSelectFire = true
		end
	end
	
	if Key == S.Keys.Reload then
		if (not Reloading) and (not isCrawling) then
			Reload()
		end
	end
	
	if Key == S.Keys.Sprint then
		runKeyPressed = true
		if runReady then
			if (not Idling) and Walking and (not Running) and (not Knifing) and (not (Aimed and S.guiScope and S.Keys.Sprint == S.Keys.scopeSteady)) then
				monitorStamina()
			end
		end
	end
	
	if Key == S.Keys.scopeSteady then
		steadyKeyPressed = true
		if Aimed and (not Aiming) then
			takingBreath = false
			steadyCamera()
		end
	end
	
	for _, PTable in pairs(Plugins.KeyDown) do
		if Key == string.lower(PTable.Key) then
			spawn(function()
				PTable.Plugin()
			end)
		end
	end
end

function keyUp(K)
	local Key = string.lower(K)
	
	if Key == S.Keys.ADS then
		if S.aimSettings.holdToADS then
			if (not AimingOut) and Aimed then
				AimingOut = true
				unAimGun()
				AimingOut = false
			end
		end
	end
	
	if Key == S.Keys.Sprint then
		runKeyPressed = false
		Running = false
		if (not chargingStamina) then
			rechargeStamina()
		end
	end
	
	if Key == S.Keys.scopeSteady then
		steadyKeyPressed = false
	end
	
	for _, PTable in pairs(Plugins.KeyUp) do
		if Key == string.lower(PTable.Key) then
			spawn(function()
				PTable.Plugin()
			end)
		end
	end
end

--------------------[ END FUNCTIONS ]-------------------------------------------------

--------------------------------------------------------------------------------------
--------------------[ PRE-CONNECTIONS ]-----------------------------------------------
--------------------------------------------------------------------------------------

local function updateAnimVars()
	wait()
	Forward = (UIS:IsKeyDown("W") or UIS:IsKeyDown("Up"))
	Backward = (UIS:IsKeyDown("S") or UIS:IsKeyDown("Down"))
	local Right = UIS:IsKeyDown("D")
	local Left = UIS:IsKeyDown("A")
	
	local walkingForward = (Forward and (not Backward))
	local walkingBackward = ((not Forward) and Backward)
	local walkingRight = (Right and (not Left))
	local walkingLeft = ((not Right) and Left)
	
	if (Forward or Backward or Right or Left) then
		Walking, Idling = true, false
		if (not Running) and (not Aimed) then
			spreadMotion = "Moving"
			baseSpread = S.spreadSettings[spreadZoom][spreadStance][spreadMotion]
		end
	elseif (not (Forward and Backward and Right and Left)) then
		Walking, Idling = false, true
		if (not Aimed) then
			spreadMotion = "Idling"
			baseSpread = S.spreadSettings[spreadZoom][spreadStance][spreadMotion]
		end
	end
	
	local newArmTilt = (
		((walkingForward or walkingBackward) and walkingRight) and 2.5 or
		((walkingForward or walkingBackward) and walkingLeft) and -2.5 or
		((not (walkingForward and walkingBackward)) and walkingRight) and 5 or
		((not (walkingForward and walkingBackward)) and walkingLeft) and -5 or 0
	)
	local newMoveAng = (
		(walkingForward and (not (walkingRight or walkingLeft))) and 0 or
		(walkingForward and walkingRight) and RAD(-45) or
		((not (walkingForward or walkingBackward)) and walkingRight) and RAD(-90) or
		(walkingBackward and walkingRight) and RAD(-135) or
		(walkingBackward and (not (walkingRight or walkingLeft))) and (moveAng < 0 and RAD(-180) or RAD(180)) or
		(walkingBackward and walkingLeft) and RAD(135) or
		((not (walkingForward or walkingBackward)) and walkingLeft) and RAD(90) or
		(walkingForward and walkingLeft) and RAD(45) or 0
	)
	
	local newAnimCode = math.random(-1e9, 1e9)
	animCode = newAnimCode
	local startTilt = armTilt
	local startAng = (ABS(moveAng) == RAD(180)) and (newMoveAng > 0 and RAD(180) or RAD(-180)) or moveAng
	local Increment = (startTilt == newArmTilt and 1.5 / 0.7 or 1.5 / (0.35 * ABS(startTilt - newArmTilt) / 5))
	local X = 0
	while true do
		RS.RenderStepped:wait()
		local newX = X + Increment
		X = (newX > 90 and 90 or newX)
		if animCode ~= newAnimCode then break end
		armTilt = numLerp(startTilt, newArmTilt, Sine(X))
		moveAng = numLerp(startAng, newMoveAng, Sine(X))
		if X == 90 then break end
	end
end

M2.KeyDown:connect(updateAnimVars)
M2.KeyUp:connect(updateAnimVars)
updateAnimVars()

--------------------------------------------------------------------------------------
--------------------[ TOOL SELECTION AND DESELECTION ]--------------------------------
--------------------------------------------------------------------------------------

function onEquipped()
	wait()
	if Humanoid.Health ~= 0 and (not Selected) and Gun.Parent == Char then
		Selected = true
		breakReload = false
		equipAnimPlaying = true
		
		math.randomseed(tick()) --This sets a new seed for the random function each time you select the gun
		
		--------------------[ FAILSAFE RESETING ]-------------------------------------
		
		for _, GM in pairs(ignoreModel:GetChildren()) do
			if GM.Name == "gunIgnore_"..Player.Name then
				GM:Destroy()
			end
		end
		
		for _, c in pairs(Connections) do
			c:disconnect()
		end
		
		Connections = {}
		
		--------------------[ REMOTE GUN SETUP ]--------------------------------------
		
		--[[local Vars = {
			ignoreModel = ignoreModel;
			Humanoid = Humanoid;
			Shoulders = Shoulders;
			Torso = Torso;
			Head = Head;
			armC0 = armC0;
			leftArmC1 = S.equipSettings.leftArmC1;
			rightArmC1 = S.equipSettings.rightArmC1;
			LArm = LArm;
			RArm = RArm;
			gunParts = gunParts;
			Handle = Handle;
		}
		gunIgnore, playerFolder, headWeld, headWeld2, animWeld, ABWeld, LWeld, RWeld, LWeld2, RWeld2, LLegWeld, RLegWeld, gunParts2 = gunSetup:InvokeServer(Vars)]]
		
		--------------------[ CREATING IGNORE MODELS ]--------------------------------
		
		gunIgnore = Instance.new("Model")
		gunIgnore.Name = "gunIgnore_"..Player.Name
		gunIgnore.Parent = ignoreModel
		
		--------------------[ MODIFYING THE PLAYER ]----------------------------------
		
		Player.CameraMode = Enum.CameraMode.LockFirstPerson
		Cam.CameraType = Enum.CameraType.Scriptable
		Cam.FieldOfView = 80
		UIS.MouseBehavior = Enum.MouseBehavior.LockCenter
		UIS.MouseIconEnabled = false
		
		local initialX, initialY = getYawPitch(Cam.CoordinateFrame)
		camAng = -VEC2(initialX, initialY)
		
		mainGUI.Parent = Player.PlayerGui
		
		setUpGUI()
		updateHealth()
		
		if S.selectFire then
			local currentMode = Modes[((rawFireMode - 1) % numModes) + 1]
			if currentMode == "AUTO" then
				fireFunction = autoFire
			elseif currentMode == "BURST" then
				fireFunction = burstFire
			elseif currentMode == "SEMI" then
				fireFunction = semiFire
			else
				fireFunction = nil
			end
		else
			if S.gunType.Semi then
				fireFunction = semiFire
			elseif S.gunType.Auto then
				fireFunction = autoFire
			elseif S.gunType.Burst then
				fireFunction = burstFire
			else
				fireFunction = nil
			end
		end
		
		changePlayerTrans(Char, 1)
		
		Humanoid.AutoRotate = false
		
		Shoulders.Right.Part1 = nil
		Shoulders.Left.Part1 = nil

		playerFolder = Instance.new("Model")
		playerFolder.Name = "playerFolder"
		playerFolder.Parent = gunIgnore
		
		local headBase = Instance.new("Part")
		headBase.Transparency = 1
		headBase.Name = "headBase"
		headBase.CanCollide = false
		headBase.FormFactor = Enum.FormFactor.Custom
		headBase.Size = V3(0.2, 0.2, 0.2)
		headBase.BottomSurface = Enum.SurfaceType.Smooth
		headBase.TopSurface = Enum.SurfaceType.Smooth
		headBase.Parent = playerFolder
		
		headWeld = Instance.new("Weld")
		headWeld.Part0 = Torso
		headWeld.Part1 = headBase
		headWeld.C0 = CF(0, 1.5, 0)
		headWeld.Parent = Torso
		
		headWeld2 = Instance.new("Weld")
		headWeld2.Part0 = headBase
		headWeld2.Part1 = Head
		headWeld2.Parent = headBase
		
		neckClone = Neck:Clone()
		
		--[[local stanceBase = Instance.new("Part")
		stanceBase.Transparency = 1
		stanceBase.Name = "stanceBase"
		stanceBase.CanCollide = false
		stanceBase.FormFactor = Enum.FormFactor.Custom
		stanceBase.Size = V3(0.2, 0.2, 0.2)
		stanceBase.BottomSurface = Enum.SurfaceType.Smooth
		stanceBase.TopSurface = Enum.SurfaceType.Smooth
		stanceBase.Parent = playerFolder
		
		stanceWeld = Instance.new("Weld")
		stanceWeld.Part0 = stanceBase
		stanceWeld.Part1 = Torso
		stanceWeld.Parent = stanceBase]]
		
		local animBase = Instance.new("Part")
		animBase.Transparency = 1
		animBase.Name = "animBase"
		animBase.CanCollide = false
		animBase.FormFactor = Enum.FormFactor.Custom
		animBase.Size = V3(0.2, 0.2, 0.2)
		animBase.BottomSurface = Enum.SurfaceType.Smooth
		animBase.TopSurface = Enum.SurfaceType.Smooth
		animBase.Parent = playerFolder
		
		animWeld = Instance.new("Weld")
		animWeld.Part0 = animBase
		animWeld.Part1 = headBase
		animWeld.Parent = animBase
		
		local ArmBase = Instance.new("Part")
		ArmBase.Transparency = 1
		ArmBase.Name = "ArmBase"
		ArmBase.CanCollide = false
		ArmBase.FormFactor = Enum.FormFactor.Custom
		ArmBase.Size = V3(0.2, 0.2, 0.2)
		ArmBase.BottomSurface = Enum.SurfaceType.Smooth
		ArmBase.TopSurface = Enum.SurfaceType.Smooth
		ArmBase.Parent = playerFolder
		
		ABWeld = Instance.new("Weld")
		ABWeld.Part0 = ArmBase
		ABWeld.Part1 = animBase
		ABWeld.Parent = ArmBase
		
		local LArmBase = Instance.new("Part")
		LArmBase.Transparency = 1
		LArmBase.Name = "LArmBase"
		LArmBase.CanCollide = false
		LArmBase.FormFactor = Enum.FormFactor.Custom
		LArmBase.Size = V3(0.2, 0.2, 0.2)
		LArmBase.BottomSurface = Enum.SurfaceType.Smooth
		LArmBase.TopSurface = Enum.SurfaceType.Smooth
		LArmBase.Parent = playerFolder
		
		local RArmBase = Instance.new("Part")
		RArmBase.Transparency = 1
		RArmBase.Name = "RArmBase"
		RArmBase.CanCollide = false
		RArmBase.FormFactor = Enum.FormFactor.Custom
		RArmBase.Size = V3(0.2, 0.2, 0.2)
		RArmBase.BottomSurface = Enum.SurfaceType.Smooth
		RArmBase.TopSurface = Enum.SurfaceType.Smooth
		RArmBase.Parent = playerFolder
		
		LWeld = Instance.new("Weld")
		LWeld.Name = "LWeld"
		LWeld.Part0 = ArmBase
		LWeld.Part1 = LArmBase
		LWeld.C0 = armC0[1]
		LWeld.C1 = S.equipSettings.leftArmC1
		LWeld.Parent = ArmBase
		
		RWeld = Instance.new("Weld")
		RWeld.Name = "RWeld"
		RWeld.Part0 = ArmBase
		RWeld.Part1 = RArmBase
		RWeld.C0 = armC0[2]
		RWeld.C1 = S.equipSettings.rightArmC1
		RWeld.Parent = ArmBase
		
		LWeld2 = Instance.new("Weld")
		LWeld2.Name = "LWeld"
		LWeld2.Part0 = LArmBase
		LWeld2.Part1 = LArm
		LWeld2.Parent = LArmBase
		
		RWeld2 = Instance.new("Weld")
		RWeld2.Name = "RWeld"
		RWeld2.Part0 = RArmBase
		RWeld2.Part1 = RArm
		RWeld2.Parent = RArmBase
		
		LLegWeld = Instance.new("Weld")
		LLegWeld.Name = "LLegWeld"
		LLegWeld.Part0 = Torso
		LLegWeld.Part1 = nil
		LLegWeld.C0 = CF(-0.5, -2, 0)
		LLegWeld.Parent = Torso
		
		RLegWeld = Instance.new("Weld")
		RLegWeld.Name = "RLegWeld"
		RLegWeld.Part0 = Torso
		RLegWeld.Part1 = nil
		RLegWeld.C0 = CF(0.5, -2, 0)
		RLegWeld.Parent = Torso
		
		if S.playerArms then
			armModel = Instance.new("Model", workspace.FilteringEnabled and playerFolder or Cam)
			
			fakeLArm = LArm:Clone()
			fakeLArm.Parent = armModel
			fakeLArm.Transparency = S.fakeArmSettings.Transparency
			fakeLArm.CanCollide = false
			fakeLArm.Size = S.fakeArmSettings.armSize
			fakeLArm:BreakJoints()
			
			--LArm.Transparency = 1
			
			local fakeLWeld = Instance.new("Weld")
			fakeLWeld.Part0 = fakeLArm
			fakeLWeld.Part1 = LArm
			fakeLWeld.Parent = fakeLArm
			
			fakeRArm = RArm:Clone()
			fakeRArm.Parent = armModel
			fakeRArm.Transparency = S.fakeArmSettings.Transparency
			fakeRArm.CanCollide = false
			fakeRArm.Size = S.fakeArmSettings.armSize
			fakeRArm:BreakJoints()
			
			--RArm.Transparency = 1
			
			local fakeRWeld = Instance.new("Weld")
			fakeRWeld.Part0 = fakeRArm
			fakeRWeld.Part1 = RArm
			fakeRWeld.Parent = fakeRArm
			
			Instance.new("Humanoid", armModel)
			
			if S.fakeArmSettings.characterMeshes then
				for _,Obj in pairs(Char:GetChildren()) do
					if Obj:IsA("CharacterMesh") then
						Obj:Clone().Parent = armModel
					end
				end
			end
			for _,Obj in pairs(Char:GetChildren()) do
				if Obj:IsA("Shirt") then
					Obj:Clone().Parent = armModel
				end
			end
		else
			armTable = createArms()
			if workspace.FilteringEnabled then
				armTable[1].Model.Parent = playerFolder
				armTable[2].Model.Parent = playerFolder
			else
				armTable[1].Model.Parent = Cam--playerFolder
				armTable[2].Model.Parent = Cam--playerFolder
			end
			
			fakeLArm = armTable[1].armPart
			
			--LArm.Transparency = 1
			
			local fakeLWeld = Instance.new("Weld")
			fakeLWeld.Part0 = fakeLArm
			fakeLWeld.Part1 = LArm
			fakeLWeld.Parent = fakeLArm
			
			fakeRArm = armTable[2].armPart
			
			--RArm.Transparency = 1
			
			local fakeRWeld = Instance.new("Weld")
			fakeRWeld.Part0 = fakeRArm
			fakeRWeld.Part1 = RArm
			fakeRWeld.Parent = fakeRArm
		end
		
		--------------------[ MODIFYING THE GUN ]-------------------------------------
		
		for _, Tab in pairs(gunParts) do
			local Weld = Instance.new("Weld")
			Weld.Name = "MainWeld"
			Weld.Part0 = Handle
			Weld.Part1 = Tab.Obj
			Weld.C0 = Tab.Obj.weldCF.Value
			Weld.Parent = Handle
			Tab.Weld = Weld
		end
		
		Grip = RArm:WaitForChild("RightGrip")
		
		local handleCF = Torso.CFrame * CF(0, 0.5, 0) * armC0[2] * S.aimedC1.rightArm:inverse() * Grip.C0
		local handleOffset = AimPart.CFrame:toObjectSpace(Handle.CFrame)
		aimedGripCF = ((Torso.CFrame * CF(headOffset.X, headOffset.Y, 0)) * handleOffset):toObjectSpace(handleCF)
		
		Grip.C1 = S.equipSettings.GripC1
		
		--------------------[ RUNNING PLUGINS ]---------------------------------------
		
		for _, Plugin in pairs(Plugins.OnEquipped) do
			spawn(function()
				Plugin()
			end)
		end
		
		--------------------[ GETTING PLAYER MASS ]-----------------------------------
		
		local connectedParts = HRP:GetConnectedParts(true)
		for _, v in pairs(connectedParts) do
			if v:IsA("BasePart") then
				playerMass = playerMass + v:GetMass()
			end
		end
		
		--------------------[ CONNECTIONS ]-------------------------------------------
		
		INSERT(Connections, Humanoid.Died:connect(function()
			onUnequipped(true)
		end))
		
		INSERT(Connections, Humanoid.Jumping:connect(function()
			if Stance ~= 0 then
				Stand()
			end
		end))
		
		INSERT(Connections, Humanoid.StateChanged:connect(onHumanoidStateChanged))
		
		INSERT(Connections, Humanoid.HealthChanged:connect(updateHealth))
		
		INSERT(Connections, M2.Button1Down:connect(onMB1Down))
		
		INSERT(Connections, M2.Button1Up:connect(onMB1Up))
		
		INSERT(Connections, M2.Button2Down:connect(onMB2Down))
		
		INSERT(Connections, M2.Button2Up:connect(onMB2Up))
		
		INSERT(Connections, M2.KeyDown:connect(keyDown))
		
		INSERT(Connections, M2.KeyUp:connect(keyUp))
		
		if S.sensitivitySettings.scrollToChange then
			INSERT(Connections, M2.WheelForward:connect(onScrollUp))
			INSERT(Connections, M2.WheelBackward:connect(onScrollDown))
		end
		
		if S.AutoKnife then
			INSERT(Connections, RS.Stepped:connect(function()
				local H, P = AdvRayCast(Head.CFrame.p, Head.CFrame.lookVector, S.AutoKnifeDist, nil)
				if H then
					local HitHuman = findFirstClass(H.Parent, "Humanoid")
					if HitHuman and isEnemy(HitHuman) and HitHuman.Health ~= 0 then
						Knife()
					end
				end
			end))
		end
		
		INSERT(Connections, UIS.InputChanged:connect(function(inputObj)
			if inputObj.UserInputType == Enum.UserInputType.MouseMovement then
				local rawCamAng = camAng - (VEC2(RAD(inputObj.Delta.x), RAD(inputObj.Delta.y)) * mouseSensitivity * 0.25)
				camAng = VEC2(rawCamAng.x, (rawCamAng.y > RAD(80) and RAD(80) or rawCamAng.y < RAD(-80) and RAD(-80) or rawCamAng.y))
				
				desiredXOffset = math.min(math.max(inputObj.Delta.x, -S.momentumSettings.maxInput), S.momentumSettings.maxInput)
				desiredYOffset = math.min(math.max(inputObj.Delta.y, -S.momentumSettings.maxInput), S.momentumSettings.maxInput)
			end
		end))
		
		INSERT(Connections, M2.Idle:connect(function(inputObj)
			desiredXOffset = 0
			desiredYOffset = 0
		end))
		
		INSERT(Connections, RS.Stepped:connect(function()
			if tick() - lastBeat > (Humanoid.Health / 75) then
				lastBeat = tick()
				HUD.Health.Tray.Beat:TweenPosition(
					UDim2.new(0, -21, 0, 0),
					Enum.EasingDirection.Out,
					Enum.EasingStyle.Linear,
					0.7 - ((100 - Humanoid.Health) / 400),
					false,
					function()
						HUD.Health.Tray.Beat.Position = UDim2.new(1, 0, 0, 0)
					end
				)
			end
		end))
		
		INSERT(Connections, RS.RenderStepped:connect(function()
			--Main animation
			local animC0, animC1 = getAnimCF()
			animWeld.C0 = animC0
			animWeld.C1 = animC1
			
			--Camera updating
			renderCamera()
		end))
		
		--------------------[ ANIMATE GUN ]-------------------------------------------
		
		tweenJoint(LWeld, nil, S.unAimedC1.leftArm, Sine, S.equipSettings.Time)
		tweenJoint(RWeld, nil, S.unAimedC1.rightArm, Sine, S.equipSettings.Time)
		tweenJoint(Grip, nil, S.unAimedC1.Grip, Sine, S.equipSettings.Time)
		spawn(function()
			local T = tick()
			while true do
				if tick() - T > S.equipSettings.Time then break end
				if (not Selected) then break end
				wait()
			end
			equipAnimPlaying = false
		end)
		
		Animate()
	end
end

function onUnequipped(deleteTool)
	if Selected then
		Selected = false
		
		breakReload = true
		
		--------------------[ RUNNING PLUGINS ]---------------------------------------
		
		for _, Plugin in pairs(Plugins.OnUnEquipped) do
			spawn(function()
				Plugin()
			end)
		end
		
		--------------------[ MODIFYING THE PLAYER ]----------------------------------
		
		Cam.FieldOfView = 70
		Cam.CameraType = Enum.CameraType.Custom
		
		UIS.MouseBehavior = Enum.MouseBehavior.Default
		UIS.MouseIconEnabled = true
		
		Player.CameraMode = Enum.CameraMode.Classic
		
		if armTable then
			armTable[1].Model:Destroy()
			armTable[2].Model:Destroy()
		elseif armModel then
			armModel:Destroy()
		end
		
		LLegWeld:Destroy()
		RLegWeld:Destroy()
		
		changePlayerTrans(Char, 0)
		
		mainGUI.Parent = script
		
		Shoulders.Right.Part1 = RArm
		Shoulders.Left.Part1 = LArm
		
		neckClone.Parent = Torso
		headWeld:Destroy()
		
		Humanoid.WalkSpeed = 16
		Humanoid.AutoRotate = true
		
		--------------------[ RESETING THE TOOL ]-------------------------------------
		
		gunIgnore:Destroy()
		
		mouseSensitivity = S.sensitivitySettings.Default
		
		MB1Down = false
		
		playerMass = 0
		
		Aimed = false
		
		camOffsets = {
			guiScope = {
				Rot = V3();
			};
			Reload = {
				Rot = V3();
				Code = nil;
			};
			Recoil = {
				Rot = V3();
				Code = nil;
			};
		}
		
		recoilAnim = {
			Pos = V3();
			Rot = V3();
			Code = nil;
		}

		--Setting the aim variables to unaimed
		spreadZoom = "unAimed"
		scopeMain.Visible = false
		scopeSteady.Visible = false
		aimAlpha = 0
		aimHeadOffset = 0
		jumpAnimMultiplier = 1
		translationDivisor = 7
		rotationMultiplier = S.momentumSettings.Amplitude.unAimed
		armTiltMultiplier = 1
		Scope.BackgroundTransparency = 1
		if S.guiScope then
			spawn(function()
				for _, Obj in pairs(Gun:GetChildren()) do
					if Obj:IsA("BasePart") then
						Obj.LocalTransparencyModifier = 0
					end
				end
			end)
		end
		
		onGround = true
		
		for _, Tab in pairs(gunParts) do
			Tab.Weld:Destroy()
			Tab.Weld = nil
		end
		
		for _,c in pairs(Connections) do
			c:disconnect()
		end
		
		Connections = {}
		
		if deleteTool then
			Cam:ClearAllChildren()
			Gun:Destroy()
		end
		
		wait() --This is here in case you dolphin dived and deselected the tool instantly
		
		if S.stanceSettings.standOnDeselect and Stance ~= 0 then
			crawlCamRot = 0
			isCrawling = false
			stanceSway = 1
			spreadStance = "Stand"
			Stand(true)
		end
		baseSpread = S.spreadSettings[spreadZoom][spreadStance][spreadMotion]
	end
end

Gun.Equipped:connect(onEquipped)
Gun.Unequipped:connect(function() onUnequipped(false) end)

--------------------------------------------------------------------------------------
--------------------[ END PROGRAM ]---------------------------------------------------
--------------------------------------------------------------------------------------]]></ProtectedString>
			</Properties>
			<Item class="IntValue" referent="RBX78A1A18AC56B429F94B9BC586087E50E">
				<Properties>
					<string name="Name">ignoreCode</string>
					<int name="Value">0</int>
				</Properties>
			</Item>
			<Item class="Folder" referent="RBX618562E2558A4F8BB8494429ED550D8A">
				<Properties>
					<string name="Name">Server_Scripts</string>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX25370B261B614B748E23032AFC18518A">
				<Properties>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Spring</string>
					<string name="ScriptGuid"></string>
					<ProtectedString name="Source"><![CDATA[local Spring = {}

function Spring.new(Initial)
	local t0 = tick()
	local p0 = Initial or 0
	local v0 = Initial and Vector3.new() or 0
	local t	= Initial or 0
	local d	= 1
	local s	= 1

	local function positionVelocity(Tick)
		local x	= Tick - t0
		local c0 = p0 - t
		if s == 0 then
			return p0, 0
		elseif d < 1 then
			local c	= math.sqrt(1 - d ^ 2)
			local c1 = (v0 / s + d * c0) / c
			local co = math.cos(c * s * x)
			local si = math.sin(c * s * x)
			local e	= math.exp(d * s * x)
			local p = t + (c0 * co + c1 * si) / e
			local v = s * ((c * c1 - d * c0) * co - (c * c0 + d * c1) * si) / e
			return p, v
		else
			local c1 = v0 / s + c0
			local e	= math.exp(s * x)
			local p = t + (c0 + c1 * s * x) / e
			local v = s * (c1 - c0 - c1 * s * x) / e
			return p, v
		end
	end

	return setmetatable(
		{
			accelerate = function(_, acceleration)
				local T = tick()
				local p, v = positionVelocity(T)
				p0 = p
				v0 = v + acceleration
				t0 = T
			end;
		},
		{
			__index = function(_, index)
				if index == "value" or index == "position" or index == "p" then
					local p, v = positionVelocity(tick())
					return p
				elseif index == "velocity" or index == "v" then
					local p, v = positionVelocity(tick())
					return v
				elseif index == "acceleration" or index == "a" then
					local x	= tick() - t0
					local c0 = p0 - t
					if s == 0 then
						return 0
					elseif d < 1 then
						local c = math.sqrt(1 - d ^ 2)
						local c1 = (v0 / s + d * c0) / c
						local cs = (c0 * d ^ 2 - 2 * c * d * c1 - c0 * c ^ 2) * math.cos(c * s * x)
						local sn = (c1 * d ^ 2 + 2 * c * d * c0 - c1 * c ^ 2) * math.sin(c * s * x)
						return s ^ 2 *(cs + sn) / math.exp(d * s * x)
					else
						local c1 = v0 / s + c0
						return s ^ 2 * (c0 - 2 * c1 + c1 * s * x) / math.exp(s * x)
					end
				elseif index == "target" or index == "t" then
					return t
				elseif index == "damper" or index == "d" then
					return d
				elseif index == "speed" or index == "s" then
					return s
				elseif index == "magnitude" or index == "m" then
					local p, v = positionVelocity(tick())
					return p.magnitude
				else
					error(index.." is not a valid member of spring", 0)
				end
			end;
			
			__newindex = function(_, index, value)
				local T = tick()
				if index == "value" or index == "position" or index == "p" then
					local p, v = positionVelocity(T)
					p0, v0 = value, v
				elseif index == "velocity" or index == "v" then
					local p, v = positionVelocity(T)
					p0, v0 = p, value
				elseif index == "acceleration" or index == "a" then
					local p, v = positionVelocity(T)
					p0, v0 = p, v + value
				elseif index == "target" or index == "t" then
					p0, v0 = positionVelocity(T)
					t = value
				elseif index == "damper" or index == "d" then
					p0, v0 = positionVelocity(T)
					d = value < 0 and 0 or value < 1 and value or 1
				elseif index == "speed" or index == "s" then
					p0, v0 = positionVelocity(T)
					s = value < 0 and 0 or value
				else
					error(index.." is not a valid member of spring", 0)
				end
				t0 = T
			end;
		}
	)
end

return Spring]]></ProtectedString>
				</Properties>
			</Item>
			<Item class="ModuleScript" referent="RBX93D2A95BCC274DEDBB33A2A6E95435A4">
				<Properties>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">Particle</string>
					<string name="ScriptGuid"></string>
					<ProtectedString name="Source"><![CDATA[---------------------------------------------------------------------------------------------------------
--[[
	
	AUTHOR: TurboFusion
	DATE CREATED: 4/8/16
	
	DESCRIPTION: This is a module that creates gui particles which simulates physical parts
	
	function Particle.new(Prop)
	
	ARGUMENT: Table {
		Table rayIgnore;	--This table contains objects that the visiblity checking ray should ignore (DEFAULT: {})
		Color3 Color;		--This color3 value is what color the particle will be (DEFAULT: Color3.new(1, 1, 1))
		float Length;		--This float value is how long the particle will be in world space (DEFAULT: 1)
		float Width;		--This float value is how wide the particle will be in world space (DEFAULT: 1)
		Vector3 p0;			--This Vector3 value is the initial position of the particle (Must exist)
		Vector3 v0;			--This Vector3 value is the initial velocity of the particle (Must exist)
		Vector3 a0;			--This Vector3 value is the initial acceleration of the particle (Must exist)
	}
	
	RETURNS: Metatable
	
	EDITABLE PROPERTIES:
		Particle.t = float Time --Sets a time value in seconds which is used to figure out where to render the particle (t=0 will be initial conditions)
		
	READ-ONLY PROPERTIES:
		Particle.p or Particle.position --Returns a world position of the particle
		Particle.v or Particle.velocity --Returns a world velocity of the particle
		Particle.obj or Particle.object --Returns the particle frame itself
		
	METHODS:
		Particle:delete() --This method deletes the particle and stops rendering calculations (use this instead of directly destroying the frame itself)
		
	EXAMPLE CODE:
		local t = 0
		local Particle = Particle.new(
			{
				Color = Color3.new(1, 1, 0);
				Width = 1;
				p0 = Vector3.new();
				v0 = Vector3.new(0, 100, 100);
				a0 = Vector3.new(0, -196.2, 0);
			}
		)
		Particle.obj.Parent = screenGui
		while true do
			Particle.t = t
			t = t + 1/30
			wait()
		end

--]]
---------------------------------------------------------------------------------------------------------

local Particle = {}

function Particle.new(Prop)
	----------[ CONSTANTS ]--------------------
	
	local Cam = workspace.CurrentCamera
	local rayIgnore = Prop.rayIgnore or {} --If the property doesn't exist, then set it to it's default
	local Color = Prop.Color or Color3.new(1, 1, 1)
	local Length = Prop.Length or 1
	local Width = Prop.Width or 1
	local p0 = Prop.p0 or error("Particle.new requires a p0 (origin position) property!", 0) --Give an error message if you don't this
	local v0 = Prop.v0 or error("Particle.new requires a v0 (initial velocity) property!", 0)
	local a0 = Prop.a0 or error("Particle.new requires an a0 (initial acceleration) property!", 0)
	
	----------[ VARIABLES ]--------------------
	
	local Deleted = false
	local p = p0 --Set the position, velocity, and acceleration as the intial conditions
	local v = v0
	local a = a0
	local t = 0
	
	----------[ FUNCTIONS ]--------------------
	
	local function worldWidthToScreenWidth(Width, Depth) --A function I made that gives you a screen width given a world width and depth
		local Center = Cam.CoordinateFrame * CFrame.new(0, 0, -Depth)
		local wp1 = (Center * CFrame.new(0, Width / 2, 0)).p
		local wp2 = (Center * CFrame.new(0, -Width / 2, 0)).p
		local sp1 = Cam:WorldToScreenPoint(wp1) --Use the WorldToScreenPoint method of the camera to get the screen width from the world width
		local sp2 = Cam:WorldToScreenPoint(wp2)
		return (sp1 - sp2).magnitude
	end
	
	----------[ MAIN PROGRAM ]-----------------
	
	local Container = Instance.new("Frame")
	Container.BackgroundTransparency = 1
	Container.Position = UDim2.new()
	Container.Size = UDim2.new()
	local Line = Instance.new("Frame")
	Line.BackgroundColor3 = Color
	Line.BorderSizePixel = 0
	Line.Position = UDim2.new()
	Line.Size = UDim2.new()
	Line.Parent = Container
	
	return setmetatable(
		{
			delete = function() --This function safely removes the particle
				Container:Destroy()
				Deleted = true
			end
		},
		{
			__index = function(_, Index)
				if Index == "p" or Index == "position" then --Return the world position of the particle
					return (Deleted and nil or p)
				elseif Index == "v" or Index == "velocity" then --Return the world velocity of the particle
					return (Deleted and nil or v)
				elseif Index == "obj" or Index == "object" then --Return the particle frame itself
					return (Deleted and nil or Container)
				else
					error(Index.." is not a member of Particle!", 0) --Give an error message if any other index is called
				end
			end;
			
			__newindex = function(_, Index, Value)
				if Index == "t" or Index == "time" and (not Deleted) then --Render the particle given a time value
					t = Value
					p = p0 + (v0 * t) + (0.5 * a0 * t * t) --update the position given the time
					v = v0 + (a0 * t) --update the velocity given the time
					
					local testRay1 = Ray.new(Cam.CoordinateFrame.p, (p + (v.unit * Length) / 2) - Cam.CoordinateFrame.p)
					local testRay2 = Ray.new(Cam.CoordinateFrame.p, (p - (v.unit * Length) / 2) - Cam.CoordinateFrame.p)
					local H1, _ = workspace:FindPartOnRayWithIgnoreList(testRay1, rayIgnore)
					local H2, _ = workspace:FindPartOnRayWithIgnoreList(testRay2, rayIgnore)
					
					if H1 and H2 then
						Line.Visible = false
					else
						local face1 = Cam:WorldToScreenPoint(p + (v.unit * Length) / 2) --Get the 2 endpoints of the particle in screen space
						local face2 = Cam:WorldToScreenPoint(p - (v.unit * Length) / 2)
						local Center, isVisible = Cam:WorldToScreenPoint(p) --Get the center of the particle in screen space
						
						local screenLength = (face1 - face2).magnitude
						local screenWidth = worldWidthToScreenWidth(Width, Center.Z)
						local Ang = math.atan2(face1.Y - face2.Y, face1.X - face2.X) --Get the angle the particle needs to be at in order to line up
						
						Line.Position = UDim2.new(0, 0, 0, -screenWidth / 2)
						Line.Size = UDim2.new(1, 0, 0, screenWidth)
						Line.Visible = isVisible --Make the particle invisible if the world point isn't on screen
						
						Container.Position = UDim2.new(
							0,
							face2.X + (math.cos(Ang) - 1) * screenLength / 2, --Yay trig!
							0,
							face2.Y + math.sin(Ang) * screenLength / 2
						)
						Container.Size = UDim2.new(0, screenLength, 0, 0)
						Container.Rotation = math.deg(Ang)
					end
				else
					error(Index.." is not a member of Particle!", 0) --Give an error message if any other index is being changed
				end
			end
		}
	)
end

return Particle]]></ProtectedString>
				</Properties>
			</Item>
			<Item class="ScreenGui" referent="RBX35D446F7361642B2B3A94EF905CDBCDC">
				<Properties>
					<string name="Name">mainGUI</string>
				</Properties>
				<Item class="ImageLabel" referent="RBX6C8270576D1A4B04B342F458DF765CDF">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4288914085</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<Content name="Image"><url>rbxassetid://483916271</url></Content>
						<Color3 name="ImageColor3">4294967295</Color3>
						<Vector2 name="ImageRectOffset">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Vector2 name="ImageRectSize">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<float name="ImageTransparency">0</float>
						<string name="Name">hitMarker</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0.400000006</XS>
							<XO>3</XO>
							<YS>0.5</YS>
							<YO>-95</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<token name="ScaleType">0</token>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>156</XO>
							<YS>0</YS>
							<YO>156</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<Rect2D name="SliceCenter">
							<min>
								<X>0</X>
								<Y>0</Y>
							</min>
							<max>
								<X>0</X>
								<Y>0</Y>
							</max>
						</Rect2D>
						<bool name="Visible">false</bool>
						<int name="ZIndex">10</int>
					</Properties>
					<Item class="NumberValue" referent="RBX707200CA545141398163B78DFF24AB3C">
						<Properties>
							<string name="Name">lastMark</string>
							<double name="Value">0</double>
						</Properties>
					</Item>
				</Item>
				<Item class="Frame" referent="RBXF62DE368200C483B90609CB7F7796334">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">0</float>
						<Color3 name="BorderColor3">4278190080</Color3>
						<int name="BorderSizePixel">0</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">crossHair</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>-18</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="ImageLabel" referent="RBX939C9BA8521E4F0BACDCDB0D60B5DE57">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=68308747</url></Content>
							<Color3 name="ImageColor3">4294967295</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<string name="Name">ImageLabel</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>-150</XO>
								<YS>0</YS>
								<YO>-150</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<token name="ScaleType">0</token>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>300</XO>
								<YS>0</YS>
								<YO>300</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<bool name="Visible">false</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
					<Item class="TextLabel" referent="RBX032E6CBEE02E4DAB98BAA961AE0E4A9D">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">4</token>
							<token name="FontSize">6</token>
							<string name="Name">Reload</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>-50</XO>
								<YS>0</YS>
								<YO>70</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>100</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">RELOADING...</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0.5</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">2</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX3A9469DC49CC43A58AA8E3738BF4169C">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">true</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">C</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>-2</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>4</XO>
								<YS>0</YS>
								<YO>500</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX12D7BC0B492D4B02B8980A4761C0401B">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4284769380</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">5</token>
								<string name="Name">Line</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>-1</XO>
									<YS>0</YS>
									<YO>10</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>2</XO>
									<YS>0</YS>
									<YO>15</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX89475386248B4523AE83993FD54FEF4B">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">true</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">A</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>-2</XO>
								<YS>0</YS>
								<YO>-500</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>4</XO>
								<YS>0</YS>
								<YO>500</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX848AE4C9BB9642E6B77DA5EBDBFC0410">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4284769380</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">5</token>
								<string name="Name">Line</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>-1</XO>
									<YS>1</YS>
									<YO>-25</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>2</XO>
									<YS>0</YS>
									<YO>15</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX2FC1DB0BC81D4B09B7F8E919C230DE3B">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">true</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">B</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>-2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>500</XO>
								<YS>0</YS>
								<YO>4</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX7380C5B5593643C2A7724F33949E9248">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4284769380</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">5</token>
								<string name="Name">Line</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>10</XO>
									<YS>0.5</YS>
									<YO>-1</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>15</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX37BB498147324A0EAACB79D767C134EF">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">true</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">D</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>-500</XO>
								<YS>0</YS>
								<YO>-2</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>500</XO>
								<YS>0</YS>
								<YO>4</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX635A04A09D1A47B1A0C9349C60577589">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4284769380</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">3</token>
								<token name="FontSize">5</token>
								<string name="Name">Line</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>1</XS>
									<XO>-25</XO>
									<YS>0.5</YS>
									<YO>-1</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>15</XO>
									<YS>0</YS>
									<YO>2</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text"></string>
								<Color3 name="TextColor3">4279970357</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="Frame" referent="RBXD1FBDE5CA93748478D55527FF546C7B0">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">fireSelect</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>0</XO>
							<YS>0.5</YS>
							<YO>-18</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX1880DAB7B6854B959E55D1BDF103A3C6">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Modes</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="ImageLabel" referent="RBXCC3AD35954164880AC6ACB8DE2977AF4">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=55754953</url></Content>
							<Color3 name="ImageColor3">4294967295</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0.5</float>
							<string name="Name">Circle</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>-60</XO>
								<YS>0</YS>
								<YO>-60</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<token name="ScaleType">0</token>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>120</XO>
								<YS>0</YS>
								<YO>120</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="ImageLabel" referent="RBXBAF11C1B33D64C13BDD3C118FD7BB780">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>http://www.roblox.com/asset/?id=126877530</url></Content>
							<Color3 name="ImageColor3">4294967295</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0</float>
							<string name="Name">Arrow</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>-20</XO>
								<YS>0</YS>
								<YO>-140</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<token name="ScaleType">0</token>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>40</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
				</Item>
				<Item class="TextLabel" referent="RBX72D4C145FEFB4C2E9CA4DEAED31A2430">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">4</token>
						<token name="FontSize">10</token>
						<string name="Name">Sens</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0.5</XS>
							<XO>-50</XO>
							<YS>0.5</YS>
							<YO>50</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>100</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">S: 0.3</string>
						<Color3 name="TextColor3">4294967295</Color3>
						<bool name="TextScaled">false</bool>
						<Color3 name="TextStrokeColor3">4278190080</Color3>
						<float name="TextStrokeTransparency">0</float>
						<float name="TextTransparency">0</float>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">false</bool>
						<int name="ZIndex">10</int>
					</Properties>
				</Item>
				<Item class="Frame" referent="RBXD510C5A8D7204D25AFF42E6F7AACD8D4">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4278190080</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<string name="Name">Scope</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>-36</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>1</YS>
							<YO>36</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<token name="Style">0</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="TextLabel" referent="RBX0F828771A3184685A53C5160EB21507C">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">Steady</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0.5</XS>
								<XO>-60</XO>
								<YS>0.5</YS>
								<YO>50</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>120</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text"></string>
							<Color3 name="TextColor3">4294967040</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4278190080</Color3>
							<float name="TextStrokeTransparency">0</float>
							<float name="TextTransparency">0</float>
							<bool name="TextWrapped">false</bool>
							<token name="TextXAlignment">2</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">9</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBXCA00D10382284439954D824AD1B1114B">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Main</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="ImageLabel" referent="RBXA7C9C1C582084FB0B04390F4125C935D">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=184922644</url></Content>
								<Color3 name="ImageColor3">4294967295</Color3>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">ScopeImg2</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>-10</XO>
									<YS>0</YS>
									<YO>-10</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<token name="ScaleType">0</token>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>20</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<Rect2D name="SliceCenter">
									<min>
										<X>0</X>
										<Y>0</Y>
									</min>
									<max>
										<X>0</X>
										<Y>0</Y>
									</max>
								</Rect2D>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="ImageLabel" referent="RBX101DCDAA3A2747FD87F2839508E238BA">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<Content name="Image"><url>http://www.roblox.com/asset/?id=72002022</url></Content>
								<Color3 name="ImageColor3">4294967295</Color3>
								<Vector2 name="ImageRectOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<Vector2 name="ImageRectSize">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<float name="ImageTransparency">0</float>
								<string name="Name">ScopeImg1</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>-10</XO>
									<YS>0</YS>
									<YO>-10</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<token name="ScaleType">0</token>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>20</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<Rect2D name="SliceCenter">
									<min>
										<X>0</X>
										<Y>0</Y>
									</min>
									<max>
										<X>0</X>
										<Y>0</Y>
									</max>
								</Rect2D>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBXF0E9A4F2D1ED42C286F2698EE10D7020">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4278190080</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">F2</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>-10</XO>
									<YS>0</YS>
									<YO>-10</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBXCB1DE5BC517940A9A253D5841AB1D38F">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4278190080</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">F1</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>-10</XO>
									<YS>0</YS>
									<YO>-10</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
						<Item class="LocalScript" referent="RBXD115AAA1FCDB4EB49C83F49DC3CDA7A4">
							<Properties>
								<bool name="Disabled">false</bool>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Update</string>
								<string name="ScriptGuid"></string>
								<ProtectedString name="Source"><![CDATA[local GUI = script.Parent

function updateScopeDimension()
	GUI.ScopeImg1.Position = UDim2.new(0.5, -10 - (GUI.AbsoluteSize.y / 2), 0, -10)
	GUI.ScopeImg1.Size = UDim2.new(0, 20 + GUI.AbsoluteSize.y, 0, 20 + GUI.AbsoluteSize.y)
	GUI.ScopeImg2.Position = UDim2.new(0.5, -10 - (GUI.AbsoluteSize.y / 2), 0, -10)
	GUI.ScopeImg2.Size = UDim2.new(0, 20 + GUI.AbsoluteSize.y, 0, 20 + GUI.AbsoluteSize.y)
	GUI.F1.Size = UDim2.new(0, 20 + ((GUI.AbsoluteSize.x - GUI.AbsoluteSize.y) / 2), 1, 20)
	GUI.F2.Size = UDim2.new(0, 20 + ((GUI.AbsoluteSize.x - GUI.AbsoluteSize.y) / 2), 1, 20)
	GUI.F2.Position = UDim2.new(1, -10 - ((GUI.AbsoluteSize.x - GUI.AbsoluteSize.y) / 2), 0, -10)
end

wait()

GUI.Changed:connect(updateScopeDimension)

updateScopeDimension()]]></ProtectedString>
							</Properties>
						</Item>
					</Item>
				</Item>
				<Item class="TextLabel" referent="RBX2513007684FC4F498CD1B3B0F9DF1B0F">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<token name="Font">6</token>
						<token name="FontSize">6</token>
						<string name="Name">Co</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>0</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>0</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>1</XS>
							<XO>0</XO>
							<YS>0</YS>
							<YO>20</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<string name="Text">tEhYuM yB ekameR &amp; noisuFobruT yB tiK</string>
						<Color3 name="TextColor3">4294967295</Color3>
						<bool name="TextScaled">false</bool>
						<Color3 name="TextStrokeColor3">4294967295</Color3>
						<float name="TextStrokeTransparency">0.899999976</float>
						<float name="TextTransparency">0.899999976</float>
						<bool name="TextWrapped">false</bool>
						<token name="TextXAlignment">2</token>
						<token name="TextYAlignment">1</token>
						<bool name="Visible">true</bool>
						<int name="ZIndex">10</int>
					</Properties>
				</Item>
				<Item class="ImageLabel" referent="RBX4085AE42AED947DDA9613CBFDFD2FDA6">
					<Properties>
						<bool name="Active">false</bool>
						<Color3 name="BackgroundColor3">4294967295</Color3>
						<float name="BackgroundTransparency">1</float>
						<Color3 name="BorderColor3">4279970357</Color3>
						<int name="BorderSizePixel">1</int>
						<bool name="ClipsDescendants">false</bool>
						<bool name="Draggable">false</bool>
						<Content name="Image"><url>rbxassetid://500188818</url></Content>
						<Color3 name="ImageColor3">4280821800</Color3>
						<Vector2 name="ImageRectOffset">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<Vector2 name="ImageRectSize">
							<X>0</X>
							<Y>0</Y>
						</Vector2>
						<float name="ImageTransparency">0.300000012</float>
						<string name="Name">HUD</string>
						<Ref name="NextSelectionDown">null</Ref>
						<Ref name="NextSelectionLeft">null</Ref>
						<Ref name="NextSelectionRight">null</Ref>
						<Ref name="NextSelectionUp">null</Ref>
						<UDim2 name="Position">
							<XS>1</XS>
							<XO>-210</XO>
							<YS>1</YS>
							<YO>-125</YO>
						</UDim2>
						<float name="Rotation">0</float>
						<token name="ScaleType">0</token>
						<bool name="Selectable">false</bool>
						<Ref name="SelectionImageObject">null</Ref>
						<UDim2 name="Size">
							<XS>0</XS>
							<XO>100</XO>
							<YS>0</YS>
							<YO>100</YO>
						</UDim2>
						<token name="SizeConstraint">0</token>
						<Rect2D name="SliceCenter">
							<min>
								<X>0</X>
								<Y>0</Y>
							</min>
							<max>
								<X>0</X>
								<Y>0</Y>
							</max>
						</Rect2D>
						<bool name="Visible">true</bool>
						<int name="ZIndex">1</int>
					</Properties>
					<Item class="Frame" referent="RBX3C31D066EA624AA8BEC4202F74C01D40">
						<Properties>
							<bool name="Active">true</bool>
							<Color3 name="BackgroundColor3">4280690214</Color3>
							<float name="BackgroundTransparency">0.300000012</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Frame</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>100</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>110</XO>
								<YS>0</YS>
								<YO>100</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">1</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBXBF4B9F34403F4195879F756667606228">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4280821800</Color3>
							<float name="BackgroundTransparency">0.300000012</float>
							<Color3 name="BorderColor3">4280821800</Color3>
							<int name="BorderSizePixel">5</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Controls</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>-200</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>120</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">10</int>
						</Properties>
						<Item class="TextLabel" referent="RBXA9D21EEF02AB4EB4864A5D01D757ECF2">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">4</token>
								<token name="FontSize">5</token>
								<string name="Name">Title</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>15</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">CONTROLS</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">10</int>
							</Properties>
							<Item class="TextLabel" referent="RBXE3C6B31E21C0489398CAFA4F5054BCAF">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967040</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">3</token>
									<token name="FontSize">5</token>
									<string name="Name">Line</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>1</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>2</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text"></string>
									<Color3 name="TextColor3">4279970357</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">10</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX0B8526E93F4947CC8E69794DBCA6418A">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Grenades</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>90</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>175</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">false</bool>
							<int name="ZIndex">10</int>
						</Properties>
						<Item class="Frame" referent="RBXCC357DF35E6D49E4A3855D885FBA1112">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Lethals</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0.5</XS>
									<XO>-2</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">10</int>
							</Properties>
							<Item class="ImageLabel" referent="RBX01FE26B8B1B94CE591162D750ED02A0D">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><null></null></Content>
									<Color3 name="ImageColor3">4294967295</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<string name="Name">Icon</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>7</XO>
										<YS>0</YS>
										<YO>2</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<token name="ScaleType">0</token>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>21</XO>
										<YS>0</YS>
										<YO>21</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<bool name="Visible">true</bool>
									<int name="ZIndex">10</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX5ED2BE9D9CE3448CAEC1C1695AA68770">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">6</token>
									<string name="Name">Mult</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0.5</XS>
										<XO>-10</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>20</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">X</string>
									<Color3 name="TextColor3">4278190080</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">10</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX9D53A02B327443CCAD8E14A352A071A9">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">6</token>
									<string name="Name">Num</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>1</XS>
										<XO>-7</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">0</string>
									<Color3 name="TextColor3">4278190080</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">1</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">10</int>
								</Properties>
							</Item>
						</Item>
						<Item class="Frame" referent="RBX99168437472F400687D6733299A41E77">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">0</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Tacticals</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0.5</XS>
									<XO>2</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0.5</XS>
									<XO>-2</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">10</int>
							</Properties>
							<Item class="ImageLabel" referent="RBXA66095CBEE3A4028B8206BB51B3CF012">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<Content name="Image"><null></null></Content>
									<Color3 name="ImageColor3">4294967295</Color3>
									<Vector2 name="ImageRectOffset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<Vector2 name="ImageRectSize">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="ImageTransparency">0</float>
									<string name="Name">Icon</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>7</XO>
										<YS>0</YS>
										<YO>2</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<token name="ScaleType">0</token>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>21</XO>
										<YS>0</YS>
										<YO>21</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<Rect2D name="SliceCenter">
										<min>
											<X>0</X>
											<Y>0</Y>
										</min>
										<max>
											<X>0</X>
											<Y>0</Y>
										</max>
									</Rect2D>
									<bool name="Visible">true</bool>
									<int name="ZIndex">10</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX449FFD0CBC6C45C08CA4318AB68B7546">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">6</token>
									<string name="Name">Num</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>1</XS>
										<XO>-7</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">0</string>
									<Color3 name="TextColor3">4278190080</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">1</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">10</int>
								</Properties>
							</Item>
							<Item class="TextLabel" referent="RBX22E1C04D7E984065B15D6BEF6C56075D">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4294967295</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">6</token>
									<string name="Name">Mult</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0.5</XS>
										<XO>-10</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>20</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">X</string>
									<Color3 name="TextColor3">4278190080</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">2</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">10</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX5D2AD048DC40418B9C0F82495FACA9C1">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4282335039</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4280821800</Color3>
							<int name="BorderSizePixel">0</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">true</bool>
							<string name="Name">Health</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>25</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0.400000006</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>25</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">10</int>
						</Properties>
						<Item class="TextLabel" referent="RBXB24283AA727B4A98981007ABA7A0E6D1">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4278190080</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">4</token>
								<token name="FontSize">7</token>
								<string name="Name">Num</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>1</XS>
									<XO>-50</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>50</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">100%</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4290690750</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">1</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">10</int>
							</Properties>
						</Item>
						<Item class="Frame" referent="RBX1EB20B357D8A4EE88119BFEE25AAEE63">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4278190080</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4278190080</Color3>
								<int name="BorderSizePixel">0</int>
								<bool name="ClipsDescendants">true</bool>
								<bool name="Draggable">false</bool>
								<string name="Name">Tray</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>2</XO>
									<YS>0.5</YS>
									<YO>-10</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>-60</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<token name="Style">0</token>
								<bool name="Visible">false</bool>
								<int name="ZIndex">10</int>
							</Properties>
							<Item class="Frame" referent="RBX4100BE510769413A9B1846D3AAFABD19">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4278190080</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4278190080</Color3>
									<int name="BorderSizePixel">0</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<string name="Name">Beat</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>1</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>0</XS>
										<XO>21</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<token name="Style">0</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">10</int>
								</Properties>
								<Item class="Frame" referent="RBX7E3D8136D3A84C9681DC6930B79535D5">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">00</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0.5</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX6A1EBB28AA194D9BB5E43449D7A84A6E">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">01</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0.423076928</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX10155A86FF7B4900A1EBF38CE0D6D118">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">02</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.095238097</XS>
											<XO>0</XO>
											<YS>0.346153855</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX07CB42A1F2AF410D9F711FC261294B6C">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">03</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.142857149</XS>
											<XO>0</XO>
											<YS>0.269230783</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX85C5D0635A59448986F3523E459496B1">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">04</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.190476194</XS>
											<XO>0</XO>
											<YS>0.192307696</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXE812A9882DD74E4B99F327CF844BBBE8">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">05</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.238095239</XS>
											<XO>0</XO>
											<YS>0.115384616</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX068F33A77522434E898F5FBD5FE8B550">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">06</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.285714298</XS>
											<XO>0</XO>
											<YS>0.0384615399</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX29C78927EF6D4A5B84EBD7FED7789909">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">07</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.333333343</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXB77F2249074B4D3E8B3EAA120D28B832">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">08</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.380952388</XS>
											<XO>0</XO>
											<YS>0.142857149</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX2C2BCB67855041668DE8C518AB61C637">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">09</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.428571433</XS>
											<XO>0</XO>
											<YS>0.285714298</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX77DE340DF08944D79FDA1248593E0241">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">10</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.476190478</XS>
											<XO>0</XO>
											<YS>0.428571433</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX770B67E04ADE41B8A382741059FBC8AF">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">11</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.523809552</XS>
											<XO>0</XO>
											<YS>0.571428597</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXBC8559AF44FD46F0BA2083B8F557D04E">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">12</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.571428597</XS>
											<XO>0</XO>
											<YS>0.714285731</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXD5566263A1774A8297FE300D8B212110">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">13</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.619047642</XS>
											<XO>0</XO>
											<YS>0.857142866</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX11C1ABCE5E8242B481F0204B94CA4320">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">14</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.666666687</XS>
											<XO>0</XO>
											<YS>0.916666687</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXABF675F557EB4BCA8ADEDDE67243E7E5">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">15</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.714285731</XS>
											<XO>0</XO>
											<YS>0.833333313</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX51FAEFF424CB4FA884BA81CA9E817B46">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">16</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.761904776</XS>
											<XO>0</XO>
											<YS>0.75</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX5079209282924E659F199F494F7D6767">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">17</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.809523821</XS>
											<XO>0</XO>
											<YS>0.666666687</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBX8D482861A0784EA180245BF2B8E61034">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">18</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.857142866</XS>
											<XO>0</XO>
											<YS>0.583333313</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXC0C637D985914F4CAAD8475D6F50723E">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">19</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.90476191</XS>
											<XO>0</XO>
											<YS>0.5</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXA67AB1EEC94B4DE386EC0BA66AE48C63">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">20</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.952000022</XS>
											<XO>0</XO>
											<YS>0.49000001</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0.0476190485</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>4</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXE50463E6C7AE4DC1AA6DE31C259F6174">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Line</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>1</XS>
											<XO>0</XO>
											<YS>0.5</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>200</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
								<Item class="Frame" referent="RBXE41AC9E7FBF04D369DFD56FD81811F60">
									<Properties>
										<bool name="Active">false</bool>
										<Color3 name="BackgroundColor3">4294967295</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">4278190080</Color3>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<string name="Name">Line</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>-200</XO>
											<YS>0.5</YS>
											<YO>-2</YO>
										</UDim2>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<UDim2 name="Size">
											<XS>0</XS>
											<XO>200</XO>
											<YS>0</YS>
											<YO>3</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<token name="Style">0</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">10</int>
									</Properties>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX2FC43D5463CA45A3AFE171086196376E">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Mode</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>1</XS>
								<XO>22</XO>
								<YS>1</YS>
								<YO>-60</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>85</XO>
								<YS>0</YS>
								<YO>20</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">10</int>
						</Properties>
						<Item class="TextLabel" referent="RBXA88445A908D44AD3B637443AEE80C682">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">6</token>
								<string name="Name">Bracket</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">[</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">10</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBXA24D4519BADA4EF4B91BE8C9E03EEF76">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">2</token>
								<token name="FontSize">6</token>
								<string name="Name">Bracket</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>1</XS>
									<XO>-5</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>5</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">]</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">10</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX46AEA750D43644C3BD59D5BD5CAFFA2F">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">6</token>
								<token name="FontSize">6</token>
								<string name="Name">Main</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>20</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">Auto</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">10</int>
							</Properties>
						</Item>
					</Item>
					<Item class="Frame" referent="RBX9744AEA07A804ED49CB95343A39794C3">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4284111450</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">gunName</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>36</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">10</int>
						</Properties>
						<Item class="TextLabel" referent="RBX870BA7FC85BD4005BF25E52671740752">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">6</token>
								<token name="FontSize">8</token>
								<string name="Name">Title</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>30</XO>
									<YS>0</YS>
									<YO>-5</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>75</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">GUN</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4290690750</Color3>
								<float name="TextStrokeTransparency">0</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">10</int>
							</Properties>
						</Item>
					</Item>
					<Item class="TextLabel" referent="RBXB217D17AEC814FAF99A8851AFEEF238F">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<token name="Font">2</token>
							<token name="FontSize">5</token>
							<string name="Name">Version</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>1</XS>
								<XO>10</XO>
								<YS>1</YS>
								<YO>0</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>1</XS>
								<XO>0</XO>
								<YS>0</YS>
								<YO>15</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<string name="Text">V0.4 - REMAKE</string>
							<Color3 name="TextColor3">4294967295</Color3>
							<bool name="TextScaled">false</bool>
							<Color3 name="TextStrokeColor3">4290690750</Color3>
							<float name="TextStrokeTransparency">0.600000024</float>
							<float name="TextTransparency">0.600000024</float>
							<bool name="TextWrapped">true</bool>
							<token name="TextXAlignment">1</token>
							<token name="TextYAlignment">1</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">10</int>
						</Properties>
					</Item>
					<Item class="Frame" referent="RBX0D789BE7C0DB4843B07705C7E0AAC477">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4288914085</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<string name="Name">Ammo</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>72</XO>
								<YS>0</YS>
								<YO>60</YO>
							</UDim2>
							<float name="Rotation">0</float>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>135</XO>
								<YS>0</YS>
								<YO>40</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<token name="Style">0</token>
							<bool name="Visible">true</bool>
							<int name="ZIndex">10</int>
						</Properties>
						<Item class="TextLabel" referent="RBXB20274B85FF64678ADB3DC9A2359BB20">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">4</token>
								<token name="FontSize">7</token>
								<string name="Name">Slash</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>92</XO>
									<YS>0</YS>
									<YO>-12</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>45</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">//</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">10</int>
							</Properties>
						</Item>
						<Item class="TextLabel" referent="RBX858CF794287E4C86B13DE27F79742206">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">4</token>
								<token name="FontSize">10</token>
								<string name="Name">Stored</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>100</XO>
									<YS>0</YS>
									<YO>-35</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>85</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">999</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">0</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">10</int>
							</Properties>
							<Item class="TextLabel" referent="RBXBA797C7768384AA880BB52FAFEBF2E3D">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">2</token>
									<token name="FontSize">7</token>
									<string name="Name">Background</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">000</string>
									<Color3 name="TextColor3">4288059030</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0.800000012</float>
									<bool name="TextWrapped">true</bool>
									<token name="TextXAlignment">0</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">10</int>
								</Properties>
							</Item>
						</Item>
						<Item class="TextLabel" referent="RBX307F598D4D1C4294AEC6C69A3D455611">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4288914085</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">4</token>
								<token name="FontSize">13</token>
								<string name="Name">Clip</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>-5</YO>
								</UDim2>
								<float name="Rotation">0</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>0</XS>
									<XO>85</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">999</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4278190080</Color3>
								<float name="TextStrokeTransparency">1</float>
								<float name="TextTransparency">0</float>
								<bool name="TextWrapped">false</bool>
								<token name="TextXAlignment">1</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">10</int>
							</Properties>
							<Item class="TextLabel" referent="RBXA1DA6385CBF243CF8030784BDCBC64AD">
								<Properties>
									<bool name="Active">false</bool>
									<Color3 name="BackgroundColor3">4288914085</Color3>
									<float name="BackgroundTransparency">1</float>
									<Color3 name="BorderColor3">4279970357</Color3>
									<int name="BorderSizePixel">1</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<token name="Font">4</token>
									<token name="FontSize">13</token>
									<string name="Name">Background</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<string name="Text">000</string>
									<Color3 name="TextColor3">4288059030</Color3>
									<bool name="TextScaled">false</bool>
									<Color3 name="TextStrokeColor3">4278190080</Color3>
									<float name="TextStrokeTransparency">1</float>
									<float name="TextTransparency">0.800000012</float>
									<bool name="TextWrapped">false</bool>
									<token name="TextXAlignment">1</token>
									<token name="TextYAlignment">1</token>
									<bool name="Visible">true</bool>
									<int name="ZIndex">10</int>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="ImageLabel" referent="RBXB6D5E37043D946FDAA9F0AC5B1CCF1F4">
						<Properties>
							<bool name="Active">false</bool>
							<Color3 name="BackgroundColor3">4294967295</Color3>
							<float name="BackgroundTransparency">1</float>
							<Color3 name="BorderColor3">4279970357</Color3>
							<int name="BorderSizePixel">1</int>
							<bool name="ClipsDescendants">false</bool>
							<bool name="Draggable">false</bool>
							<Content name="Image"><url>rbxassetid://500200470</url></Content>
							<Color3 name="ImageColor3">4294967295</Color3>
							<Vector2 name="ImageRectOffset">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<Vector2 name="ImageRectSize">
								<X>0</X>
								<Y>0</Y>
							</Vector2>
							<float name="ImageTransparency">0.699999988</float>
							<string name="Name">Bear</string>
							<Ref name="NextSelectionDown">null</Ref>
							<Ref name="NextSelectionLeft">null</Ref>
							<Ref name="NextSelectionRight">null</Ref>
							<Ref name="NextSelectionUp">null</Ref>
							<UDim2 name="Position">
								<XS>0</XS>
								<XO>100</XO>
								<YS>0</YS>
								<YO>5</YO>
							</UDim2>
							<float name="Rotation">-10</float>
							<token name="ScaleType">0</token>
							<bool name="Selectable">false</bool>
							<Ref name="SelectionImageObject">null</Ref>
							<UDim2 name="Size">
								<XS>0</XS>
								<XO>80</XO>
								<YS>0</YS>
								<YO>50</YO>
							</UDim2>
							<token name="SizeConstraint">0</token>
							<Rect2D name="SliceCenter">
								<min>
									<X>0</X>
									<Y>0</Y>
								</min>
								<max>
									<X>0</X>
									<Y>0</Y>
								</max>
							</Rect2D>
							<bool name="Visible">false</bool>
							<int name="ZIndex">1</int>
						</Properties>
						<Item class="TextLabel" referent="RBX12562CFDE2CF415C9F003753F05A55FB">
							<Properties>
								<bool name="Active">false</bool>
								<Color3 name="BackgroundColor3">4294967295</Color3>
								<float name="BackgroundTransparency">1</float>
								<Color3 name="BorderColor3">4279970357</Color3>
								<int name="BorderSizePixel">1</int>
								<bool name="ClipsDescendants">false</bool>
								<bool name="Draggable">false</bool>
								<token name="Font">6</token>
								<token name="FontSize">7</token>
								<string name="Name">TextLabel</string>
								<Ref name="NextSelectionDown">null</Ref>
								<Ref name="NextSelectionLeft">null</Ref>
								<Ref name="NextSelectionRight">null</Ref>
								<Ref name="NextSelectionUp">null</Ref>
								<UDim2 name="Position">
									<XS>0</XS>
									<XO>0</XO>
									<YS>0</YS>
									<YO>0</YO>
								</UDim2>
								<float name="Rotation">10</float>
								<bool name="Selectable">false</bool>
								<Ref name="SelectionImageObject">null</Ref>
								<UDim2 name="Size">
									<XS>1</XS>
									<XO>0</XO>
									<YS>1</YS>
									<YO>0</YO>
								</UDim2>
								<token name="SizeConstraint">0</token>
								<string name="Text">~BoG~</string>
								<Color3 name="TextColor3">4294967295</Color3>
								<bool name="TextScaled">false</bool>
								<Color3 name="TextStrokeColor3">4290690750</Color3>
								<float name="TextStrokeTransparency">0.899999976</float>
								<float name="TextTransparency">0.899999976</float>
								<bool name="TextWrapped">true</bool>
								<token name="TextXAlignment">2</token>
								<token name="TextYAlignment">1</token>
								<bool name="Visible">true</bool>
								<int name="ZIndex">1</int>
							</Properties>
						</Item>
					</Item>
				</Item>
			</Item>
		</Item>
		<Item class="ModuleScript" referent="RBXEF0CEEDC6AFF4EF2AA8D4541607884AC">
			<Properties>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">PLUGINS</string>
				<string name="ScriptGuid"></string>
				<ProtectedString name="Source"><![CDATA[--[[

	Plugins for this gun kit are basically functions that will run at specific times, i.e. When a key is pressed, when the gun is
	fired, when the gun is aimed, etc.
	
	HOW TO USE IT:
	
		KEYDOWN PLUGIN:
		
			Let's say you wanted to toggle a laser whenever you press the "v" key:
			
			You would create a table like the example below
			The first element would be "Key = INSERT_KEY_HERE"
			The second element would be "Description = INSERT_DESCRIPTION_HERE"
			The third element would be "Plugin = INSERT_FUNCTION_HERE"
			
			So whenever you press the "v" key, the plugin function will run
			
			Pretty useful if you want to add extra code to the script without actually having to modify the script
		
			NOTE: Only the keydown plugin requires this table. Every other plugin just needs a function
			
		EVERY OTHER PLUGIN:
		
			Let's say you wanted to make a shell eject whenever the gun was fired:
			
			You would add function called "Plugin = INSERT_FUNCTION_HERE"
			
			That's it; If you want other stuff to happen when the gun is fired, you would either put it all into 1 function, or
			you would add more Plugins to the "Firing" table. Like so:
			
			Firing = {
				Plugin = function()
					--Code
				end;
				Plugin = function()
					--Code
				end;
				Plugin = function()
					--Code
				end;
			};
	
	That's really it, you just need to know some basic scripting to use it. If you have more questions, pm me.
	
	NOTE: The plugins run seperate from the code in the Gun_Main. For example, if you have a plugin that ejects a shell 1 second
	after the gun is fired, the gun's firing speed won't be affected in any way.
	
--]]

local Gun = script.Parent

local Plugins = {
	
	KeyDown = {
		{ --This is a plugin for a toggleable laser
			Key = "v"; --This is the key you press to activate the plugin
			Description = "Toggle Laser"; --This is what the description of the key will be in the controls
			Plugin = function() --This is the actual plugin function
				local Laser = Gun:WaitForChild("Laser") --These few lines wait for the necessary bricks/models
				local Handle = Gun:WaitForChild("Handle")
				local ignoreCode = Gun.clientMain:WaitForChild("ignoreCode")
				local ignoreModel = game.Workspace:WaitForChild("ignoreModel_"..ignoreCode.Value)
				
				local PlyrName = game.Players:GetPlayerFromCharacter(Gun.Parent).Name
				local playerFolder = ignoreModel:WaitForChild("gunIgnore_"..PlyrName)
				
				local RS = game:GetService("RunService")
				
				local function createLaserDot() --This function creates the red laser dot
					local laserDot = Instance.new("Part")
					laserDot.Transparency = 1
					laserDot.Name = "laserDot"
					laserDot.Anchored = true
					laserDot.CanCollide = false
					laserDot.FormFactor = Enum.FormFactor.Custom
					laserDot.Size = Vector3.new(0.25, 0.25, 1)
					
					local laserGui = Instance.new("SurfaceGui")
					laserGui.CanvasSize = Vector2.new(100, 100)
					laserGui.Parent = laserDot
					
					local laserImage = Instance.new("ImageLabel")
					laserImage.BackgroundTransparency = 1
					laserImage.Size = UDim2.new(1, 0, 1, 0)
					laserImage.Image = "http://www.roblox.com/asset/?id=131394739"
					laserImage.Parent = laserGui
					
					--[[local laserLight = Instance.new("SurfaceLight")
					laserLight.Angle = 180
					laserLight.Brightness = math.huge
					laserLight.Color = Color3.new(1, 0, 0)
					laserLight.Face = Enum.NormalId.Back
					laserLight.Range = 5
					laserLight.Shadows = true
					laserLight.Parent = laserDot]]
					
					return laserDot
				end
				
				local function getHitSurfaceCFrame(Pos, Obj) --This function returns the proper cframe based on the face that the position is on
					local surfaceCF = {
						{"Back", Obj.CFrame * CFrame.new(0, 0, Obj.Size.z)};
						{"Bottom", Obj.CFrame * CFrame.new(0, -Obj.Size.y, 0)};
						{"Front", Obj.CFrame * CFrame.new(0, 0, -Obj.Size.z)};
						{"Left", Obj.CFrame * CFrame.new(-Obj.Size.x, 0, 0)};
						{"Right", Obj.CFrame * CFrame.new(Obj.Size.x, 0, 0)};
						{"Top", Obj.CFrame * CFrame.new(0, Obj.Size.y, 0)}
					}
					local closestDist = math.huge
					local closestSurface = nil
					for _,v in pairs(surfaceCF) do
						local surfaceDist = (Pos - v[2].p).magnitude
						if surfaceDist < closestDist then
							closestDist = surfaceDist
							closestSurface = v
						end
					end
					
					local surfaceDir = CFrame.new(Obj.CFrame.p, closestSurface[2].p)
					local surfaceDist = surfaceDir.lookVector * ((Obj.CFrame.p - closestSurface[2].p).magnitude / 2 - 0.25)
					local surfaceOffset = Pos - closestSurface[2].p + surfaceDist
					local surfaceCFrame = surfaceDir + surfaceDist + surfaceOffset
					
					return surfaceCFrame
				end
				
				local laserDot = createLaserDot() --The code is cleaner when the laser creating code is in a function
				
				Laser.Transparency = (Laser.Transparency == 1 and 0 or 1) --Toggles the laser on or off
				
				while math.floor(Laser.Transparency) == 0 do --This loop will keep running as long as the laser is visible
					if (not game.Players:GetPlayerFromCharacter(Gun.Parent)) then break end --This checks if the gun is a child of the character
					
					local newRay = Ray.new(Laser.Position, Handle.CFrame.lookVector * 999)
					local H, P = game.Workspace:FindPartOnRay(newRay, ignoreModel)
					
					local Distance = (P - Laser.Position).magnitude
					Laser.Mesh.Offset = Vector3.new(0, Distance / 2, 0)
					Laser.Mesh.Scale = Vector3.new(0.075, Distance / 0.2, 0.075)
					
					if H then
						laserDot.CFrame = getHitSurfaceCFrame(P, H) --If the laser hits a part then position the dot on the part
						laserDot.Parent = playerFolder
					else
						laserDot.Parent = nil --If the laser doesn't hit a part then temporarily remove the laser dor
					end
					
					RS.RenderStepped:wait()
				end
				
				laserDot:Destroy() --These lines reset the laser if the laser is transparent or the gun was deselected
				Laser.Transparency = 1
				Laser.Mesh.Offset = Vector3.new()
				Laser.Mesh.Scale = Vector3.new(0.075, 0, 0.075)
			end;
		};
		
		{ --This is a plugin for a toggleable flashlight
			Key = "z";
			Description = "Toggle Flashlight";
			Plugin = function()
				local Flashlight = Gun:WaitForChild("Flashlight")
				if Flashlight then
					for _, Light in pairs(Flashlight:GetChildren()) do
						if Light.Name == "Light" then
							Light.Enabled = (not Light.Enabled)
						end
					end
				end
			end
		};
	};
	
	KeyUp = {
		
	};
	
	Firing = {
		Plugin = function()
			--Put code here
		end;
	};
	
	Aimed = {
		Plugin = function()
			--Put code here
		end;
	};
	
	UnAimed = {
		Plugin = function()
			--Put code here
		end;
	};
	
	OnEquipped = {
		Plugin = function()
			--Put code here
		end
	};
	
	OnUnEquipped = {
		Plugin = function()
			--Put code here
		end
	};
	
}

return Plugins]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBXD6EFBB2C85A94795970DADBEA7EB3BE0">
			<Properties>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">SETTINGS</string>
				<string name="ScriptGuid"></string>
				<ProtectedString name="Source"><![CDATA[local Settings = {
	
	
	gunType = {
		Semi = false;
		Auto = true;
		Burst = false;
		Shot = false;
		Explosive = false;
	};
	
	selectFire = true;
	selectFireSettings = {
		Animation = true;
		GUI = false;
		Modes = {
			Safety = true;
			Semi = true;
			Burst = true;
			Auto = true;
		};
		animSpeed = 0.5;
	};
	
	
	burstSettings = {
		fireRateBurst = true;
		Amount = 3;
		Time = 0.2;
		Wait = 0.1;
	};
	
	
	shotAmount = 5;
	
	
	explosionSettings = {
		Radius = 20;
		Pressure = 5e5;
		Type = Enum.ExplosionType.NoCraters;
		
		soundId = "rbxassetid://138499093";
		soundPitch = 1;
		soundVolume = 1;
		rayCastExplosions = false;
		rangeBasedDamage = true;
	};
	
	
	playerArms = true;
	fakeArmSettings = {
		Transparency = 0;
		armSize = Vector3.new(0.6, 2, 0.6);
		characterMeshes = false;
		realBodyColor = true;
		Color = BrickColor.new("Pastel brown");
	};
	
	
	unAimedC1 = {
		leftArm = CFrame.new(-1, 1.4, -.5) * CFrame.Angles(math.rad(-10), 0, math.rad(-30));
		rightArm = CFrame.new(0.4, 0.25, -0.3) * CFrame.Angles(0, 0, math.rad(25));
		Grip = CFrame.Angles(0, math.rad(25), 0);
	};
	aimedC1 = {
		leftArm = CFrame.new(-0.1, 1, -0.3) * CFrame.Angles(math.rad(-10), 0, 0) * CFrame.Angles(0, 0, math.rad(-40));
		rightArm = CFrame.new(0.5, 0.3, 0.1) * CFrame.Angles(0, 0, math.rad(45));
	};
	runningC1 = {
		leftArm = CFrame.new(-0.65, 0.85, -.8) * CFrame.Angles(math.rad(1), math.rad(-8.5), math.rad(16));
		rightArm = CFrame.new(0.16, 1, -0.14) * CFrame.Angles(math.rad(15), math.rad(2), math.rad(50));
		Grip = CFrame.Angles(0, math.rad(-5), 0);
	};
	
	
	equipAnimation = true;
	equipSettings = {
		Time = 0.25;
		leftArmC1 = CFrame.new(0.2, 1.2, 0) * CFrame.Angles(math.rad(105), math.rad(-30), math.rad(90));
		rightArmC1 = CFrame.new(-0.5, 0.75, 0) * CFrame.Angles(math.rad(45), 0, math.rad(75)); 
		GripC1 = CFrame.new();
	};
	
	
	stopAnimsOnFall = true;
	fallAnimation = true;
	fallSettings = {
		maxDist = 35;
		landMultiplier = 1;
		fallMultiplier = 1;
		aimEffect = 0.25;
	};
	
	
	gunMomentum = true;
	momentumSettings = {
		maxInput = 18;
		Speed = 20;
		Damper = 0.5;
		Amplitude = {
			unAimed = 5;
			Aimed = 1;
		}
	};
	
	
	cockingAnim = false;
	movementAnims = true;
	
	
	canADS = true;
	aimSettings = {
		Anim = true;
		Speed = 0.3;
		FOV = 37;
		holdToADS = true;
		headTilt = math.rad(25);
	};
	
	
	sensitivitySettings = {
		Default = 1;
		Aim = 0.3;
		
		scrollToChange = true;
		Min = 0.05;
		Max = 1;
		Increment = 0.05;
	};
	
	
	guiScope = false;
	scopeSettings = {
		Frequency = {
			Idling = 0.7;
			Walking = 2;
		};
		Amplitude = {
			Idling = 0.75;
			Walking = 0.75;
		};
		steadyTime = 8;
		breathTime = 5;
		camSwayOnBreath = 2.5;
		unSteadyOnFire = true;
	};
	
	
	roundsPerMin = 800;
	
	
	bulletSettings = {
		instantHit = true;
		Range = 900;
		Velocity = 540;
		Acceleration = 196.2;
		Color = BrickColor.new("Bright red");
		Transparency = 0;
		Size = Vector3.new(0.1, 0.1, 5);
	};
	
	
	damageSettings = {
		Start = {
			Damage = 24;
			Dist = 0.08;
		};
		End = {
			Damage = 15.4;
			Dist = 0.5;
		};
		Multipliers = {
			Chest = 1;
			Head = 1.5;
			Limbs = 1;
		};
	};
	
	
	AllowFriendlyFire = false;
	CanDamageNPCs = true;
	
	bulletTrail = false;
	trailSettings = {
		Color = BrickColor.new("White");
		Transparency = 0;
		Thickness = 0;
		visibleTime = 0;
		disappearTime = 0;
	};
	
	
	bulletHoles = true;
	holeSettings = {
		Texture = "http://www.roblox.com/asset/?id=64291961";
		Size = 0.5;
		visibleTime = 3;
		disappearTime = 1;
	};
	
	
	bulletSparks = true;
	customSparks = false;
	sparkSettings = {
		Color = {
			Start = Color3.new(1, 158 / 255, 24 / 255);
			End = Color3.new(212 / 255, 242 / 255, 8 / 255);
		};
		Size = 0.25;
		Texture = "http://www.roblox.com/asset/?id=311395391";
		Lifetime = 0.2;
		Rate = 75;
		Speed = 25;
		Spread = 45;
		Materials = {
			Enum.Material.Plastic;
			Enum.Material.Slate;
			Enum.Material.Concrete;
			Enum.Material.CorrodedMetal;
			Enum.Material.DiamondPlate;
			Enum.Material.Foil;
			Enum.Material.Marble;
			Enum.Material.Granite;
			Enum.Material.Brick;
			Enum.Material.Pebble;
			Enum.Material.SmoothPlastic;
			Enum.Material.Metal;
			Enum.Material.Cobblestone;
		};
	};
	
	
	bulletSmoke = false;
	smokeSettings = {
		objColor = false;
		Color = Color3.new(0.5, 0.5, 0.5);
		Size = {
			Start = 0.25;
			End = 0.5;
		};
		Texture = "http://www.roblox.com/asset/?id=244514423";
		startTransparency = 0;
		Lifetime = 0.2;
		Rate = 100;
		Speed = 35;
		Spread = 15;
	};
	
	
	bloodEffect = true;
	bloodSettings = {
		Color = Color3.new(1, 0, 0);
		Size = 0.1;
		Texture = "http://www.roblox.com/asset/?id=3419963";
		startTransparency = 0.125;
		Lifetime = 0.1;
		Rate = 200;
		Speed = 50;
		Spread = 15;
	};
	
	
	bulletShockwave = false;
	shockwaveSettings = {
		Radius = 0.3;
		Color = BrickColor.new("Light stone grey");
		Duration = 0.2;
	};
	
	
	penetrationSettings = {
		Dist = 0;
		transparencyThreshold = 1;
		ignoreNonCanCollide = true;
		ignoreCustom = {};
	};
	
	
	recoilSettings = {
		firstShotMultiplier = 2.4;
		aimedMultiplier = 0.5;
		camMultiplier = 2;
		springSpeed = 15;
		springDamper = 0.5;
		Recoil = {
			Side = {
				Left = -0.17;
				Right = 0.28;
			};
			Up = {
				Min = 0.26;
				Max = 0.28;
			};
			Back = {
				Min = 0.3;
				Max = 0.35;
			};
			Tilt = {
				Left = -0.5;
				Right = 0.5;
			};
		}
	};
	
	
	spreadSettings = {
		Increase = 0.1;
		Decrease = 15; 
		
		Aimed = {
			Stand = {
				Idling = 0.2;
				Moving = 0.4;
			};
			Crouch = {
				Idling = 0.15;
				Moving = 0.3;
			};
			Prone = {
				Idling = 0.1;
				Moving = 0.3;
			};
		};
		unAimed = {
			Stand = {
				Idling = 2;
				Moving = 2.5;
			};
			Crouch = {
				Idling = 1.5;
				Moving = 2;
			};
			Prone = {
				Idling = 1;
				Moving = 2;
			};
		};
	};
	
	
	reloadSettings = {
		Anim = true;
		Times = {
			Loaded = 1.85;
			Empty = 2.4;
		};
		autoReload = true;
		magIsBullet = false;
		reloadWhileRunning = true;
	};
	
	
	sprintTime = 15;
	staminaCoolTime = 4;
	canFireWhileRunning = false;
	
	
	dolphinDive = true;
	diveSettings = {
		rechargeTime = 1;
		Force = 350;
		Angle = math.rad(30);
	};
	
	
	canChangeStance = true;
	stanceSettings = {
		Anim = true;
		Speed = 0.3;
		Stances = {
			Crouch = true;
			Prone = true;
		};
		standOnDeselect = true;
		crawlAnimation = true; 
	};
	
	
	walkSpeeds = {
		Base = 16;
		Sprinting = 25;
		Aimed = 10;
		Crouched = 7;
		Prone = 4;
	};
	
	
	--NOTE: For extra keys, go here: http://wiki.roblox.com/index.php?title=Taking_keyboard_input
	Keys = {
		lowerStance = "c";
		raiseStance = "x";
		selectFire = "f";
		Reload = "r";
		Sprint = string.char(48);
		ADS = "q";
		scopeSteady = string.char(48);
	};
	
	
}

return Settings]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBX93AF416DDC1A4661B51EF4B14F75E0E4">
			<Properties>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">ANIMATIONS</string>
				<string name="ScriptGuid"></string>
				<ProtectedString name="Source"><![CDATA[local Animations = {
	
	Reload = function(S)
		local W1 = nil
		local W2 = nil
		local animSpeed = S.isMagEmpty() and S.reloadTimeEmpty / 1.3 or S.reloadTimeLoaded / 0.9
		return {
			function()
				if (not S.isNewMag()) then
					if S.isMagVisible() then
						local Mag1, magTable1 = S.createMag("Mag1")
							
						Mag1.Parent = S.gunIgnore
						
						W1 = Instance.new("Weld")
						W1.Part0 = magTable1[1].magClone
						W1.Part1 = S.Handle
						W1.C0 = magTable1[1].Original.CFrame:toObjectSpace(S.Handle.CFrame)
						W1.Parent = magTable1[1].magClone
						
						S.tweenJoint(S.LWeld, nil, S.CF(-0.9, 2, -1.1) * S.CFANG(S.RAD(-15), 0, S.RAD(-25)), S.Sine, 0.2 * animSpeed)
						S.tweenJoint(S.RWeld, nil, S.CF(0.3, 0.2, -0.31) * S.CFANG(S.RAD(-12), 0, S.RAD(25)), S.Sine, 0.2 * animSpeed)
						S.tweenJoint(S.Grip, nil, S.CFANG(0, S.RAD(20), S.RAD(10)), S.Sine, 0.1 * animSpeed)
						wait(0.2 * animSpeed)
					end
				end
			end;
			
			function()
				if (not S.isNewMag()) then
					if S.isMagVisible() then
						S.makeMagInvisible()
						W1:Destroy()
						local Mag1, magTable1 = S.getMag("Mag1")
						magTable1[1].magClone.Velocity = S.Handle.Velocity + S.Handle.CFrame:vectorToWorldSpace(S.V3(0, -1, 0)) * 20
						
						S.tweenJoint(S.RWeld, nil, S.CF(0.3, 0.2, -0.5) * S.CFANG(S.RAD(-20), S.RAD(10), S.RAD(25)), S.Sine, 0.25 * animSpeed)
						S.tweenJoint(S.Grip, nil, S.CFANG(0, S.RAD(20), S.RAD(10)), S.Sine, 0.2 * animSpeed)
					else
						S.tweenJoint(S.RWeld, nil, S.CF(0.6, 0.2, -0.61) * S.CFANG(S.RAD(-12), S.RAD(20), S.RAD(25)), S.Sine, 0.2 * animSpeed)
						S.tweenJoint(S.Grip, nil, S.CFANG(S.RAD(-10), S.RAD(20), S.RAD(10)), S.Sine, 0.2 * animSpeed)
					end
					
					S.tweenJoint(S.LWeld, nil, S.CF(0, 0.5, 0) * S.CFANG(S.RAD(95), 0, S.RAD(-25)), S.Sine, 0.2 * animSpeed)
					
					wait(0.25 * animSpeed)
				end
			end;
			
			function()
				if (not S.isNewMag()) then
					local Mag1, magTable1 = S.getMag("Mag1")
					if Mag1 then Mag1:Destroy() end
					
					local Mag2, magTable2 = S.createMag("Mag2")
					
					Mag2.Parent = S.gunIgnore
					
					local LArmCF = S.LWeld.Part0.CFrame * S.LWeld.C0 * (S.CF(0.58, 1.63, -1.4) * S.CFANG(S.RAD(-22), S.RAD(20), S.RAD(-60))):inverse()
					local RArmCF = S.RWeld.Part0.CFrame * S.RWeld.C0 * (S.CF(0.6, 0.2, -0.61) * S.CFANG(S.RAD(-15), S.RAD(20), S.RAD(25))):inverse()
					local handleOffsetCF = S.RArm.CFrame:toObjectSpace(S.RArm.CFrame * S.Grip.C0 * (S.CFANG(S.RAD(-10), S.RAD(20), S.RAD(10))):inverse())
					local originalMagOffsetCF = S.Handle.CFrame:toObjectSpace(magTable2[1].Original.CFrame)
					local newMagC0 = LArmCF:toObjectSpace(RArmCF * handleOffsetCF * originalMagOffsetCF)
					
					W2 = Instance.new("Weld")
					W2.Part0 = S.LArm
					W2.Part1 = magTable2[1].magClone
					W2.C0 = newMagC0
					W2.Parent = magTable2[1].magClone
					
					S.tweenJoint(S.LWeld, nil, S.CF(0.55, 1, -2.4) * S.CFANG(S.RAD(-20), S.RAD(20), S.RAD(-60)), S.Sine, 0.2 * animSpeed)--0.25
					S.tweenJoint(S.RWeld, nil, S.CF(0.6, 0.2, -0.61) * S.CFANG(S.RAD(-12), S.RAD(20), S.RAD(25)), S.Sine, 0.2 * animSpeed)
					S.tweenJoint(S.Grip, nil, S.CFANG(S.RAD(-10), S.RAD(20), S.RAD(10)), S.Sine, 0.2 * animSpeed)
					wait(0.2 * animSpeed)
				end
			end;
			
			function()
				if (not S.isNewMag()) then
					S.tweenJoint(S.Grip, nil, S.CFANG(S.RAD(-10), S.RAD(20), S.RAD(10)), S.Sine, 0.15 * animSpeed)
					S.tweenJoint(S.LWeld, nil, S.CF(0.58, 1.63, -1.4) * S.CFANG(S.RAD(-22), S.RAD(20), S.RAD(-60)), S.Sine, 0.15 * animSpeed)--0.25
					S.tweenJoint(S.RWeld, nil, S.CF(0.6, 0.2, -0.61) * S.CFANG(S.RAD(-15), S.RAD(20), S.RAD(25)), S.Sine, 0.2 * animSpeed)
					
					wait(0.2 * animSpeed)
				end
			end;
			
			function()
				if (not S.isNewMag()) then
					local Mag1, _ = S.getMag("Mag1")
					local Mag2, _ = S.getMag("Mag2")
					S.makeMagVisible()
					S.setNewMag()
					if Mag1 then Mag1:Destroy() end
					Mag2:Destroy()
				end
			end;
			
			function()
				if S.isMagEmpty() then
					if S.isNewMag() then
						S.tweenJoint(S.Grip, nil, S.CFANG(S.RAD(-10), S.RAD(20), S.RAD(10)), S.Sine, 0.15 * animSpeed)
						S.tweenJoint(S.LWeld, nil, S.CF(0.58, 1.63, -1.4) * S.CFANG(S.RAD(-22), S.RAD(20), S.RAD(-60)), S.Sine, 0.15 * animSpeed)--0.25
						S.tweenJoint(S.RWeld, nil, S.CF(0.6, 0.2, -0.61) * S.CFANG(S.RAD(-15), S.RAD(20), S.RAD(25)), S.Sine, 0.2 * animSpeed)
					end
					S.tweenJoint(S.LWeld, nil, S.CF(0, 1.3, -0.55) * S.CFANG(S.RAD(-26), 0, 0), S.Sine, 0.2 * animSpeed)
					
					wait(0.2 * animSpeed)
				end
			end;
			
			function()
				if S.isMagEmpty() then
					S.tweenJoint(S.LWeld, nil, S.CF(0.4, 1.6, -0.55) * S.CFANG(S.RAD(-23), 0, S.RAD(-60)), S.Sine, 0.1 * animSpeed)
					
					wait(0.05 * animSpeed)
				end
			end;
			
			function()
				if S.isMagEmpty() then
					S.tweenJoint(S.RWeld, nil, S.CF(0.6, 0.2, -0.61) * S.CFANG(S.RAD(-15), S.RAD(20), S.RAD(20)), S.Sine, 0.05 * animSpeed)
					
					wait(0.15 * animSpeed)
				end
			end;
		}
	end;
	
	Cocking = function(S)
		
	end;
	
	Crawling = function(X, moveDirection, moveSpeed)
		return {
			leftArm = CFrame.Angles(
				0,
				math.rad(90),
				math.rad(-10)
			) * CFrame.new(
				math.sin(moveDirection) * (math.sin(X * 6) / 4) - 0.2,
				math.cos(moveDirection) * (math.sin(X * 6) / 2) - 0.1,
				math.max(math.cos(X * 6) / 4, 0) - 0.1
			) * CFrame.Angles(
				-math.max(math.cos(X * 6) / 4, 0),
				0,
				0
			);
			leftLeg = CFrame.new(
				math.sin(moveDirection) * (-math.sin(X * 6) / 4) - 0.2,
				math.cos(moveDirection) * (math.sin(X * 6) / 2) + 0.3,
				math.max(math.cos(X * 6) / 4, 0) - 0.1
			):inverse() * CFrame.Angles(
				0,
				0,
				-math.rad(15) - math.cos(moveDirection) * (math.rad(15) * math.sin(X * 6))
			);
			rightArm = CFrame.Angles(
				0,
				math.rad(-5),
				math.rad(10)
			) * CFrame.new(
				math.sin(moveDirection) * (-math.sin(X * 6) / 4) + 0.2,
				math.cos(moveDirection) * (-math.sin(X * 6) / 5) - 0.2,
				math.max(math.cos((X + math.rad(30)) * 6) / 10, 0) - 0.1
			) * CFrame.Angles(
				-math.max(math.cos((X + math.rad(30)) * 6) / 10, 0),
				0,
				0
			);
			rightLeg = CFrame.new(
				math.sin(moveDirection) * (math.sin(X * 6) / 4) + 0.2,
				math.cos(moveDirection) * (-math.sin(X * 6) / 2) + 0.3,
				math.max(math.cos((X + math.rad(30)) * 6) / 4, 0) - 0.1
			):inverse() * CFrame.Angles(
				0,
				0,
				math.rad(15) - math.cos(moveDirection) * (math.rad(15) * math.sin(X * 6))
			);
			Grip = CFrame.Angles(
				math.max(math.cos((X + math.rad(30)) * 6) / 7, 0),
				math.rad(5),
				0
			);
			Camera = 1.5 * math.rad(math.cos((X + math.rad(30)) * 6)) + math.rad(0.5); --This is what the roll of the camera will be when you're crawling
		}
	end;
		
	Idling = {
		
		unAimed = function(X)
			return {
				Pos = Vector3.new(
					math.sin(X / 2) / 70,
					math.sin(X * 5 / 4) / 70,
					math.sin(X * 3 / 4) / 70
				);
				Rot = Vector3.new(
					0,
					0,
					0
				);
			}
		end;
		
		Aimed = function(X)
			return {
				Pos = Vector3.new(
					math.sin(X * 3 / 8) / 140,
					math.sin(X * 15 / 16) / 140,
					0
				);
				Rot = Vector3.new(
					0,
					0,
					0
				);
			}
		end;
		
	};
	
	Walking = {
		
		unAimed = function(X)
			return {
				Pos = Vector3.new(
					4 * math.sin(X * 4.5) / 50,
					1.5 * math.sin(X * 9) / 50,
					0
				);
				Rot = Vector3.new(
					0,
					0,
					math.rad(math.sin(X * 4.5)) * 2
				);
			}
		end;
		
		Aimed = function(X)
			return {
				Pos = Vector3.new(
					2 * math.sin(X * 3) / 150,
					0.75 * math.sin(X * 6) / 150,
					0
				);
				Rot = Vector3.new(
					0,
					0,
					math.rad(math.sin(X * 3)) / 3
				);
			}
		end;
		
	};
	
	Running = function(X)
		return {
			Pos = Vector3.new(
				4 * math.sin(X * 4.5 * 1.5) / 30,
				1.5 * math.sin(X * 9 * 1.5) / 40 + 0.2,
				0
			);
			Rot = Vector3.new(
				0,
				-math.rad(math.sin(X * 4.5 * 1.5)) * 5 + math.rad(3),
				math.rad(math.sin(X * 4.5 * 1.5)) * 5
			);
		}
	end;
	
}

return Animations]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX32C69BE799A0494092F4A1650B8453EB">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">serverMain</string>
				<string name="ScriptGuid"></string>
				<ProtectedString name="Source"><![CDATA[local Plyr = script:WaitForChild("Plyr")

local Gun = script.Parent
local Handle = Gun:WaitForChild("Handle")

local V3 = Vector3.new
local CF, CFANG = CFrame.new, CFrame.Angles

local RAD = math.rad

local numLerp = function(A, B, Alpha)
	return A + (B - A) * Alpha
end

local inList = function(Element, List)
	for _, v in pairs(List) do
		if v == Element then
			return true
		end
	end
	return false
end

local getObject = function(Model, Class, Name)
	for _, v in pairs(Model:GetChildren()) do
		if v:IsA(Class) and v.Name == Name then
			return v
		end
	end
	return nil
end

----------------------------------------------------------------------
--------------------[ IGNORE MODEL HANDLING ]-------------------------
----------------------------------------------------------------------

wait(math.random(0, 20) / 40) --This is to prevent more than one ignoreModel from being created

if _G.ignoreCode then --If the ignoreCode already exists, then the script creates the ignoreModel
	--[[
		The purpose of this is so that every gun in a game that uses this gun kit will share one ignoreModel. That way,
		bullet trails, bullet holes, and other fake arms will be ignored by the gun which makes the bullets more likely to
		hit a character part
	--]]
	if (not game.Workspace:FindFirstChild("ignoreModel_".._G.ignoreCode)) then
		local ignoreModel = Instance.new("Model")
		ignoreModel.Name = "ignoreModel_".._G.ignoreCode
		ignoreModel.Parent = game.Workspace
		
		local grenadeFolder = Instance.new("Model")
		grenadeFolder.Name = "grenadeFolder"
		grenadeFolder.Parent = ignoreModel
	
		spawn(function()
			while true do
				ignoreModel.Parent = game.Workspace
				grenadeFolder.Parent = ignoreModel
				wait(1 / 20)
			end
		end)
	end
	
	script.Parent:WaitForChild("clientMain"):WaitForChild("ignoreCode").Value = _G.ignoreCode
else
	--[[
		If there isn't already an ignoreCode, then this creates one. The purpose of it being random is so that if there is
		an ignoreModel for something else in the game, the script won't end up placing the ignored objects in that ignoreModel
	--]]
	_G.ignoreCode = math.random(1, 1e4)
	
	if (not game.Workspace:FindFirstChild("ignoreModel_".._G.ignoreCode)) then
		local ignoreModel = Instance.new("Model")
		ignoreModel.Name = "ignoreModel_".._G.ignoreCode
		ignoreModel.Parent = game.Workspace
		
		local grenadeFolder = Instance.new("Model")
		grenadeFolder.Name = "grenadeFolder"
		grenadeFolder.Parent = ignoreModel
	
		spawn(function()
			while true do
				ignoreModel.Parent = game.Workspace
				grenadeFolder.Parent = ignoreModel
				wait(1 / 20)
			end
		end)
	end
	
	script.Parent:WaitForChild("clientMain"):WaitForChild("ignoreCode").Value = _G.ignoreCode
end

spawn(function()
	--[[
		This function deletes any Player Folders that were left in the ignoreModel because the player left the game without
		deselecting the Gun first
	--]]
	repeat wait() until _G.ignoreCode
	local ignoreModel = game.Workspace:WaitForChild("ignoreModel_".._G.ignoreCode)
	while true do
		for _, gunIgnore in pairs(ignoreModel:GetChildren()) do
			if gunIgnore.Name ~= "grenadeFolder" then
				if (not game.Players:FindFirstChild(gunIgnore.Name:sub(11))) then
					gunIgnore:Destroy()
				end
			end
		end
		wait(1 / 20)
	end
end)

----------------------------------------------------------------------
--------------------[ RESET CAMERA ]----------------------------------
----------------------------------------------------------------------

Gun.ChildRemoved:connect(function(Child)
	if Child == Handle and Plyr.Value then
		local ignoreCode = Gun:WaitForChild("clientMain"):WaitForChild("ignoreCode").Value
		local resetCam = script:WaitForChild("resetCam")
		resetCam:WaitForChild("ignoreCode").Value = ignoreCode
		resetCam.Parent = Plyr.Value.PlayerGui
	end
end)

----------------------------------------------------------------------
--------------------[ GET WELD CFRAMES ]------------------------------
----------------------------------------------------------------------

for _, v in pairs(Gun:GetChildren()) do
	if v:IsA("BasePart") and v ~= Handle then
		if v:FindFirstChild("mainWeld") then v.mainWeld:Destroy() end
		if (not v:FindFirstChild("weldCF")) then
			local weldCF = Instance.new("CFrameValue")
			weldCF.Name = "weldCF"
			weldCF.Value = Handle.CFrame:toObjectSpace(v.CFrame)
			weldCF.Parent = v
		end
		if string.sub(v.Name, 1, 3) == "Mag" then
			if (not v:FindFirstChild("magTrans")) then
				local magTrans = Instance.new("NumberValue")
				magTrans.Name = "magTrans"
				magTrans.Value = v.Transparency
				magTrans.Parent = v
			end
		end
		v.Anchored = true
		v.CanCollide = false
	end
end
Handle.Anchored = false
Handle.CanCollide = true

----------------------------------------------------------------------
--------------------[ GUNSETUP HANDLING ]-----------------------------
----------------------------------------------------------------------

local gunSetup = script:WaitForChild("gunSetup")
function gunSetup.OnServerInvoke(Player, Vars)
	
	--------------------[ CREATING IGNORE MODELS ]--------------------------------
	
	local gunIgnore = Instance.new("Model")
	gunIgnore.Name = "gunIgnore_"..Player.Name
	gunIgnore.Parent = Vars.ignoreModel
	
	--------------------[ MODIFYING THE PLAYER ]----------------------------------
		
	Vars.Humanoid.AutoRotate = false
	
	Vars.Shoulders.Right.Part1 = nil
	Vars.Shoulders.Left.Part1 = nil
	
	local playerFolder = Instance.new("Model")
	playerFolder.Name = "playerFolder"
	playerFolder.Parent = gunIgnore
	
	local headBase = Instance.new("Part")
	headBase.Transparency = 1
	headBase.Name = "headBase"
	headBase.CanCollide = false
	headBase.FormFactor = Enum.FormFactor.Custom
	headBase.Size = V3(0.2, 0.2, 0.2)
	headBase.BottomSurface = Enum.SurfaceType.Smooth
	headBase.TopSurface = Enum.SurfaceType.Smooth
	headBase.Parent = playerFolder
		
	local headWeld = Instance.new("Weld")
	headWeld.Part0 = Vars.Torso
	headWeld.Part1 = headBase
	headWeld.C0 = CF(0, 1.5, 0)
	headWeld.Parent = Vars.Torso
	
	local headWeld2 = Instance.new("Weld")
	headWeld2.Part0 = headBase
	headWeld2.Part1 = Vars.Head
	headWeld2.Parent = headBase
		
	local animBase = Instance.new("Part")
	animBase.Transparency = 1
	animBase.Name = "animBase"
	animBase.CanCollide = false
	animBase.FormFactor = Enum.FormFactor.Custom
	animBase.Size = V3(0.2, 0.2, 0.2)
	animBase.BottomSurface = Enum.SurfaceType.Smooth
	animBase.TopSurface = Enum.SurfaceType.Smooth
	animBase.Parent = playerFolder
	
	local animWeld = Instance.new("Weld")
	animWeld.Part0 = animBase
	animWeld.Part1 = headBase
	animWeld.Parent = animBase
	
	local armBase = Instance.new("Part")
	armBase.Transparency = 1
	armBase.Name = "ArmBase"
	armBase.CanCollide = false
	armBase.FormFactor = Enum.FormFactor.Custom
	armBase.Size = V3(0.2, 0.2, 0.2)
	armBase.BottomSurface = Enum.SurfaceType.Smooth
	armBase.TopSurface = Enum.SurfaceType.Smooth
	armBase.Parent = playerFolder
	
	local ABWeld = Instance.new("Weld")
	ABWeld.Part0 = armBase
	ABWeld.Part1 = animBase
	ABWeld.Parent = armBase
		
	local LArmBase = Instance.new("Part")
	LArmBase.Transparency = 1
	LArmBase.Name = "LArmBase"
	LArmBase.CanCollide = false
	LArmBase.FormFactor = Enum.FormFactor.Custom
	LArmBase.Size = V3(0.2, 0.2, 0.2)
	LArmBase.BottomSurface = Enum.SurfaceType.Smooth
	LArmBase.TopSurface = Enum.SurfaceType.Smooth
	LArmBase.Parent = playerFolder
	
	local RArmBase = Instance.new("Part")
	RArmBase.Transparency = 1
	RArmBase.Name = "RArmBase"
	RArmBase.CanCollide = false
	RArmBase.FormFactor = Enum.FormFactor.Custom
	RArmBase.Size = V3(0.2, 0.2, 0.2)
	RArmBase.BottomSurface = Enum.SurfaceType.Smooth
	RArmBase.TopSurface = Enum.SurfaceType.Smooth
	RArmBase.Parent = playerFolder
	
	local LWeld = Instance.new("Weld")
	LWeld.Name = "LWeld"
	LWeld.Part0 = armBase
	LWeld.Part1 = LArmBase
	LWeld.C0 = Vars.armC0[1]
	LWeld.C1 = Vars.leftArmC1
	LWeld.Parent = armBase
	
	local RWeld = Instance.new("Weld")
	RWeld.Name = "RWeld"
	RWeld.Part0 = armBase
	RWeld.Part1 = RArmBase
	RWeld.C0 = Vars.armC0[2]
	RWeld.C1 = Vars.rightArmC1
	RWeld.Parent = armBase
	
	local LWeld2 = Instance.new("Weld")
	LWeld2.Name = "LWeld"
	LWeld2.Part0 = LArmBase
	LWeld2.Part1 = Vars.LArm
	LWeld2.Parent = LArmBase
	
	local RWeld2 = Instance.new("Weld")
	RWeld2.Name = "RWeld"
	RWeld2.Part0 = RArmBase
	RWeld2.Part1 = Vars.RArm
	RWeld2.Parent = RArmBase
	
	local LLegWeld = Instance.new("Weld")
	LLegWeld.Name = "LLegWeld"
	LLegWeld.Part0 = Vars.Torso
	LLegWeld.Part1 = nil
	LLegWeld.C0 = CF(-0.5, -2, 0)
	LLegWeld.Parent = Vars.Torso
	
	local RLegWeld = Instance.new("Weld")
	RLegWeld.Name = "RLegWeld"
	RLegWeld.Part0 = Vars.Torso
	RLegWeld.Part1 = nil
	RLegWeld.C0 = CF(0.5, -2, 0)
	RLegWeld.Parent = Vars.Torso
	
	for _, Tab in pairs(Vars.gunParts) do
		Tab.Obj.Anchored = false
		local Weld = Instance.new("Weld")
		Weld.Name = "mainWeld"
		Weld.Part0 = Vars.Handle
		Weld.Part1 = Tab.Obj
		Weld.C0 = Tab.Obj.weldCF.Value
		Weld.Parent = Vars.Handle
		Tab.Weld = Weld
	end
	
	return gunIgnore, playerFolder, headWeld, headWeld2, animWeld, ABWeld, LWeld, RWeld, LWeld2, RWeld2, LLegWeld, RLegWeld, Vars.gunParts
end

----------------------------------------------------------------------
--------------------[ TWEENJOINT HANDLING ]---------------------------
----------------------------------------------------------------------

local createTweenIndicator = script:WaitForChild("createTweenIndicator")
function createTweenIndicator.OnServerInvoke(_, Joint, newCode)
	local tweenIndicator = nil
	if (not Joint:findFirstChild("tweenCode")) then --If the joint isn't being tweened, then
		tweenIndicator = Instance.new("IntValue")
		tweenIndicator.Name = "tweenCode"
		tweenIndicator.Value = newCode
		tweenIndicator.Parent = Joint
	else
		tweenIndicator = Joint.tweenCode
		tweenIndicator.Value = newCode --If the joint is already being tweened, this will change the code, and the tween loop will stop
	end
	return tweenIndicator
end

local lerpCF = script:WaitForChild("lerpCF")
function lerpCF.OnServerInvoke(_, Joint, Prop, startCF, endCF, Alpha)
	spawn(function()
		Joint[Prop] = startCF:lerp(endCF, Alpha)
	end)
end

local deleteTweenIndicator = script:WaitForChild("deleteTweenIndicator")
function deleteTweenIndicator.OnServerInvoke(_, tweenIndicator, newCode)
	if tweenIndicator.Value == newCode then --If this tween functions was the last one called on a joint then it will remove the code
		tweenIndicator:Destroy()
	end
end

----------------------------------------------------------------------
--------------------[ BULLET IMPACT HANDLING ]------------------------
----------------------------------------------------------------------

local createBulletImpact = script:WaitForChild("createBulletImpact")
createBulletImpact.OnServerEvent:connect(function(_, H, P, N, D, humanoidFound, gunIgnore, S)
	local surfaceCF = CF(P, P + N)
	----------------------------------------------------------------------------------
	--Creating the bullet hole--------------------------------------------------------
	----------------------------------------------------------------------------------
	if S.bulletHoles and (not humanoidFound) then
		local Hole = Instance.new("Part")
		Hole.Transparency = 1
		Hole.Anchored = true
		Hole.CanCollide = false
		Hole.FormFactor = "Custom"
		Hole.Size = V3(1, 1, 0.2)
		Hole.TopSurface = 0
		Hole.BottomSurface = 0
		local Mesh = Instance.new("BlockMesh")
		Mesh.Offset = V3(0, 0, -0.05)
		Mesh.Scale = V3(S.holeSettings.Size, S.holeSettings.Size, 0)
		Mesh.Parent = Hole
		local Decal = Instance.new("Decal")
		Decal.Face = Enum.NormalId.Front
		Decal.Texture = S.holeSettings.Texture
		Decal.Parent = Hole
		Hole.Parent = gunIgnore
		Hole.CFrame = surfaceCF
		if (not H.Anchored) then
			local Weld = Instance.new("Weld", Hole)
			Weld.Part0 = H
			Weld.Part1 = Hole
			Weld.C0 = H.CFrame:toObjectSpace(surfaceCF)
			Hole.Anchored = false
		end
		delay(S.holeSettings.visibleTime, function()
			if S.holeSettings.disappearTime > 0 then
				local t0 = tick()
				while true do
					local Alpha = math.min((tick() - t0) / S.holeSettings.disappearTime, 1)
					Decal.Transparency = numLerp(0, 1, Alpha)
					if Alpha == 1 then break end
					wait()
				end
				Hole:Destroy()
			else
				Hole:Destroy()
			end
		end)
	end
	----------------------------------------------------------------------------------
	--Creating the spark effect-------------------------------------------------------
	----------------------------------------------------------------------------------
	if S.bulletSparks and (not humanoidFound) and inList(H.Material, S.sparkSettings.Materials) then
		local Sparks = Instance.new("Part")
		Sparks.Transparency = 1
		Sparks.Anchored = true
		Sparks.CanCollide = false
		Sparks.FormFactor = "Custom"
		Sparks.Size = V3(1, 1, 1)
		Sparks.TopSurface = 0
		Sparks.BottomSurface = 0
		
		local Particles = nil
		if S.customSparks then
			Particles = getObject(game.ServerStorage, "ParticleEmitter", "bulletSpark"):Clone()
		else
			Particles = Instance.new("ParticleEmitter")
			Particles.Color = ColorSequence.new(S.sparkSettings.Color.Start, S.sparkSettings.Color.End)
			Particles.LightEmission = 1
			Particles.Size = NumberSequence.new(
				{
					NumberSequenceKeypoint.new(0, S.sparkSettings.Size, 0.25);
					NumberSequenceKeypoint.new(1, 0);
				}
			)
			Particles.Texture = S.sparkSettings.Texture
			Particles.Transparency = NumberSequence.new(0)
			Particles.Acceleration = V3(0, -196.2, 0)
			Particles.EmissionDirection = Enum.NormalId.Front
			Particles.Lifetime = NumberRange.new(S.sparkSettings.Lifetime - 0.05, S.sparkSettings.Lifetime + 0.05)
			Particles.Rate = S.sparkSettings.Rate
			Particles.Rotation = NumberRange.new(0, 360)
			Particles.Speed = NumberRange.new(S.sparkSettings.Speed - 5, S.sparkSettings.Speed + 5)
			Particles.VelocitySpread = S.sparkSettings.Spread
		end
		Particles.Parent = Sparks
		
		Sparks.Parent = gunIgnore
		Sparks.CFrame = surfaceCF
		if (not H.Anchored) then
			local Weld = Instance.new("Weld", Sparks)
			Weld.Part0 = H
			Weld.Part1 = Sparks
			Weld.C0 = H.CFrame:toObjectSpace(surfaceCF)
			Sparks.Anchored = false
		end
		delay(0.1, function()
			Particles.Enabled = false
			wait(Particles.Lifetime.Max)
			Sparks:Destroy()
		end)
	end
	----------------------------------------------------------------------------------
	--Creating the smoke effect-------------------------------------------------------
	----------------------------------------------------------------------------------
	if S.bulletSmoke and (not humanoidFound) then
		local Smoke = Instance.new("Part")
		Smoke.Transparency = 1
		Smoke.Anchored = true
		Smoke.CanCollide = false
		Smoke.FormFactor = "Custom"
		Smoke.Size = V3(1, 1, 1)
		Smoke.TopSurface = 0
		Smoke.BottomSurface = 0
		
		local Particles = Instance.new("ParticleEmitter")
		Particles.Color = ColorSequence.new(S.smokeSettings.objColor and H.Color or S.smokeSettings.Color)
		Particles.LightEmission = 0
		Particles.Size = NumberSequence.new(
			{
				NumberSequenceKeypoint.new(0, S.smokeSettings.Size.Start);
				NumberSequenceKeypoint.new(1, S.smokeSettings.Size.End);
			}
		)
		Particles.Texture = S.smokeSettings.Texture
		Particles.Transparency = NumberSequence.new(
			{
				NumberSequenceKeypoint.new(0, S.smokeSettings.startTransparency);
				NumberSequenceKeypoint.new(0.5, 0.75 * S.smokeSettings.startTransparency + 0.25);
				NumberSequenceKeypoint.new(1, 1);
			}
		)
		Particles.Acceleration = V3(0, -196.2, 0)
		Particles.EmissionDirection = Enum.NormalId.Front
		Particles.Lifetime = NumberRange.new(S.smokeSettings.Lifetime - 0.05, S.smokeSettings.Lifetime + 0.05)
		Particles.Rate = S.smokeSettings.Rate
		Particles.Rotation = NumberRange.new(0, 360)
		Particles.RotSpeed = NumberRange.new(10)
		Particles.Speed = NumberRange.new(S.smokeSettings.Speed - 5, S.smokeSettings.Speed + 5)
		Particles.VelocitySpread = S.smokeSettings.Spread
		Particles.Parent = Smoke
		
		Smoke.Parent = gunIgnore
		Smoke.CFrame = surfaceCF
		if (not H.Anchored) then
			local Weld = Instance.new("Weld", Smoke)
			Weld.Part0 = H
			Weld.Part1 = Smoke
			Weld.C0 = H.CFrame:toObjectSpace(surfaceCF)
			Smoke.Anchored = false
		end
		delay(0.1, function()
			Particles.Enabled = false
			wait(S.smokeSettings.Lifetime + 0.05)
			Smoke:Destroy()
		end)
	end
end)

----------------------------------------------------------------------
--------------------[ SHOCKWAVE HANDLING ]----------------------------
----------------------------------------------------------------------

local createShockwave = script:WaitForChild("createShockwave")
createShockwave.OnServerEvent:connect(function(_, Center, Radius, gunIgnore, S)
	local Shockwave = Instance.new("Part")
	Shockwave.BrickColor = S.shockwaveSettings.Color
	Shockwave.Material = Enum.Material.SmoothPlastic
	Shockwave.Name = "Shockwave"
	Shockwave.Anchored = true
	Shockwave.CanCollide = false
	Shockwave.FormFactor = Enum.FormFactor.Symmetric
	Shockwave.Size = V3(1, 1, 1)
	Shockwave.BottomSurface = Enum.SurfaceType.Smooth
	Shockwave.TopSurface = Enum.SurfaceType.Smooth
	local Mesh = Instance.new("SpecialMesh")
	Mesh.MeshType = Enum.MeshType.Sphere
	Mesh.Scale = V3()
	Mesh.Parent = Shockwave
	Shockwave.Parent = gunIgnore
	Shockwave.CFrame = CF(Center)
	spawn(function()
		local t0 = tick()
		while true do
			local Alpha = math.min((tick() - t0) / S.shockwaveSettings.Duration, 1)
			local Scale = 2 * Radius * Alpha
			Mesh.Scale = V3(Scale, Scale, Scale)
			Shockwave.Transparency = Alpha
			if Alpha == 1 then break end
			wait()
		end
		Shockwave:Destroy()
	end)
end)

----------------------------------------------------------------------
--------------------[ BLOOD HANDLING ]--------------------------------
----------------------------------------------------------------------

local createBlood = script:WaitForChild("createBlood")
createBlood.OnServerEvent:connect(function(_, H, P, D, gunIgnore, S)
	local bloodCF = CF(P, P + D) * CFANG(RAD(-90), 0, 0)
	local Blood = Instance.new("Part")
	Blood.Transparency = 1
	Blood.Anchored = true
	Blood.CanCollide = false
	Blood.FormFactor = "Custom"
	Blood.Size = V3(0.2, 1, 0.2)
	Blood.TopSurface = 0
	Blood.BottomSurface = 0
	
	local Particles = Instance.new("ParticleEmitter")
	Particles.Color = ColorSequence.new(S.bloodSettings.Color)
	Particles.LightEmission = 0
	Particles.Size = NumberSequence.new(S.bloodSettings.Size)
	Particles.Texture = S.bloodSettings.Texture
	Particles.Transparency = NumberSequence.new(
		{
			NumberSequenceKeypoint.new(0, S.bloodSettings.startTransparency);
			NumberSequenceKeypoint.new(1, 1);
		}
	)
	Particles.EmissionDirection = Enum.NormalId.Top
	Particles.Lifetime = NumberRange.new(S.bloodSettings.Lifetime - 0.05, S.bloodSettings.Lifetime + 0.05)
	Particles.Rate = S.bloodSettings.Rate
	Particles.Rotation = NumberRange.new(0, 90)
	Particles.Speed = NumberRange.new(S.bloodSettings.Speed)
	Particles.VelocitySpread = S.bloodSettings.Spread
	Particles.Parent = Blood
	
	Blood.Parent = gunIgnore
	Blood.CFrame = bloodCF
	if (not H.Anchored) then
		local Weld = Instance.new("Weld", Blood)
		Weld.Part0 = H
		Weld.Part1 = Blood
		Weld.C0 = H.CFrame:toObjectSpace(bloodCF)
		Blood.Anchored = false
	end
	delay(0.15, function()
		Particles.Enabled = false
		wait(S.bloodSettings.Lifetime + 0.05)
		Blood:Destroy()
	end)
end)

----------------------------------------------------------------------
--------------------[ TRAIL HANDLING ]--------------------------------
----------------------------------------------------------------------

local createTrail = script:WaitForChild("createTrail")
createTrail.OnServerEvent:connect(function(_, Origin, P, gunIgnore, S)
	local Trail = Instance.new("Part")
	Trail.BrickColor = S.trailSettings.Color
	Trail.Transparency = S.trailSettings.Transparency
	Trail.Anchored = true
	Trail.CanCollide = false
	Trail.Size = V3(1, 1, 1)
	local Mesh = Instance.new("CylinderMesh")
	Mesh.Offset = V3(0, -(P - Origin).magnitude / 2, 0)
	Mesh.Scale = V3(S.trailSettings.Thickness, (P - Origin).magnitude, S.trailSettings.Thickness)
	Mesh.Parent = Trail
	Trail.Parent = gunIgnore
	Trail.CFrame = CF(Origin, P) * CFANG(RAD(90), 0, 0)
	delay(S.trailSettings.visibleTime, function()
		if S.trailSettings.disappearTime > 0 then
			local t0 = tick()
			while true do
				local Alpha = math.min((tick() - t0) / S.trailSettings.disappearTime, 1)
				Trail.Transparency = numLerp(S.trailSettings.Transparency, 1, Alpha)
				if Alpha == 1 then break end
				wait()
			end
			Trail:Destroy()
		else
			Trail:Destroy()
		end
	end)
end)]]></ProtectedString>
			</Properties>
			<Item class="ObjectValue" referent="RBX123B7FF5829548099F9777403A33776A">
				<Properties>
					<string name="Name">Plyr</string>
					<Ref name="Value">null</Ref>
				</Properties>
			</Item>
			<Item class="RemoteFunction" referent="RBX9CB5325BDC7645268F8157B99620EEC8">
				<Properties>
					<string name="Name">getWeldCF</string>
				</Properties>
			</Item>
			<Item class="RemoteFunction" referent="RBX2BF83344E3EE40438E9D859DF5DE6C0E">
				<Properties>
					<string name="Name">gunSetup</string>
				</Properties>
			</Item>
			<Item class="RemoteFunction" referent="RBXC803E699CB114F07B116A27F4FD3F0DA">
				<Properties>
					<string name="Name">tweenJoint</string>
				</Properties>
			</Item>
			<Item class="RemoteEvent" referent="RBX3F06BA9107464E39A7B8C3E7D8FA15CA">
				<Properties>
					<string name="Name">onRenderStep</string>
				</Properties>
			</Item>
			<Item class="RemoteFunction" referent="RBX5230BD1FC925460CBA988A0319BFDD89">
				<Properties>
					<string name="Name">createTweenIndicator</string>
				</Properties>
			</Item>
			<Item class="RemoteFunction" referent="RBXEACD9B6D1A33468FB2E4842260ADBE42">
				<Properties>
					<string name="Name">deleteTweenIndicator</string>
				</Properties>
			</Item>
			<Item class="RemoteFunction" referent="RBXBE5F7B68C6C94393A3FDE68C03F30024">
				<Properties>
					<string name="Name">lerpCF</string>
				</Properties>
			</Item>
			<Item class="LocalScript" referent="RBX274DDB508F4F42F49B53A64D5F8DE5EE">
				<Properties>
					<bool name="Disabled">false</bool>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">resetCam</string>
					<string name="ScriptGuid"></string>
					<ProtectedString name="Source"><![CDATA[repeat wait() until game.Players.LocalPlayer.Character

local Player = game.Players.LocalPlayer
local Char = Player.Character
local Humanoid = Char:WaitForChild("Humanoid")

local Cam = game.Workspace.CurrentCamera
local UIS = game:GetService("UserInputService")

local ignoreCode = script:WaitForChild("ignoreCode")
repeat wait() until ignoreCode.Value ~= 0
local ignoreModel = game.Workspace:WaitForChild("ignoreModel_"..ignoreCode.Value)
local gunIgnore = ignoreModel:FindFirstChild("gunIgnore_"..Player.Name)

Cam.FieldOfView = 70
Cam.CameraType = Enum.CameraType.Custom
Cam:ClearAllChildren()

UIS.MouseBehavior = Enum.MouseBehavior.Default
UIS.MouseIconEnabled = true

Player.CameraMode = Enum.CameraMode.Classic

Humanoid.WalkSpeed = 16
Humanoid.AutoRotate = true

if gunIgnore then gunIgnore:Destroy() end]]></ProtectedString>
				</Properties>
				<Item class="IntValue" referent="RBXB188FC7995CF4695B89B29387524EBEB">
					<Properties>
						<string name="Name">ignoreCode</string>
						<int name="Value">0</int>
					</Properties>
				</Item>
			</Item>
			<Item class="RemoteEvent" referent="RBXE86ABBEDAA6F4AEF97296F2905BB4912">
				<Properties>
					<string name="Name">createBulletImpact</string>
				</Properties>
			</Item>
			<Item class="RemoteEvent" referent="RBXC844C357BB1743289E4759A407FBA96C">
				<Properties>
					<string name="Name">createShockwave</string>
				</Properties>
			</Item>
			<Item class="RemoteEvent" referent="RBX77653B2F1E9942B5A27036F69DA37B71">
				<Properties>
					<string name="Name">createBlood</string>
				</Properties>
			</Item>
			<Item class="RemoteEvent" referent="RBX70BA90C2B75A4998A43C765EE2D17A11">
				<Properties>
					<string name="Name">createTrail</string>
				</Properties>
			</Item>
		</Item>
		<Item class="IntValue" referent="RBX3270B5235A4A4E108ADD3EFF17F5348A">
			<Properties>
				<string name="Name">ClipSize</string>
				<int name="Value">50</int>
			</Properties>
		</Item>
		<Item class="Script" referent="RBX4EFFE8A26F0F428781259F77910C781D">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Credits</string>
				<string name="ScriptGuid"></string>
				<ProtectedString name="Source"><![CDATA[--[[
	     ______   ______           __          ______           _                ______
	    / _/ _/  /_  __/_  _______/ /_  ____  / ____/_  _______(_)___  ____     /  /  /
	   / // /     / / / / / / ___/ __ \/ __ \/ /_  / / / / ___/ / __ \/ __ \    / // / 
	  / // /     / / / /_/ / /  / /_/ / /_/ / __/ / /_/ (__  ) / /_/ / / / /   / // /  
	 / // /     /_/  \__,_/_/  /_.___/\____/_/    \__,_/____/_/\____/_/ /_/  _/ // /   
	/__/__/                                                                 /__/__/    
	
--]]]]></ProtectedString>
			</Properties>
		</Item>
		<Item class="Part" referent="RBX46D3AED0209C4F93B97BE673548887A9">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">194</int>
				<CoordinateFrame name="CFrame">
					<X>131.412003</X>
					<Y>0.628761411</Y>
					<Z>-185.781723</Z>
					<R00>4.53311713e-007</R00>
					<R01>-0.000600141415</R01>
					<R02>0.999999881</R02>
					<R10>-1</R10>
					<R11>2.48030005e-006</R11>
					<R12>4.54800357e-007</R12>
					<R20>-2.48057245e-006</R20>
					<R21>-0.999999821</R21>
					<R22>-0.000600141415</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">272</token>
				<string name="Name">BoltBack</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">1</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.200000003</X>
					<Y>0.224999994</Y>
					<Z>0.200000003</Z>
				</Vector3>
			</Properties>
			<Item class="CylinderMesh" referent="RBX9981621E98524A609F57672D7232D373">
				<Properties>
					<float name="Bevel">0</float>
					<float name="Bevel Roundness">0</float>
					<float name="Bulge">0</float>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.28125</X>
						<Y>1</Y>
						<Z>0.28125</Z>
					</Vector3>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="Part" referent="RBX330D1F180033491E83621865498D6F3C">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">1003</int>
				<CoordinateFrame name="CFrame">
					<X>130.376968</X>
					<Y>0.690637171</Y>
					<Z>-185.793732</Z>
					<R00>-0.000600108877</R00>
					<R01>-5.76344632e-007</R01>
					<R02>1.00000167</R02>
					<R10>3.08065728e-006</R10>
					<R11>1.00000703</R11>
					<R12>5.95516951e-007</R12>
					<R20>-0.999992907</R20>
					<R21>3.16582191e-006</R21>
					<R22>-0.000591915101</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">272</token>
				<string name="Name">Main</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">1</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.200000003</X>
					<Y>0.200000003</Y>
					<Z>0.200000003</Z>
				</Vector3>
			</Properties>
			<Item class="BlockMesh" referent="RBX50BC31342BC54254B28FCD87B6DC2F8E">
				<Properties>
					<float name="Bevel">0</float>
					<float name="Bevel Roundness">0</float>
					<float name="Bulge">0</float>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.28125</X>
						<Y>0.140625</Y>
						<Z>0.28125</Z>
					</Vector3>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="PointLight" referent="RBXBEEB8B3C6B8E479A9B2AEEF7DA24AE87">
				<Properties>
					<float name="Brightness">10</float>
					<Color3 name="Color">4294967167</Color3>
					<bool name="Enabled">false</bool>
					<string name="Name">FlashFX[Light]</string>
					<float name="Range">6</float>
					<bool name="Shadows">true</bool>
				</Properties>
			</Item>
			<Item class="ParticleEmitter" referent="RBX0E6D2C9948E54FE797FC5EE37CDB5F94">
				<Properties>
					<Vector3 name="Acceleration">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<ColorSequence name="Color">0 0.27451 0.27451 0.27451 0 1 0.27451 0.27451 0.27451 0 </ColorSequence>
					<float name="Drag">0</float>
					<token name="EmissionDirection">5</token>
					<bool name="Enabled">false</bool>
					<NumberRange name="Lifetime">1.25 1.5 </NumberRange>
					<float name="LightEmission">0.100000001</float>
					<bool name="LockedToPart">false</bool>
					<string name="Name">1FlashFX[Smoke]</string>
					<float name="Rate">20</float>
					<NumberRange name="RotSpeed">10 10 </NumberRange>
					<NumberRange name="Rotation">0 360 </NumberRange>
					<NumberSequence name="Size">0 1 0 1 3 0 </NumberSequence>
					<NumberRange name="Speed">5 7 </NumberRange>
					<Content name="Texture"><url>http://www.roblox.com/asset/?id=244514423</url></Content>
					<NumberSequence name="Transparency">0 0 0 1 0 0 </NumberSequence>
					<float name="VelocityInheritance">0</float>
					<float name="VelocitySpread">0</float>
					<float name="ZOffset">0</float>
				</Properties>
			</Item>
			<Item class="ParticleEmitter" referent="RBXE8D8B8D3A67447E2A1B2C309574B7385">
				<Properties>
					<Vector3 name="Acceleration">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<ColorSequence name="Color">0 1 1 0.498039 0 1 1 1 0.498039 0 </ColorSequence>
					<float name="Drag">0</float>
					<token name="EmissionDirection">5</token>
					<bool name="Enabled">false</bool>
					<NumberRange name="Lifetime">0.05 0.075 </NumberRange>
					<float name="LightEmission">1</float>
					<bool name="LockedToPart">false</bool>
					<string name="Name">FlashFX[Flash]</string>
					<float name="Rate">1000</float>
					<NumberRange name="RotSpeed">0 0 </NumberRange>
					<NumberRange name="Rotation">0 90 </NumberRange>
					<NumberSequence name="Size">0 1 0 1 1 0 </NumberSequence>
					<NumberRange name="Speed">10 10 </NumberRange>
					<Content name="Texture"><url>rbxassetid://134531489</url></Content>
					<NumberSequence name="Transparency">0 0 0 1 0 0 </NumberSequence>
					<float name="VelocityInheritance">0</float>
					<float name="VelocitySpread">0</float>
					<float name="ZOffset">0</float>
				</Properties>
			</Item>
		</Item>
		<Item class="IntValue" referent="RBXD2B7BDE014A04FB2BE70F0B313816574">
			<Properties>
				<string name="Name">Ammo</string>
				<int name="Value">50</int>
			</Properties>
		</Item>
		<Item class="IntValue" referent="RBX5496CFDEA9424BDB9E8E2D6AFA567864">
			<Properties>
				<string name="Name">StoredAmmo</string>
				<int name="Value">950</int>
			</Properties>
		</Item>
		<Item class="Part" referent="RBXBB5E279C458249F8847457EEA86DD0A6">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">26</int>
				<CoordinateFrame name="CFrame">
					<X>132.174713</X>
					<Y>0.801264107</Y>
					<Z>-185.79213</Z>
					<R00>-0.000600141415</R00>
					<R01>-4.53413492e-007</R01>
					<R02>0.999999881</R02>
					<R10>2.31070703e-006</R10>
					<R11>1</R11>
					<R12>4.54800357e-007</R12>
					<R20>-0.999999821</R20>
					<R21>2.31097965e-006</R21>
					<R22>-0.000600141415</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">256</token>
				<string name="Name">Mag</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.200000003</X>
					<Y>0.200000003</Y>
					<Z>0.200000003</Z>
				</Vector3>
			</Properties>
			<Item class="CylinderMesh" referent="RBX486A320C39474C838DB56920756CC6EE">
				<Properties>
					<float name="Bevel">0</float>
					<float name="Bevel Roundness">0</float>
					<float name="Bulge">0</float>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.5625</X>
						<Y>0.449999928</Y>
						<Z>0.5625</Z>
					</Vector3>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="Part" referent="RBX84B69DD9C9424918AD054A48EEED9162">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">4</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">199</int>
				<CoordinateFrame name="CFrame">
					<X>131.796295</X>
					<Y>1.18709111</Y>
					<Z>-185.781921</Z>
					<R00>-0.000600141415</R00>
					<R01>-4.53413492e-007</R01>
					<R02>0.999999881</R02>
					<R10>2.31070703e-006</R10>
					<R11>1</R11>
					<R12>4.54800357e-007</R12>
					<R20>-0.999999821</R20>
					<R21>2.31097965e-006</R21>
					<R22>-0.000600141415</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">272</token>
				<string name="Name">AimPart</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">3</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">1</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">1</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>0.200000003</X>
					<Y>0.200000003</Y>
					<Z>0.200000003</Z>
				</Vector3>
			</Properties>
			<Item class="BlockMesh" referent="RBXC22E191E05F742A2AB4366156B516691">
				<Properties>
					<float name="Bevel">0</float>
					<float name="Bevel Roundness">0</float>
					<float name="Bulge">0</float>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>0.5625</X>
						<Y>0.140625</Y>
						<Z>0.28125</Z>
					</Vector3>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="MeshPart" referent="RBX1B62D4ECEB0944BC81A2E5A5FD9A89BB">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">26</int>
				<CoordinateFrame name="CFrame">
					<X>131.133011</X>
					<Y>0.640958369</Y>
					<Z>-185.755737</Z>
					<R00>0.0227972772</R00>
					<R01>2.98129038e-007</R01>
					<R02>-0.999740183</R02>
					<R10>1.90538458e-006</R10>
					<R11>1</R11>
					<R12>3.41655436e-007</R12>
					<R20>0.999740183</R20>
					<R21>-1.91267827e-006</R21>
					<R22>0.0227972809</R22>
				</CoordinateFrame>
				<bool name="CanCollide">false</bool>
				<token name="CollisionFidelity">0</token>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<Vector3 name="InitialSize">
					<X>234.87999</X>
					<Y>83.9500122</Y>
					<Z>464.109924</Z>
				</Vector3>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">1088</token>
				<Content name="MeshID"><url>rbxassetid://431269367</url></Content>
				<string name="Name">Bolt</string>
				<BinaryString name="PhysicsData"><![CDATA[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
AAABAAAABQAAAAYAAAAFAAAAAgAAAAcAAAAEAAAAAAAAAAcAAAAFAAAABAAAAAgAAAAFAAAA
BwAAAAgAAAACAAAABQAAAAkAAAAAAAAAAgAAAAkAAAAHAAAAAAAAAAkAAAAIAAAABwAAAAoA
AAACAAAACAAAAAoAAAAIAAAACQAAAAoAAAAJAAAAAgAAABAAAAAAAAAAAAAAAAAAAAAAAAAA
EAAAAAAAAAAAAAAAAAAAAAAAgD8hAAAABAAAAA6sxkK8efXBEw7oQh6FpkLFf6O7jgquQlN4
wkIAgKO7Ew7oQh6Fh0LTzMPBEw7oQvf/lUIAgKO7Ew7oQh6Fh0LUzMPBjgquQh6FpkLkeqvB
jgquQjLSmULsdQbCEw7oQqNwoELUzMPBjgquQrYpxEJMSQLCEw7oQmFGrUI4/ATCEw7oQjYA
AAAAAAAAAQAAAAIAAAADAAAAAAAAAAIAAAAEAAAAAQAAAAUAAAAEAAAABQAAAAMAAAAEAAAA
AgAAAAEAAAAEAAAAAwAAAAIAAAAGAAAABQAAAAEAAAAGAAAAAQAAAAAAAAAHAAAAAAAAAAMA
AAAHAAAAAwAAAAUAAAAIAAAABwAAAAUAAAAIAAAABQAAAAYAAAAJAAAABgAAAAAAAAAJAAAA
CAAAAAYAAAAJAAAAAAAAAAcAAAAKAAAABwAAAAgAAAAKAAAACAAAAAkAAAAKAAAACQAAAAcA
AAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/IQAAAAQAAACiqcbC
vHn1wRMO6EKAz5nC7HUGwhMO6ELZ+pXCAICjuxMO6ELsdcLCAICjuxMO6EIihabCAICju44K
rkIfhYfC1MzDwY4KrkKmcKDC1MzDwY4KrkIfhYfC08zDwRMO6EIihabC5HqrwY4KrkJMJ8TC
TEkCwhMO6EJBQa3COPwEwhMO6EI2AAAAAAAAAAEAAAACAAAAAwAAAAAAAAACAAAAAwAAAAIA
AAAEAAAAAwAAAAQAAAAAAAAABQAAAAYAAAAEAAAABQAAAAQAAAACAAAABQAAAAEAAAAGAAAA
BwAAAAIAAAABAAAABwAAAAEAAAAFAAAABwAAAAUAAAACAAAACAAAAAAAAAAEAAAACAAAAAQA
AAAGAAAACQAAAAAAAAAIAAAACQAAAAgAAAAGAAAACQAAAAEAAAAAAAAACgAAAAYAAAABAAAA
CgAAAAEAAAAJAAAACgAAAAkAAAAGAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAA
AAAAAAAAAACAPz8AAAAEAAAAjULFQgKgo7sc7upCj0KUQgKgo7u3h+lCNjfIQgGgo7vMCBFD
SITJQiSb+MHMCBFDC9eZQvosDsLMCBFDIAXKQmBm9cEc7upCHoWmQgKgo7vMCBFDIIWHQtLM
w8HMCBFDIIWHQtXMw8ESDuhC2FTFQmgXCcLMCBFDjULFQiAFCcIc7upCj0KUQuD6BsIoRe9C
C9eZQtgjDsIc7upCMtKZQux1BsISDuhCVXjCQgKgo7sSDuhCDqzGQr559cESDuhCaVSUQs4D
B8LMCBFD+f+VQgKgo7sSDuhCUTjIQoCfo7s4kwRDtinEQkxJAsISDuhCY0atQjj8BMISDuhC
cgAAAAAAAAABAAAAAgAAAAMAAAACAAAABAAAAAMAAAAFAAAAAgAAAAYAAAAEAAAAAgAAAAYA
AAACAAAAAQAAAAcAAAAEAAAABgAAAAcAAAAGAAAAAQAAAAgAAAAHAAAAAQAAAAkAAAADAAAA
BAAAAAkAAAAFAAAAAwAAAAkAAAAKAAAABQAAAAsAAAAHAAAACAAAAAwAAAAIAAAADQAAAAwA
AAALAAAACAAAAAwAAAAEAAAACwAAAAwAAAAKAAAACQAAAAwAAAAJAAAABAAAAA4AAAANAAAA
CAAAAA4AAAAAAAAABQAAAA4AAAABAAAAAAAAAA8AAAANAAAADgAAAA8AAAAOAAAABQAAAA8A
AAAFAAAACgAAABAAAAAEAAAABwAAABAAAAAHAAAACwAAABAAAAALAAAABAAAABEAAAAIAAAA
AQAAABEAAAABAAAADgAAABEAAAAOAAAACAAAABIAAAACAAAABQAAABIAAAAFAAAAAAAAABIA
AAAAAAAAAgAAABMAAAANAAAADwAAABMAAAAPAAAACgAAABMAAAAKAAAADAAAABQAAAAMAAAA
DQAAABQAAAANAAAAEwAAABQAAAATAAAADAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA
AAAAAAAAAAAAAAAAgD8/AAAABAAAAEuEycIkm/jBzAgRQ37WmcL6LA7CzAgRQyKFpsICoKO7
zAgRQ+x1wsICoKO7Eg7oQiCFh8LVzMPBEg7oQkwnxMJMSQLCEg7oQnI9lMICoKO7t4fpQjo3
yMIBoKO7zAgRQyCFh8LSzMPBzAgRQyEFysJgZvXBHO7qQklQxcJoFwnCzAgRQ+rRmcLYIw7C
HO7qQpFCxcIgBQnCHO7qQpFCxcICoKO7H+7qQoDPmcLsdQbCEg7oQpNClMLg+gbCKEXvQvRP
lMLOAwfCzAgRQ9n6lcICoKO7Eg7oQlU4yMICoKO7OJMEQ6KpxsK+efXBEg7oQkFBrcI4/ATC
Eg7oQnIAAAAAAAAAAQAAAAIAAAADAAAABAAAAAUAAAAGAAAAAwAAAAIAAAAHAAAAAAAAAAIA
AAAHAAAAAgAAAAMAAAAIAAAABAAAAAYAAAAIAAAABgAAAAIAAAAIAAAAAgAAAAEAAAAJAAAA
AAAAAAcAAAAKAAAAAAAAAAkAAAAKAAAACwAAAAEAAAAKAAAAAQAAAAAAAAAMAAAABQAAAAsA
AAAMAAAACwAAAAoAAAAMAAAACQAAAAUAAAAMAAAACgAAAAkAAAANAAAABwAAAAMAAAANAAAA
AwAAAAkAAAAOAAAABQAAAAQAAAAOAAAABAAAAAsAAAAPAAAAAQAAAAsAAAAPAAAABAAAAAgA
AAAPAAAACwAAAAQAAAAQAAAACAAAAAEAAAAQAAAAAQAAAA8AAAAQAAAADwAAAAgAAAARAAAA
BAAAAAMAAAARAAAAAwAAAAYAAAARAAAABgAAAAQAAAASAAAACQAAAAcAAAASAAAABwAAAA0A
AAASAAAADQAAAAkAAAATAAAAAwAAAAUAAAATAAAABQAAAAkAAAATAAAACQAAAAMAAAAUAAAA
CwAAAAUAAAAUAAAABQAAAA4AAAAUAAAADgAAAAsAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAA
AAAAAAAAAAAAAAAAAAAAAIA/PwAAAAQAAAAghYdCPFySQcwIEUM2N8hC/5+ju8wIEUPYVMVC
Rw4JQswIEUONQsVCAKCjuxzu6kL5/5VCAACjuxIO6EIL15lC4ysOQswIEUMehaZCAKCju8wI
EUONQsVCIAUJQhzu6kIL15lCmBkOQhzu6kIgBcpCYGb1QRzu6kJIhMlCGIj4QcwIEUOPQpRC
qPAGQiFF70IghYdCOlySQRIO6EJpVJRClvkGQswIEUO3KcRCf0QCQhIO6EJVeMJCAACjuxIO
6EIy0plCtWsGQhIO6EKPQpRCAACju7eH6UJROMhCgJ+juziTBEMQrMZCGXD1QRIO6EJURq1C
BfIEQhIO6EJyAAAAAAAAAAEAAAACAAAAAwAAAAEAAAAEAAAABQAAAAAAAAACAAAABgAAAAQA
AAABAAAABgAAAAEAAAAAAAAABwAAAAgAAAAFAAAABwAAAAUAAAACAAAABwAAAAIAAAAJAAAA
CgAAAAIAAAABAAAACgAAAAEAAAAJAAAACgAAAAkAAAACAAAACwAAAAUAAAAIAAAACwAAAAwA
AAAAAAAADQAAAAAAAAAFAAAADQAAAAUAAAALAAAADQAAAAsAAAAAAAAADgAAAAgAAAAHAAAA
DgAAAAcAAAAJAAAADgAAAAQAAAAMAAAADwAAAAMAAAAEAAAADwAAAAQAAAAOAAAADwAAAAkA
AAADAAAAEAAAAA4AAAAMAAAAEAAAAAwAAAALAAAAEAAAAAsAAAAIAAAAEQAAAAQAAAAGAAAA
EQAAAAYAAAAAAAAAEQAAAAAAAAAMAAAAEQAAAAwAAAAEAAAAEgAAAAkAAAABAAAAEgAAAAEA
AAADAAAAEgAAAAMAAAAJAAAAEwAAAA4AAAAJAAAAEwAAAAkAAAAPAAAAEwAAAA8AAAAOAAAA
FAAAAAgAAAAOAAAAFAAAAA4AAAAQAAAAFAAAABAAAAAIAAAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAQAAAAAAAAAAAAAAAAAAAAAACAPzwAAAAEAAAAS4TJwhiI+EHMCBFDIoWmwgCgo7vMCBFD
ftaZwuMrDkLMCBFDOjfIwv+fo7vMCBFD7HXCwgAAo7sSDuhCcj2UwgAAo7u3h+lCIIWHwjxc
kkHMCBFDIIWHwjpckkESDuhC6tGZwpgZDkIc7upCkULFwiAFCUIc7upCSVDFwkcOCULMCBFD
IQXKwmBm9UEc7upCk0KUwqjwBkIhRe9C9E+Uwpb5BkLMCBFDTCfEwn9EAkISDuhCkULFwgCg
o7sf7upCgM+ZwrVrBkISDuhC2fqVwgAAo7sSDuhCVTjIwgCgo7s4kwRDpKnGwhlw9UESDuhC
bAAAAAAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAMAAAABAAAAAAAAAAUAAAABAAAABAAAAAYA
AAABAAAABQAAAAYAAAAFAAAABwAAAAYAAAACAAAAAQAAAAgAAAAJAAAAAgAAAAoAAAAAAAAA
AgAAAAoAAAACAAAACQAAAAsAAAAAAAAACgAAAAsAAAAKAAAACQAAAAsAAAADAAAAAAAAAAwA
AAAHAAAACAAAAAwAAAAIAAAAAgAAAAwAAAAGAAAABwAAAA0AAAACAAAABgAAAA0AAAAGAAAA
DAAAAA0AAAAMAAAAAgAAAA4AAAALAAAACQAAAA4AAAAJAAAACAAAAA4AAAAHAAAABAAAAA8A
AAAEAAAAAwAAAA8AAAALAAAABAAAABAAAAAIAAAABwAAABAAAAAHAAAADgAAABAAAAAOAAAA
CAAAABEAAAAEAAAABwAAABEAAAAHAAAABQAAABEAAAAFAAAABAAAABIAAAADAAAACwAAABIA
AAALAAAADwAAABIAAAAPAAAAAwAAABMAAAAEAAAACwAAABMAAAALAAAADgAAABMAAAAOAAAA
BAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9gAAAABAAAAB+F
h8KTln9BUAxLQ4CUxcIAAAAAUAxLQzSz4cLqVx9CUAxLQx+Fh8IAAAAA1sNLQzSz4cIAAAAA
EQ5oQwrXmcL6HAZCUAxLQyfc6sIAAAAAlTlhQwrXmcIAAAAAPephQzSz4cKw8ABCb51ZQwrX
mcLgo9tBeJ1VQyfc6sLb6wJCUAxLQwrXmcLQo49BAKBdQzSz4cIPrqhB2ANjQ14P6sIwM55B
2sNgQ14P6sKAmd1AnnllQzSz4cIAUuxA8ghoQ14P6sIAAAAAKnxlQ14P6sJf4fFB8vFXQ14P
6sJQOBRCOhNMQwrXmcIAH8lAtOdhQ5yZlMKAPb5ACCBeQ6yalMIAAAAAVSNeQ9MP6sIr7xRC
UAxLQ5yZlMJwj89B3INSQ5yZlMKZ2vFBUAxLQ5yZlMJQuIdBvhVaQzSz4cIoBR5CdvRMQyfc
6sIQ14xB2gNdQx+Fh8KAFHRB1sNLQyfc6sLwUddBPCpVQ+bgocL2YNJAUAxLQyfc6sLAR8VA
CjdhQ7QAAAAAAAAAAQAAAAIAAAADAAAABAAAAAEAAAAFAAAAAAAAAAIAAAAGAAAAAQAAAAQA
AAAHAAAABAAAAAMAAAAIAAAACQAAAAUAAAAKAAAAAgAAAAEAAAAKAAAAAQAAAAYAAAALAAAA
CQAAAAgAAAAMAAAACwAAAAgAAAAMAAAACAAAAA0AAAAOAAAADwAAAAwAAAAOAAAADAAAAA0A
AAAOAAAABAAAAA8AAAAQAAAABgAAAAQAAAAQAAAABAAAAA4AAAAQAAAADgAAAAYAAAARAAAA
DQAAAAgAAAARAAAACAAAABIAAAARAAAAEgAAAAoAAAATAAAACwAAAAwAAAATAAAADAAAAA8A
AAATAAAABwAAABQAAAATAAAADwAAAAQAAAATAAAABAAAAAcAAAAVAAAAFAAAAAcAAAAVAAAA
BwAAAAMAAAAWAAAAAgAAAAoAAAAWAAAACgAAABIAAAAXAAAACQAAAAsAAAAXAAAABQAAAAkA
AAAYAAAAAAAAAAUAAAAYAAAABQAAABcAAAAYAAAAFwAAAAAAAAAZAAAAFwAAAAsAAAAZAAAA
CwAAABMAAAAZAAAAEwAAABQAAAAaAAAAAgAAABYAAAAaAAAAFgAAABIAAAAaAAAAEgAAAAgA
AAAaAAAABQAAAAIAAAAaAAAACAAAAAUAAAAbAAAADQAAABEAAAAbAAAADgAAAA0AAAAbAAAA
CgAAAAYAAAAcAAAAGQAAABQAAAAcAAAAAAAAABcAAAAcAAAAFwAAABkAAAAcAAAAFAAAABUA
AAAcAAAAFQAAAAMAAAAcAAAAAwAAAAAAAAAdAAAAEQAAAAoAAAAdAAAACgAAABsAAAAdAAAA
GwAAABEAAAAeAAAAAQAAAAAAAAAeAAAAAAAAAAMAAAAeAAAAAwAAAAEAAAAfAAAABgAAAA4A
AAAfAAAADgAAABsAAAAfAAAAGwAAAAYAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAA
AAAAAAAAAAAAAIA/YAAAAAQAAAAK15lCAAAAAD3qYUPl4KFCAACAtVAMS0Mp3OpCAAAAAJU5
YUMehYdCAACAtdbDS0MK15lC+hwGQlAMS0Mp3OpC2+sCQlAMS0NRuOFCsPAAQm+dWUMK15lC
4KPbQXidVUN8lMVCAAAAAFAMS0NRuOFC6lcfQlAMS0NRuOFCAAAAABEOaEMehYdCk5Z/QVAM
S0MK15lC0KOPQQCgXUNRuOFCD66oQdgDY0N7FOpCMDOeQdrDYEN7FOpCgJndQJ55ZUNRuOFC
AFLsQPIIaEN7FOpCAAAAACp8ZUN7FOpCX+HxQfLxV0N7FOpCUDgUQjoTTEMK15lCAB/JQLTn
YUO4npRCgD2+QAggXkN7FOpCK+8UQlAMS0PHn5RCAAAAAFUjXkO4npRCcI/PQdyDUkO4npRC
mdrxQVAMS0O4npRCULiHQb4VWkNRuOFCKAUeQnb0TEMp3OpCENeMQdoDXUMehYdCgBR0QdbD
S0Mp3OpC8FHXQTwqVUMp3OpCwEfFQAo3YUO0AAAAAAAAAAEAAAACAAAAAwAAAAEAAAAAAAAA
BAAAAAUAAAABAAAABgAAAAQAAAAHAAAACAAAAAIAAAABAAAACAAAAAEAAAAFAAAACAAAAAUA
AAACAAAACQAAAAUAAAAEAAAACgAAAAAAAAACAAAACwAAAAEAAAADAAAACwAAAAQAAAABAAAA
DAAAAAYAAAAHAAAADQAAAAYAAAAMAAAADQAAAA4AAAAGAAAADwAAAA4AAAANAAAADwAAAA0A
AAAQAAAADwAAABAAAAAKAAAAEQAAAAoAAAACAAAAEQAAAAIAAAAPAAAAEQAAAA8AAAAKAAAA
EgAAAAUAAAATAAAAEgAAAAYAAAAOAAAAEgAAABMAAAAGAAAAFAAAABAAAAANAAAAFAAAAA0A
AAAMAAAAFAAAAAAAAAAKAAAAFAAAAAoAAAAQAAAAFQAAAAAAAAAUAAAAFgAAAAUAAAAJAAAA
FgAAAAkAAAATAAAAFgAAABMAAAAFAAAAFwAAAAMAAAAAAAAAFwAAAAAAAAAVAAAAGAAAAAwA
AAAHAAAAGAAAAAcAAAAEAAAAGQAAAAQAAAALAAAAGQAAAAsAAAAYAAAAGQAAABgAAAAEAAAA
GgAAAAwAAAAYAAAAGgAAABQAAAAMAAAAGgAAABUAAAAUAAAAGwAAAAYAAAATAAAAGwAAABMA
AAAJAAAAGwAAAAQAAAAGAAAAGwAAAAkAAAAEAAAAHAAAABIAAAAOAAAAHAAAAA4AAAAPAAAA
HAAAAAIAAAAFAAAAHQAAABUAAAAaAAAAHQAAABgAAAALAAAAHQAAABoAAAAYAAAAHQAAAAMA
AAAXAAAAHQAAABcAAAAVAAAAHQAAAAsAAAADAAAAHgAAAAUAAAASAAAAHgAAABIAAAAcAAAA
HgAAABwAAAAFAAAAHwAAAA8AAAACAAAAHwAAAAIAAAAcAAAAHwAAABwAAAAPAAAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP1oAAAAEAAAA5eChQgAAgLVQDEtD
KdzqQiT2AsJQDEtDCteZQjonBsJQDEtDCteZQgAAAAA96mFDUbjhQgAAAAASDmhDHoWHQgAA
gLXWw0tDfJTFQgAAAABQDEtDUbjhQh5iH8JQDEtDKdzqQgAAAACXOWFDHoWHQuY7scFQDEtD
UbjhQhCuqMHWA2NDCteZQkC4j8H+n11DUbjhQuD6AMJunVlDexTqQrBHnsHbw2BDCteZQk+4
28F2nVVDexTqQgAAAAAqfGVDexTqQoHr3cCeeWVDUbjhQsCj7MDyCGhDexTqQsD18cHy8VdD
exTqQohCFMI8E0xDCteZQoBwycCy52FDuJ6UQkCPvsAGIF5DexTqQnv4FMJQDEtDx5+UQgAA
AABVI15DUbjhQlgPHsJ69ExDuJ6UQtDMh8HAFVpDKdzqQoDrjMHaA11DHoWHQuB6q8HWw0tD
KdzqQmBm18E6KlVDKdzqQj+ZxcAKN2FDqAAAAAAAAAABAAAAAgAAAAMAAAAEAAAAAAAAAAUA
AAADAAAAAAAAAAYAAAABAAAAAAAAAAYAAAAAAAAABAAAAAcAAAACAAAAAQAAAAgAAAABAAAA
BgAAAAgAAAAGAAAABAAAAAkAAAAAAAAAAgAAAAkAAAAFAAAAAAAAAAoAAAALAAAADAAAAAoA
AAAMAAAADQAAAA4AAAAJAAAAAgAAAA4AAAACAAAADAAAAA4AAAAMAAAACwAAAA8AAAAIAAAA
BAAAAA8AAAAEAAAAEAAAAA8AAAAQAAAACAAAABEAAAAKAAAADQAAABEAAAANAAAAEAAAABEA
AAAQAAAABAAAABIAAAANAAAADAAAABIAAAAMAAAAEwAAABIAAAATAAAAAQAAABQAAAAEAAAA
AwAAABQAAAARAAAABAAAABQAAAALAAAACgAAABQAAAAKAAAAEQAAABUAAAAUAAAAAwAAABYA
AAAHAAAAAQAAABYAAAABAAAAEwAAABYAAAATAAAABwAAABcAAAADAAAABQAAABcAAAAVAAAA
AwAAABgAAAAHAAAAEwAAABgAAAATAAAADAAAABgAAAAMAAAAAgAAABgAAAACAAAABwAAABkA
AAALAAAAFAAAABkAAAAUAAAAFQAAABoAAAANAAAAEgAAABoAAAAQAAAADQAAABoAAAABAAAA
CAAAABsAAAAZAAAAFQAAABsAAAALAAAAGQAAABsAAAAVAAAAFwAAABsAAAAXAAAABQAAABsA
AAAFAAAACQAAABsAAAAJAAAADgAAABsAAAAOAAAACwAAABwAAAASAAAAAQAAABwAAAABAAAA
GgAAABwAAAAaAAAAEgAAAB0AAAAIAAAAEAAAAB0AAAAQAAAAGgAAAB0AAAAaAAAACAAAABAA
AAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9aAAAABAAAAB+Fh8IAAAAA
1sNLQyfc6sIAAAAAlzlhQzSz4cIAAAAAEg5oQwrXmcIAAAAAPephQ4CUxcIAAAAAUAxLQwrX
mcI6JwbCUAxLQzSz4cIeYh/CUAxLQx+Fh8LmO7HBUAxLQwrXmcJPuNvBdp1VQyfc6sIk9gLC
UAxLQzSz4cLg+gDCbp1ZQwrXmcJAuI/B/p9dQzSz4cIQrqjB1gNjQ14P6sKIQhTCPBNMQ14P
6sLA9fHB8vFXQ14P6sIAAAAAKnxlQ14P6sKB693AnnllQzSz4cLAo+zA8ghoQ14P6sKwR57B
28NgQwrXmcKAcMnAsudhQ5yZlMJAj77ABiBeQ6yalMIAAAAAVSNeQ9MP6sJ7+BTCUAxLQzSz
4cJYDx7CevRMQ+bgocIAAIC1UAxLQ5yZlMLQzIfBwBVaQyfc6sKA64zB2gNdQx+Fh8LgeqvB
1sNLQyfc6sJgZtfBOipVQyfc6sI/mcXACjdhQ6gAAAAAAAAAAQAAAAIAAAADAAAAAAAAAAIA
AAAEAAAAAQAAAAAAAAAFAAAABgAAAAQAAAAHAAAACAAAAAUAAAAHAAAABQAAAAQAAAAJAAAA
AQAAAAQAAAAJAAAABAAAAAYAAAAKAAAACAAAAAsAAAAKAAAACwAAAAwAAAAKAAAABQAAAAgA
AAANAAAACgAAAA4AAAANAAAADgAAAAkAAAAPAAAAAgAAAAEAAAAPAAAAAQAAABAAAAAPAAAA
EAAAAAIAAAARAAAAAgAAABAAAAASAAAADAAAABEAAAASAAAAEQAAABAAAAASAAAADgAAAAoA
AAASAAAACgAAAAwAAAATAAAADAAAAAsAAAATAAAAEQAAAAwAAAATAAAAAwAAAAIAAAATAAAA
AgAAABEAAAAUAAAAAwAAABMAAAAVAAAAAAAAAAMAAAAVAAAAAwAAABQAAAAWAAAACQAAAAYA
AAAWAAAABgAAAA0AAAAWAAAADQAAAAkAAAAXAAAACgAAAA0AAAAXAAAADQAAAAYAAAAXAAAA
BgAAAAUAAAAXAAAABQAAAAoAAAAYAAAABAAAAAAAAAAYAAAAAAAAAAcAAAAYAAAABwAAAAQA
AAAZAAAAEwAAAAsAAAAZAAAAFAAAABMAAAAaAAAADgAAABIAAAAaAAAAAQAAAAkAAAAaAAAA
EgAAABAAAAAbAAAAFAAAABkAAAAbAAAAGQAAAAsAAAAbAAAAAAAAABUAAAAbAAAAFQAAABQA
AAAbAAAABwAAAAAAAAAbAAAACAAAAAcAAAAbAAAACwAAAAgAAAAcAAAACQAAAA4AAAAcAAAA
DgAAABoAAAAcAAAAGgAAAAkAAAAdAAAAEAAAAAEAAAAdAAAAAQAAABoAAAAdAAAAGgAAABAA
AAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/NgAAAAQAAAAehYdC
0czDwY4KLkOyjeBCwyQjwo4KLkPidsVCAKCju4wKLkMehaZCAKCju8wIEUM0N8hCAKCju8wI
EUMK15lC+iwOwswIEUNGhMlCJZv4wcwIEUMehYdC0szDwcwIEUMehaZCAKCju44KLkMK15lC
zNQOwo4KLkNqS+hChIMIwo4KLkPXVMVCaBcJwswIEUP2rudCXBsZwo4KLkNnVJRCzgMHwswI
EUPTbZRCVxcHwo4KLkOZGeVCmBkEwlJYKkO3nuRC4PoSwp55KkN8yeVCrUkcwo4KLkNgAAAA
AAAAAAEAAAACAAAAAwAAAAIAAAAEAAAAAwAAAAQAAAAFAAAABgAAAAUAAAAEAAAABwAAAAAA
AAADAAAABwAAAAMAAAAFAAAACAAAAAAAAAACAAAACAAAAAIAAAADAAAACAAAAAMAAAAAAAAA
CQAAAAUAAAABAAAACQAAAAEAAAAAAAAACgAAAAIAAAABAAAACgAAAAQAAAACAAAACwAAAAEA
AAAFAAAACwAAAAUAAAAGAAAADAAAAAsAAAAGAAAADAAAAAoAAAABAAAADQAAAAcAAAAFAAAA
DQAAAAUAAAAJAAAADQAAAAAAAAAHAAAADgAAAAkAAAAAAAAADgAAAAAAAAANAAAADgAAAA0A
AAAJAAAADwAAAAoAAAAMAAAADwAAAAYAAAAEAAAADwAAAAQAAAAKAAAAEAAAAAwAAAAGAAAA
EAAAAAYAAAAPAAAAEAAAAA8AAAAMAAAAEQAAAAEAAAALAAAAEQAAAAsAAAAMAAAAEQAAAAwA
AAABAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPzYAAAAEAAAA
H4WHwtLMw8HMCBFDSlDFwmgXCcLMCBFDOzfIwgCgo7vMCBFDs2iUwlcXB8KOCi5DIoWmwgCg
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
AAAKAAAAEQAAAAoAAAADAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAA
AACAPyQAAAAEAAAAo3CgQtbMw8EVDmhCHoWHQtbMw8EVDmhCHoWHQtfMw8EAAIA3o3CgQjZc
kkEVDmhCHoWHQjFckkEAAIA3HoWmQud6q8EAAIA3HoWmQnEUdEEAAIA3HoWHQjZckkEVDmhC
HoWmQuV6q8EVDmhCHoWmQncUdEEVDmhCo3CgQjFckkEAAIA3o3CgQtfMw8EAAIA3PAAAAAAA
AAABAAAAAgAAAAEAAAAAAAAAAwAAAAQAAAAFAAAAAgAAAAQAAAACAAAAAQAAAAYAAAAFAAAA
BAAAAAcAAAABAAAAAwAAAAcAAAADAAAABAAAAAcAAAAEAAAAAQAAAAgAAAAFAAAABgAAAAgA
AAADAAAAAAAAAAgAAAAAAAAABQAAAAkAAAAGAAAAAwAAAAkAAAADAAAACAAAAAkAAAAIAAAA
BgAAAAoAAAAEAAAAAwAAAAoAAAADAAAABgAAAAoAAAAGAAAABAAAAAsAAAAAAAAAAgAAAAsA
AAACAAAABQAAAAsAAAAFAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAgD8kAAAABAAAACKFpsJ3FHRBFQ5oQh+Fh8LWzMPBFQ5oQh+Fh8I2XJJBFQ5oQiKF
psLleqvBFQ5oQh+Fh8IxXJJBAACAN6RwoMLXzMPBAACAN6RwoMIxXJJBAACANx+Fh8LXzMPB
AACANyKFpsJxFHRBAACANyKFpsLneqvBAACAN6RwoMI2XJJBFQ5oQqRwoMLWzMPBFQ5oQjwA
AAAAAAAAAQAAAAIAAAADAAAAAQAAAAAAAAAEAAAABQAAAAYAAAAEAAAABgAAAAIAAAAEAAAA
AgAAAAEAAAAHAAAAAQAAAAUAAAAHAAAABQAAAAQAAAAHAAAABAAAAAEAAAAIAAAAAwAAAAAA
AAAIAAAAAAAAAAYAAAAIAAAABgAAAAUAAAAJAAAABQAAAAMAAAAJAAAAAwAAAAgAAAAJAAAA
CAAAAAUAAAAKAAAAAAAAAAIAAAAKAAAAAgAAAAYAAAAKAAAABgAAAAAAAAALAAAABQAAAAEA
AAALAAAAAQAAAAMAAAALAAAAAwAAAAUAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAA
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
eJQGQlbYSkOuAAAAAAAAAAEAAAACAAAAAwAAAAQAAAAFAAAABgAAAAQAAAABAAAABgAAAAEA
AAAAAAAABwAAAAMAAAAFAAAACAAAAAIAAAABAAAACAAAAAEAAAADAAAACQAAAAEAAAAEAAAA
CQAAAAQAAAADAAAACQAAAAMAAAABAAAACgAAAAAAAAACAAAACwAAAAYAAAAAAAAACwAAAAQA
AAAGAAAADAAAAAMAAAAHAAAADQAAAA4AAAAMAAAADQAAAAwAAAAHAAAADQAAAA8AAAAKAAAA
EAAAABEAAAASAAAAEAAAAAUAAAAEAAAAEAAAAAQAAAARAAAAEwAAAA8AAAANAAAAEwAAAA0A
AAAHAAAAFAAAAA4AAAAVAAAAFAAAAAMAAAAMAAAAFAAAAAwAAAAOAAAAFAAAAAgAAAADAAAA
FgAAAAUAAAAQAAAAFgAAABAAAAASAAAAFwAAAAgAAAAUAAAAFwAAABQAAAAVAAAAFwAAAAIA
AAAIAAAAFwAAABUAAAACAAAAGAAAAA8AAAATAAAAGAAAABMAAAAZAAAAGAAAAAAAAAAKAAAA
GAAAAAoAAAAPAAAAGgAAABkAAAASAAAAGgAAABIAAAARAAAAGgAAABEAAAAEAAAAGgAAAAQA
AAALAAAAGwAAAAcAAAAFAAAAGwAAABMAAAAHAAAAGwAAABIAAAAZAAAAGwAAABkAAAATAAAA
GwAAAAUAAAASAAAAHAAAABgAAAAZAAAAHAAAABkAAAAaAAAAHAAAABoAAAALAAAAHAAAAAsA
AAAAAAAAHAAAAAAAAAAYAAAAHQAAABIAAAAFAAAAHQAAAAUAAAAWAAAAHQAAABYAAAASAAAA
HgAAAAIAAAAVAAAAHgAAAA4AAAANAAAAHgAAABUAAAAOAAAAHgAAAAoAAAACAAAAHgAAAA0A
AAAKAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPzAAAAAEAAAA
IYWmwnEUdEEAAIA3o3CgQtjMw8EAAIA3o3CgQjFckkEAAIA3pHCgwiBckkESDmjDHoWmQmAU
dEESDmjDpHCgwuDMw8ESDmjDo3CgQuDMw8ESDmjDpHCgwtjMw8EAAIA3IYWmwmAUdEESDmjD
HoWmQud6q8EAAIA3pHCgwjFckkEAAIA3o3CgQiBckkESDmjDIYWmwvF6q8ESDmjDIYWmwud6
q8EAAIA3HoWmQvF6q8ESDmjDHoWmQnEUdEEAAIA3VAAAAAAAAAABAAAAAgAAAAMAAAAEAAAA
BQAAAAYAAAABAAAABQAAAAYAAAAFAAAABAAAAAcAAAAFAAAAAQAAAAcAAAABAAAAAAAAAAgA
AAAAAAAAAwAAAAgAAAADAAAABQAAAAkAAAABAAAABgAAAAkAAAACAAAAAQAAAAoAAAAAAAAA
AgAAAAoAAAACAAAAAwAAAAoAAAADAAAAAAAAAAsAAAACAAAABAAAAAsAAAAEAAAAAwAAAAsA
AAADAAAAAgAAAAwAAAAAAAAACAAAAAwAAAAIAAAABQAAAAwAAAAFAAAABwAAAA0AAAAHAAAA
AAAAAA0AAAAAAAAADAAAAA0AAAAMAAAABwAAAA4AAAAGAAAABAAAAA4AAAAEAAAACQAAAA4A
AAAJAAAABgAAAA8AAAAEAAAAAgAAAA8AAAACAAAACQAAAA8AAAAJAAAABAAAAA==]]></BinaryString>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Content name="TextureID"><url>rbxassetid://431271935</url></Content>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>0.200000003</X>
					<Y>0.200000003</Y>
					<Z>0.758572876</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="MeshPart" referent="RBX25D214B5D7524EFCAD4D7AEA77EA4DC9">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">1003</int>
				<CoordinateFrame name="CFrame">
					<X>131.838303</X>
					<Y>0.656630695</Y>
					<Z>-185.792007</Z>
					<R00>0.857660115</R00>
					<R01>0.514217079</R01>
					<R02>0</R02>
					<R10>-0.514217079</R10>
					<R11>0.857660115</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<token name="CollisionFidelity">0</token>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<Vector3 name="InitialSize">
					<X>2.45201111</X>
					<Y>1.66317987</Y>
					<Z>0.289993286</Z>
				</Vector3>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">800</token>
				<Content name="MeshID"><url>rbxassetid://735232363</url></Content>
				<string name="Name">Handle</string>
				<BinaryString name="PhysicsData"><![CDATA[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
BwAAAAQAAAAIAAAABAAAAAMAAAAJAAAABAAAAAYAAAAKAAAAAAAAAAIAAAALAAAABQAAAAEA
AAALAAAAAQAAAAAAAAAMAAAAAwAAAAUAAAANAAAACQAAAAYAAAAOAAAABQAAAAsAAAAPAAAA
CwAAAAAAAAAPAAAADgAAAAsAAAAPAAAAAAAAAAoAAAAPAAAADAAAAAUAAAAPAAAABQAAAA4A
AAAPAAAACgAAAAMAAAAPAAAAAwAAAAwAAAAQAAAACQAAAA0AAAAQAAAABgAAAAUAAAAQAAAA
DQAAAAYAAAAQAAAABQAAAAQAAAAQAAAABAAAAAkAAAARAAAAAQAAAAYAAAARAAAABgAAAAcA
AAARAAAABwAAAAEAAAASAAAACAAAAAMAAAASAAAAAwAAAAoAAAASAAAAAgAAAAgAAAASAAAA
CgAAAAIAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/OQAAAAQA
AAAfOcE+o/uvPlrz8b2PQ58+o/uvPgCAk7vCXaA+o/uvPgBQDb4VnIY+06zgPgCAk7sgOcE+
pPABPwCAk7sfOcE+aqnePj61770BfJQ+UO3DPgBQDb4fOcE+ZSn7PoJDnb0fOcE+4FO0PtuZ
iL0RV5I+o/uvPi6Q8r0AvIk+y7S9Pv6v8b0AAIA+GMXSPv+nm71XI4g+PBXUPgCAk7sA6Ls+
1KOwPgAwh70mnZY+o/uvPv6fbb0ADoI+r4XQPv6fbb0o454+o/uvPgCAk7sAyrY+fN70PgC4
nb0fOcE+WqKzPvhv8r1mAAAAAAAAAAEAAAACAAAAAwAAAAEAAAAEAAAABQAAAAQAAAAAAAAA
BgAAAAUAAAACAAAABwAAAAUAAAAGAAAABwAAAAQAAAAFAAAABwAAAAMAAAAEAAAACAAAAAQA
AAABAAAACAAAAAAAAAAEAAAACQAAAAIAAAABAAAACgAAAAYAAAACAAAACgAAAAIAAAAJAAAA
CgAAAAsAAAAGAAAADAAAAAEAAAADAAAADQAAAAEAAAAAAAAADQAAAAAAAAAIAAAADQAAAAgA
AAABAAAADgAAAAkAAAABAAAADwAAAAoAAAAJAAAADwAAAAkAAAAOAAAADwAAAAsAAAAKAAAA
DwAAAAMAAAALAAAADwAAAAwAAAADAAAAEAAAAAwAAAAPAAAAEAAAAA8AAAAOAAAAEAAAAAEA
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
AAAUAAAAAQAAABcAAAAJAAAACAAAABcAAAAQAAAACQAAABcAAAAIAAAADgAAABcAAAAOAAAA
EAAAABgAAAAIAAAABwAAABgAAAAHAAAADwAAABgAAAAOAAAACAAAABgAAAAPAAAADgAAABkA
AAACAAAAAQAAABkAAAAHAAAACQAAABoAAAAHAAAAGQAAABoAAAAZAAAAAQAAABsAAAAJAAAA
EgAAABsAAAAZAAAACQAAABsAAAACAAAAGQAAABsAAAASAAAAFQAAABsAAAAVAAAAAgAAABwA
AAABAAAAFAAAABwAAAAaAAAAAQAAABwAAAAUAAAABwAAABwAAAAHAAAAGgAAAB0AAAAAAAAA
BAAAAB0AAAAEAAAAAQAAAB0AAAABAAAAAAAAAB4AAAAKAAAABQAAAB4AAAAFAAAAEwAAAB4A
AAATAAAACgAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD82AAAA
BAAAAKCnZr8WVtG9yKhyPYbbNb8WVtG9/7/KPYbbNb8WVtG9ADDdvaCnZr+Cynm+noXJPaCn
Zr+Dynm+YvrbvaCnZr8WVtG9EK6MvQGwUr9wE0e+/7/KPQGwUr9wE0e+ADDdvRU7X79OC36+
AACku6CnZr9OC36+xWaPPZQpO78WVtG992rcvaCnZr9OC36+6GqivZQpO78WVtG9vwPJPYyb
NL8WVtG9AACku6CnZr/eCWi+St/WvaCnZr/eCWi+ennDPXGUX79OC36+Yah1O3GUX79OC36+
CflSvGAAAAAAAAAAAQAAAAIAAAADAAAAAAAAAAQAAAAFAAAABAAAAAAAAAAFAAAAAAAAAAIA
AAAGAAAAAQAAAAMAAAAHAAAAAgAAAAgAAAAJAAAAAwAAAAQAAAAKAAAAAgAAAAcAAAAKAAAA
BwAAAAQAAAAKAAAABQAAAAIAAAALAAAACAAAAAkAAAALAAAACQAAAAQAAAAMAAAAAQAAAAAA
AAAMAAAAAwAAAAEAAAANAAAAAgAAAAEAAAANAAAAAQAAAAgAAAANAAAACAAAAAIAAAAOAAAA
BAAAAAUAAAAOAAAABQAAAAoAAAAOAAAACgAAAAQAAAAPAAAAAAAAAAMAAAAPAAAAAwAAAAwA
AAAPAAAADAAAAAAAAAAQAAAAAwAAAAkAAAAQAAAACQAAAAgAAAAQAAAABgAAAAMAAAAQAAAA
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
BgAAABsAAAAGAAAADQAAABsAAAANAAAAEgAAABwAAAAJAAAAFQAAABwAAAAVAAAAEwAAABwA
AAAOAAAACQAAABwAAAATAAAADgAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAA
AAAAAAAAgD8wAAAABAAAAMDrHL5kK4q9wEK5PcDrHL4P6xe+/8fKvcDrHL5AcIS+VLeTPUDX
mLxkK4q9Mj66PUDXmLxkK4q9MrbMvcDrHL5AcIS+dManvao0kLxAcIS+AACku8DrHL5kK4q9
1gHMvQAAADdkK4q9/E0TPYqXvL1AcIS+drV2PYqXvL1AcIS+PUmOvQAAADdkK4q9Qq45vcDr
HL4P6xe+AFC4PQAAADe0Kqm9AACku89E/L1AcIS+loacvc9E/L1AcIS+f52IPVQAAAAAAAAA
AQAAAAIAAAAAAAAAAwAAAAQAAAAFAAAABgAAAAIAAAAFAAAAAgAAAAEAAAAFAAAAAQAAAAQA
AAAHAAAABAAAAAEAAAAHAAAAAQAAAAAAAAAHAAAAAAAAAAQAAAAIAAAABAAAAAMAAAAIAAAA
AwAAAAYAAAAJAAAABgAAAAMAAAAJAAAAAgAAAAYAAAAKAAAABAAAAAYAAAAKAAAABgAAAAUA
AAALAAAABgAAAAQAAAALAAAABAAAAAgAAAAMAAAAAgAAAAMAAAAMAAAAAwAAAAAAAAAMAAAA
AAAAAAIAAAANAAAACAAAAAYAAAANAAAABgAAAAsAAAANAAAACwAAAAgAAAAOAAAABQAAAAQA
AAAOAAAABAAAAAoAAAAOAAAACgAAAAUAAAAPAAAAAwAAAAIAAAAPAAAAAgAAAAkAAAAPAAAA
CQAAAAMAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/NgAAAAQA
AAAgZGu/Iucyv1NqoT0gZGu/Iucyv/nes70gZGu/JHH3vmc6kz2OKYe/JHH3vhTjjz2OKYe/
JHH3vv/Xo70gZGu/JHH3vpWxpb3IT4m/ucMev/d1Pj3IT4m/ucMev95dY73IT4m/DMYrv///
o7vIT4m/RtYov/7G2TzIT4m/RtYov3/TEb3IT4m/E6wNv///o7sgZGu/Ic00v///o7vIT4m/
Ir0Sv1irCT3IT4m/Ir0Sv1mbLr3Ux4W/JHH3vgBwkz2CX4e/JHH3vv//o7vUx4W/JHH3vv/n
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
AAAHAAAABAAAAAYAAAAIAAAAAQAAAAMAAAAJAAAABQAAAAgAAAAJAAAAAwAAAAYAAAAJAAAA
BgAAAAUAAAAKAAAABQAAAAQAAAAKAAAABAAAAAEAAAALAAAACAAAAAMAAAALAAAAAwAAAAkA
AAALAAAACQAAAAgAAAAMAAAACAAAAAUAAAAMAAAABQAAAAoAAAAMAAAAAQAAAAgAAAAMAAAA
CgAAAAEAAAANAAAAAwAAAAAAAAANAAAAAAAAAAIAAAANAAAAAgAAAAYAAAANAAAABgAAAAMA
AAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/TgAAAAQAAADA6xy+
qxXxvv//o7vA6xy+gmKkvhcfpT3A6xy+gmKkvhvhuL0AAAA3EPGzvpvloT0AAAA371Txvv//
o7sAAAA3nXaGvv//o7sAAAA3EPGzvptdtL3A6xy+QHCEvlS3kz3A6xy+QHCEvnTGp73A6xy+
ipPnvgQBgT3A6xy+ipPnvh8PlL0AwP82WHXrvg/Igb0AAAA3WHXrvqHQWj0AAAA3LniXvltu
lb0AAAA3LniXvuTsgD0AAAA3yzrWvvetmz0AAAA3yzrWvvclrr3A6xy+uCrOvs6hoj2Kl7y9
QHCEvna1dj3A6xy+uCrOvs4Ztb2Kl7y9QHCEvjxJjr2qNJC8QHCEvv//o7sAAAA3hEOyvq6C
oT0AAAA3hEOyvq36s73PRPy9QHCEvpeGnL3PRPy9QHCEvn+diD2QAAAAAAAAAAEAAAACAAAA
AwAAAAQAAAAFAAAABgAAAAUAAAAEAAAABwAAAAIAAAABAAAACAAAAAIAAAAHAAAACQAAAAEA
AAAAAAAACgAAAAAAAAACAAAACwAAAAYAAAAEAAAACwAAAAQAAAAAAAAACwAAAAAAAAAKAAAA
DAAAAAQAAAADAAAADAAAAAAAAAAEAAAADAAAAAkAAAAAAAAADQAAAAUAAAAGAAAADgAAAAMA
AAAFAAAADwAAAAkAAAAMAAAADwAAAAwAAAADAAAAEAAAAAYAAAALAAAAEAAAAAsAAAAKAAAA
EQAAAAEAAAAJAAAAEQAAAAkAAAAPAAAAEQAAAAMAAAABAAAAEQAAAA8AAAADAAAAEgAAAA4A
AAAFAAAAEgAAAAgAAAAHAAAAEwAAAAoAAAACAAAAEwAAABAAAAAKAAAAEwAAAAIAAAAGAAAA
EwAAAAYAAAAQAAAAFAAAAAgAAAASAAAAFAAAAAUAAAANAAAAFQAAABIAAAAFAAAAFQAAAAUA
AAAUAAAAFQAAABQAAAASAAAAFgAAAAMAAAAOAAAAFgAAAA4AAAAHAAAAFgAAAAEAAAADAAAA
FgAAAAcAAAABAAAAFwAAAAgAAAANAAAAFwAAAA0AAAAGAAAAFwAAAAYAAAACAAAAFwAAAAIA
AAAIAAAAGAAAAA0AAAAIAAAAGAAAAAgAAAAUAAAAGAAAABQAAAANAAAAGQAAAAcAAAAOAAAA
GQAAAA4AAAASAAAAGQAAABIAAAAHAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAA
AAAAAAAAAACAP0gAAAAEAAAAhnFxPzN2rz5Yn7s9hnFxP0piiT6MPMy9hnFxP3EMOD4TOZU9
hnFxPzN2rz5YF869kT+aPzN2rz4rray9kT+aPzN2rz4rNZo9hnFxP3EMOD4KsKe9Myd7P3EM
OD5Ff5K9YkN9P24MOD6OUBM9Ae6cPwRMoD4AAKS7ACmcPxCqpD7//4A9hnFxP0KEVz5PlLI9
Myd7P3EMOD4hi309q6CRPzN2rz4kIMe9bQOSPzN2rz49ALQ9hnFxP0KEVz5PBMW9ACmcPxCq
pD7/d5O9Fs9/P3EMOD4AAKS7t4uaPzN2rz4AAKS7hnFxP5anZT5d3sm9hnFxPxCgQz5MPbS9
hnFxP7ocRj4z4qM9YkN9P24MOD6OUDy90baFPzN2rz58e8u9hAAAAAAAAAABAAAAAgAAAAMA
AAABAAAAAAAAAAQAAAADAAAAAAAAAAUAAAAEAAAAAAAAAAYAAAACAAAAAQAAAAYAAAAHAAAA
AgAAAAgAAAAJAAAACgAAAAgAAAACAAAABwAAAAsAAAAKAAAABQAAAAsAAAAAAAAAAgAAAAwA
AAACAAAACAAAAAwAAAAIAAAACgAAAA0AAAADAAAABAAAAA4AAAAFAAAAAAAAAA4AAAAAAAAA
CwAAAA4AAAALAAAABQAAAA8AAAAGAAAAAQAAAA8AAAANAAAABAAAAA8AAAAEAAAAEAAAABEA
AAAJAAAACAAAABEAAAAIAAAABwAAABIAAAAKAAAACQAAABIAAAAJAAAAEAAAABIAAAAQAAAA
BAAAABIAAAAEAAAABQAAABIAAAAFAAAACgAAABMAAAABAAAADQAAABMAAAANAAAADwAAABMA
AAAPAAAAAQAAABQAAAAQAAAABwAAABQAAAAPAAAAEAAAABQAAAAHAAAABgAAABQAAAAGAAAA
DwAAABUAAAACAAAADAAAABUAAAAMAAAACgAAABUAAAAKAAAACwAAABUAAAALAAAAAgAAABYA
AAAJAAAAEQAAABYAAAARAAAABwAAABYAAAAHAAAAEAAAABYAAAAQAAAACQAAABcAAAABAAAA
AwAAABcAAAADAAAADQAAABcAAAANAAAAAQAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA
AAAAAAAAAAAAAAAAgD9gAAAABAAAAEDtHL92twS/Xom7vUDtHL/KzC2/doeOPUDtHL9TqAi/
zIyrPaBj675OAUO/3l2TvaBj674pxha//Y1BvaBj675OAUO/3uWAPaBj676qFhq/ltCVPUDt
HL/KzC2/VfmgvaBj676VAii/AHi+veS2D792twS/ksOQPQP4DL92twS/ACDdPOS2D792twS/
9++jvQDvB79N7j+/ARiFPQAkBr8ylEO/AACkuwDvB79N7j+/AJCXvQC6Cb/5Bi+/AHi+vaBj
676qFhq/WEaovaBj674HOjO/2oWqPUDtHL92twS/qeWoPUDtHL+y3zG/AACku6Bj675g3kW/
AACku0DtHL/cQh6/AHi+vaBj674HOjO/AHi+vUDtHL/cQh6/AQisPaBj674pxha//J0cPQC6
Cb/5Bi+/AQisPaBj676VAii/AQisPQP4DL92twS/AIATvUDtHL9TqAi/AHi+vaBj677ujxa/
Q9MLva4+Dr92twS/YBVSPa4+Dr92twS/YgV3vbQAAAAAAAAAAQAAAAIAAAADAAAABAAAAAUA
AAAGAAAABQAAAAQAAAAHAAAAAQAAAAAAAAAIAAAABAAAAAMAAAAJAAAACgAAAAAAAAALAAAA
AAAAAAoAAAAMAAAADQAAAAUAAAAOAAAAAwAAAA0AAAAOAAAABwAAAA8AAAAQAAAACAAAAAAA
AAAQAAAAAAAAAAsAAAAQAAAABAAAAAgAAAAQAAAACwAAAAQAAAARAAAADAAAAAUAAAARAAAA
BQAAAAYAAAASAAAABgAAAAkAAAASAAAAAAAAAAIAAAASAAAACQAAAAAAAAATAAAABwAAAA4A
AAATAAAADgAAAA0AAAATAAAADQAAAAwAAAATAAAADAAAAAEAAAATAAAAAQAAAAcAAAAUAAAA
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
AAAaAAAAAgAAABQAAAAaAAAAFAAAABEAAAAaAAAAEQAAABAAAAAaAAAAEAAAAAIAAAAbAAAA
EgAAAAkAAAAbAAAACQAAABcAAAAbAAAABAAAABIAAAAbAAAAFwAAAAQAAAAcAAAAEwAAAAQA
AAAcAAAABAAAABcAAAAcAAAACgAAABMAAAAcAAAAFwAAAAoAAAAQAAAAAAAAAAAAAAAAAAAA
AAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/SwAAAAQAAADA7Jy+ZCuKvVqX8j3A7Jy+sf6avVZ8
Ar7A7Jy+QHCEvpHVmT3tJiO+QHCEvkIHrr3A6xy+QHCEvlS3kz3A6xy+ZCuKvb9CuT3A6xy+
ZCuKvdUBzL3A7Jy+QHCEvltNrb3A7Jy+bq4Uvmza5j3A7Jy+bq4Uvj1Q+b3A7Jy+ZCuKvayH
Ar5oTIu+QHCEvs3bqT3A7Jy+cTV0vpBry73A7Jy+cTV0vqiJtz1oTIu+QHCEvtKOvb3A6xy+
QHCEvnPGp73A6xy+D+sXvv/Hyr0BUI2++NYAvv7f+b3tJiO+QHCEvk9nmj0C1CO+qAEcvv9P
uD0BUI2++NYAvv9n5z3A6xy+GBnRvVLbuD33+Iq+ZCuKvVAH6D33+Iq+ZCuKvU9/+r3A7Jy+
sf6ava6A8j2KAAAAAAAAAAEAAAACAAAAAwAAAAQAAAACAAAABQAAAAQAAAAGAAAABQAAAAYA
AAAAAAAABwAAAAIAAAABAAAABwAAAAMAAAACAAAACAAAAAAAAAACAAAACQAAAAcAAAABAAAA
CgAAAAEAAAAAAAAACgAAAAAAAAAGAAAACwAAAAIAAAAEAAAADAAAAAcAAAAJAAAADQAAAAgA
AAACAAAADQAAAAIAAAALAAAADQAAAAsAAAAIAAAADgAAAAkAAAADAAAADgAAAAwAAAAJAAAA
DgAAAAMAAAAHAAAADgAAAAcAAAAMAAAADwAAAAYAAAAEAAAADwAAAAQAAAADAAAAEAAAAAYA
AAAPAAAAEAAAAA8AAAADAAAAEQAAAAkAAAABAAAAEQAAAAMAAAAJAAAAEQAAABAAAAADAAAA
EgAAAAQAAAATAAAAEgAAABMAAAAUAAAAEgAAABQAAAAIAAAAEgAAAAgAAAALAAAAEgAAAAsA
AAAEAAAAFQAAABQAAAATAAAAFQAAAAQAAAAFAAAAFQAAABMAAAAEAAAAFgAAABQAAAAVAAAA
FgAAABUAAAAFAAAAFgAAAAUAAAAAAAAAFwAAAAoAAAAGAAAAFwAAAAEAAAAKAAAAFwAAABEA
AAABAAAAFwAAAAYAAAAQAAAAFwAAABAAAAARAAAAGAAAABQAAAAWAAAAGAAAABYAAAAAAAAA
GAAAAAAAAAAIAAAAGAAAAAgAAAAUAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAA
AAAAAAAAAACAP0gAAAAEAAAAsChEv/QyCr+j0a+9IGRrv/QyCr+6RqO98zFTv/QyCr9o0qM9
IGRrv/QyCr+c0pA9IGRrvyPnMr9TaqE9sChEv/QyCr/rWp09ACdRv4zMU78A0KM9IGRrvyPn
Mr/83rO9Atdjv0w8QL8AAKS7AJVjv4OZPr8AcLy9ACdRv4zMU78ASLa98zFTv/QyCr9oSra9
sChEv2+YI78A8Ke9AWBFv4SoS78AAKS7Au9HvxAeTb8B6KW9sChEv2+YI79whJQ9Au9HvxAe
Tb8AcJM9AJVjv4OZPr8A+Kk9IGRrvyLNNL8AAKS7AmhRvxTjVL8AAKS7IGRrv78MG7+I8Jk9
IGRrv78MG78DY6y9sChEvyd0Gb94z5k9sChEv919Gb+6P6y9hAAAAAAAAAABAAAAAgAAAAMA
AAACAAAAAQAAAAMAAAABAAAABAAAAAUAAAACAAAABgAAAAUAAAAAAAAAAgAAAAcAAAAEAAAA
AQAAAAgAAAAHAAAACQAAAAgAAAAJAAAACgAAAAsAAAAJAAAABwAAAAsAAAAAAAAACgAAAAsA
AAAKAAAACQAAAAsAAAABAAAAAAAAAAwAAAAAAAAABQAAAAwAAAANAAAADgAAAA8AAAANAAAA
DAAAAA8AAAAMAAAABQAAAA8AAAAQAAAADQAAABEAAAAEAAAACAAAABEAAAAIAAAABgAAABEA
AAAGAAAAAgAAABEAAAACAAAABAAAABIAAAAEAAAABwAAABIAAAAHAAAACAAAABIAAAAIAAAA
BAAAABMAAAAGAAAACAAAABMAAAAIAAAACgAAABMAAAAKAAAADgAAABMAAAAOAAAADQAAABMA
AAAQAAAABgAAABMAAAANAAAAEAAAABQAAAAEAAAAAgAAABQAAAACAAAAAwAAABQAAAADAAAA
BAAAABUAAAAHAAAAAQAAABUAAAABAAAACwAAABUAAAALAAAABwAAABYAAAAQAAAADwAAABYA
AAAPAAAABQAAABYAAAAFAAAABgAAABYAAAAGAAAAEAAAABcAAAAAAAAADAAAABcAAAAMAAAA
DgAAABcAAAAOAAAACgAAABcAAAAKAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA
AAAAAAAAAAAAAAAAgD9UAAAABAAAAISCZ78WVtG9fJzbvSKDkb8WVtG95JCHPYSCZ78WVtG9
fiTJPSKDkb8WVtG9sxGbvciqjr9MC36+gNzHPciqjr9MC36+ACjbvdC8jb9MC36+bb3KPQC4
jr8EP2O+ArDIPaCnZr9MC36+x2aPPaCnZr+Cynm+YvrbvaCnZr+Aynm+oIXJPUxUaL9MC36+
bODbvYBPjb+cgWq+AEDfvU1UaL9MC36+QmvJPQC4jr8EP2O+ACjbvaCnZr8WVtG9x6hyPaCn
Zr9MC36+6GqivaCnZr8WVtG9EK6MvQBigL/ItiW+AMjMPWrkjr9MC36+T/8XPQAMgr8E0CG+
ACjbvYBPjb+cgWq+AMjMPdC8jb9MC36+u+LdvUIIbb8WVtG9rZbFPUIIbb8WVtG9rQ7YvQBi
gL/ItiW+AEDfvWrkjr9MC36+UP9AvQAMgr8E0CG+ArDIPZwAAAAAAAAAAQAAAAIAAAADAAAA
AQAAAAAAAAAEAAAABQAAAAYAAAAHAAAAAQAAAAQAAAAHAAAABAAAAAYAAAAIAAAABgAAAAUA
AAAIAAAACQAAAAoAAAALAAAACAAAAAUAAAALAAAADAAAAAkAAAANAAAABgAAAAgAAAANAAAA
CAAAAAoAAAAOAAAADAAAAAUAAAAOAAAABQAAAAMAAAAPAAAAAgAAAAoAAAAPAAAACgAAAAkA
AAAPAAAAAAAAAAIAAAAQAAAACQAAAAgAAAAQAAAACAAAAAsAAAAQAAAACwAAAAkAAAARAAAA
CQAAAAAAAAARAAAAAAAAAA8AAAARAAAADwAAAAkAAAASAAAACgAAAAIAAAATAAAABQAAAAQA
AAATAAAABAAAAAEAAAATAAAAAQAAAAMAAAAUAAAADgAAAAMAAAAVAAAACgAAABIAAAAVAAAA
BwAAAAYAAAAVAAAAEgAAAAcAAAAVAAAABgAAAA0AAAAVAAAADQAAAAoAAAAWAAAABQAAAAwA
AAAWAAAADAAAAAsAAAAWAAAACwAAAAUAAAAXAAAAAgAAAAEAAAAXAAAAEgAAAAIAAAAYAAAA
AwAAAAAAAAAYAAAAFAAAAAMAAAAZAAAAFAAAABgAAAAZAAAAGAAAAAAAAAAZAAAADAAAAA4A
AAAZAAAADgAAABQAAAAZAAAACQAAAAwAAAAZAAAAAAAAAAkAAAAaAAAAAwAAAAUAAAAaAAAA
BQAAABMAAAAaAAAAEwAAAAMAAAAbAAAAEgAAABcAAAAbAAAAFwAAAAEAAAAbAAAAAQAAAAcA
AAAbAAAABwAAABIAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/
MwAAAAQAAACqoJE/NHavPoiRtD2FcXE/NHavPlifuz2FcXE/NHavPlcXzr2FcXE/GHMBP5OX
vz2RP5o/NHavPiutrL2FcXE/GHMBP2Nn0r0THYw/GHMBP5J/0L0THYw/GHMBP/5nvD2RP5o/
NHavPio1mj0A8Jc/NDy9Pv7Hyr0A8Jc/NDy9PgBQuD2qoJE/NHavPiMgx70WOY0/GHMBP/7/
o7u2i5o/NHavPv7/o7v+IJA/s7nxPv7/o7v+fI8/HuruPv5nvD3RtoU/NHavPnx7y71aAAAA
AAAAAAEAAAACAAAAAwAAAAIAAAABAAAABAAAAAAAAAACAAAABQAAAAIAAAADAAAABQAAAAMA
AAAGAAAABQAAAAYAAAACAAAABwAAAAYAAAADAAAACAAAAAAAAAAEAAAACQAAAAIAAAAGAAAA
CgAAAAAAAAAIAAAACgAAAAEAAAAAAAAACwAAAAQAAAACAAAACwAAAAkAAAAEAAAADAAAAAcA
AAAKAAAADAAAAAYAAAAHAAAADAAAAAkAAAAGAAAADQAAAAgAAAAEAAAADgAAAAgAAAANAAAA
DgAAAA0AAAAEAAAADgAAAAQAAAAJAAAADgAAAAkAAAAMAAAADgAAAAoAAAAIAAAADgAAAAwA
AAAKAAAADwAAAAcAAAADAAAADwAAAAoAAAAHAAAADwAAAAMAAAABAAAADwAAAAEAAAAKAAAA
EAAAAAIAAAAJAAAAEAAAAAkAAAALAAAAEAAAAAsAAAACAAAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAQAAAAAAAAAAAAAAAAAAAAAACAPy0AAAAEAAAAHTnBPm8MOD4pv869HjnBPm8MOD7SJrw9
nJDBPW8MOD4AAKS7CzfSPW8MOD4AQLY9CzfSPW8MOD714si9HTnBPqP7rz5be989HTnBPqP7
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
7z2fp2a/7jPNvfQEyT1CCG2/FlbRva4O2L3/hGu/wBdsPAIIAb7/hGu/wBdsPACY7z0An3q/
YMDKPACY7z20AAAAAAAAAAEAAAACAAAAAwAAAAAAAAACAAAAAwAAAAIAAAAEAAAABQAAAAIA
AAABAAAABgAAAAEAAAAAAAAABwAAAAYAAAAAAAAACAAAAAkAAAAKAAAACAAAAAoAAAALAAAA
CAAAAAsAAAAJAAAADAAAAAEAAAAGAAAADQAAAAcAAAAOAAAADwAAABAAAAALAAAADwAAAAsA
AAAMAAAADwAAAAwAAAAQAAAAEQAAAA0AAAAOAAAAEQAAAAkAAAALAAAAEQAAAA4AAAAHAAAA
EgAAAAYAAAATAAAAFAAAABMAAAAGAAAAFQAAABIAAAATAAAAFQAAABAAAAAMAAAAFQAAAAwA
AAASAAAAFQAAABEAAAALAAAAFQAAAAsAAAAQAAAAFgAAAAwAAAAGAAAAFgAAAAYAAAASAAAA
FgAAABIAAAAMAAAAFwAAABUAAAATAAAAFwAAAA0AAAARAAAAFwAAABEAAAAVAAAAFwAAABMA
AAAUAAAAFwAAAAcAAAANAAAAFwAAABQAAAAHAAAAGAAAABEAAAAHAAAAGAAAAAcAAAAAAAAA
GQAAAAYAAAAHAAAAGQAAAAcAAAAUAAAAGQAAABQAAAAGAAAAGgAAAAsAAAAKAAAAGwAAAAIA
AAAFAAAAGwAAAAQAAAACAAAAGwAAAAoAAAAEAAAAHAAAABEAAAAYAAAAHAAAABgAAAAEAAAA
HAAAAAkAAAARAAAAHAAAAAQAAAAKAAAAHAAAAAoAAAAJAAAAHQAAAAMAAAAEAAAAHQAAAAQA
AAAYAAAAHQAAAAAAAAADAAAAHQAAABgAAAAAAAAAHgAAAAoAAAAbAAAAHgAAABsAAAAFAAAA
HgAAAAUAAAABAAAAHgAAAAEAAAAaAAAAHgAAABoAAAAKAAAAHwAAAAEAAAAMAAAAHwAAABoA
AAABAAAAHwAAAAwAAAALAAAAHwAAAAsAAAAaAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAA
AAAAAAAAAAAAAAAAAACAP0IAAAAEAAAAltB/PsBjiTy4AIw9ltB/Pm4MOD63bM29ltB/Pm4M
OD7v9Lk9AAAAN8BjiTzfSbo9AAAAN8BjiTzewcy9ltB/PsBjiTyRm569AAAANzVq/T3//6O7
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
AajGvsS3Sb4AYOU9AajGvsS3Sb4B0Pe9GeewvgBtjjoVdwU+GeewvgBtjjoUsw6+omPrvvL3
ur3TeBG+omPrvvL3ur3TPAg+wOycvrH+mr1YfAK+wOycvrH+mr2vgPI9o6CzvkBwhL7rSro9
o6CzvkBwhL4A0My9qAAAAAAAAAABAAAAAgAAAAMAAAACAAAABAAAAAMAAAAAAAAAAgAAAAUA
AAAEAAAAAgAAAAYAAAAAAAAABwAAAAgAAAAJAAAABQAAAAgAAAAFAAAAAgAAAAoAAAABAAAA
AAAAAAoAAAAAAAAABgAAAAsAAAAJAAAACAAAAAsAAAAIAAAAAgAAAAwAAAAGAAAABwAAAAwA
AAAFAAAACQAAAA0AAAAGAAAADAAAAA0AAAAMAAAACQAAAA4AAAAHAAAAAAAAAA8AAAAJAAAA
CwAAAA8AAAAKAAAABgAAABAAAAAAAAAAAwAAABEAAAAOAAAABAAAABEAAAAEAAAABQAAABEA
AAAFAAAADAAAABIAAAAOAAAAAAAAABIAAAAAAAAAEAAAABIAAAAQAAAADgAAABMAAAABAAAA
CgAAABMAAAAKAAAADwAAABMAAAAPAAAAAQAAABQAAAABAAAADwAAABQAAAAPAAAACwAAABUA
AAAEAAAADgAAABUAAAAOAAAAEAAAABYAAAAJAAAADwAAABYAAAAGAAAADQAAABYAAAANAAAA
CQAAABcAAAAOAAAAEQAAABcAAAAMAAAABwAAABcAAAARAAAADAAAABgAAAADAAAABAAAABgA
AAAEAAAAFQAAABgAAAAVAAAAAwAAABkAAAALAAAAAgAAABkAAAACAAAAFAAAABkAAAAUAAAA
CwAAABoAAAAHAAAADgAAABoAAAAOAAAAFwAAABoAAAAXAAAABwAAABsAAAAPAAAABgAAABsA
AAAGAAAAFgAAABsAAAAWAAAADwAAABwAAAACAAAAAQAAABwAAAABAAAAFAAAABwAAAAUAAAA
AgAAAB0AAAAQAAAAAwAAAB0AAAADAAAAFQAAAB0AAAAVAAAAEAAAABAAAAAAAAAAAAAAAAAA
AAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9RAAAABAAAAJbP/z5xDDg+meC/PWZKJT9xDDg+
R0a/PTInez9xDDg+Rn+SvTInez9xDDg+IYt9PZbP/z5xDDg+vuTSvZbP/z7IbSK+AACku5bP
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
EgAAAAwAAAAFAAAAEgAAABAAAAAMAAAAEwAAAAEAAAAEAAAAEwAAAAkAAAABAAAAEwAAAAcA
AAAGAAAAEwAAAAYAAAAJAAAAEwAAAAQAAAAHAAAAFAAAABAAAAASAAAAFAAAABIAAAAFAAAA
FQAAAAsAAAARAAAAFQAAABEAAAAGAAAAFgAAAAEAAAAJAAAAFgAAAAkAAAAKAAAAFgAAAAoA
AAABAAAAFwAAAAUAAAAQAAAAFwAAABAAAAAUAAAAFwAAABQAAAAFAAAAGAAAAAYAAAALAAAA
GAAAAAsAAAAVAAAAGAAAABUAAAAGAAAAGQAAAAIAAAAMAAAAGQAAAAwAAAAOAAAAGQAAAA4A
AAACAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP0IAAAAEAAAA
Eh2MPxhzAT8AaLw9CQcpPxhzAT9iI909Eh2MPxhzAT+Uf9C9CQcpP550LT/+/6O7CQcpP8aa
BT9LxfC9CQcpPy8CGz8CNt09ABVuP7GsRD8AON89CQcpPy8CGz8MrfC9ACdxPxOzRj//r/G9
AMFqP8DdUT8AKIc9/z1qPxPjVD/+/6O7AMFqP8DdUT8AoJm9CQcpPwZBKT+djYM9CQcpPwZB
KT9/8pa9CQcpPxhzAT9km++9ACdxPxOzRj8AKN09AJyEP9cvGD//H9s9AJyEP9cvGD/+l+29
FjmNPxhzAT/+/6O7NlBlPxhzAT++vuu9/4d2PwATQD/+/6O7gBKDP9ITFj//H9s9eAAAAAAA
AAABAAAAAgAAAAMAAAAEAAAAAQAAAAUAAAABAAAABgAAAAUAAAADAAAAAQAAAAcAAAAIAAAA
BAAAAAcAAAAEAAAAAwAAAAkAAAAFAAAABgAAAAkAAAAKAAAAAwAAAAsAAAAIAAAABwAAAAsA
AAADAAAACgAAAAsAAAAKAAAACAAAAAwAAAADAAAABQAAAAwAAAAFAAAACQAAAAwAAAAJAAAA
AwAAAA0AAAAHAAAAAwAAAA0AAAADAAAACwAAAA0AAAALAAAABwAAAA4AAAABAAAABAAAAA4A
AAACAAAAAQAAAA8AAAAKAAAACQAAAA8AAAAJAAAABgAAABAAAAAAAAAADwAAABAAAAAPAAAA
BgAAABEAAAAIAAAAAgAAABEAAAAEAAAACAAAABIAAAAPAAAAAAAAABIAAAAAAAAAAgAAABIA
AAACAAAACAAAABMAAAAOAAAABAAAABMAAAAEAAAAEQAAABMAAAACAAAADgAAABMAAAARAAAA
AgAAABQAAAAIAAAACgAAABQAAAASAAAACAAAABQAAAAKAAAADwAAABQAAAAPAAAAEgAAABUA
AAABAAAAAAAAABUAAAAAAAAAEAAAABUAAAAGAAAAAQAAABUAAAAQAAAABgAAAA==]]></BinaryString>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Content name="TextureID"><url>rbxassetid://735232392</url></Content>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>2.45201111</X>
					<Y>1.66317987</Y>
					<Z>0.289993286</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="MeshPart" referent="RBXD8EEC53857CD47BE8C3C6C3C0B2511CE">
			<Properties>
				<bool name="Anchored">true</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<int name="BrickColor">1003</int>
				<CoordinateFrame name="CFrame">
					<X>131.615997</X>
					<Y>0.828000009</Y>
					<Z>-185.789001</Z>
					<R00>0.857660115</R00>
					<R01>0.514217079</R01>
					<R02>0</R02>
					<R10>-0.514217079</R10>
					<R11>0.857660115</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<token name="CollisionFidelity">0</token>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="Elasticity">0.5</float>
				<float name="Friction">0.300000012</float>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<Vector3 name="InitialSize">
					<X>1.22200012</X>
					<Y>0.789460003</Y>
					<Z>0.26499939</Z>
				</Vector3>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">false</bool>
				<token name="Material">800</token>
				<Content name="MeshID"><url>rbxassetid://735230644</url></Content>
				<string name="Name">Mag</string>
				<BinaryString name="PhysicsData"><![CDATA[Q1NHUEhTAwAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9UAAAA
BAAAAMGg6j5kA2E+AbDyPcGg6j7uRKs+/v/1O8Gg6j5kA2E+/+fRvcGg6j5dqqo+WrHyPQDg
Dz8IsbM+ANj4PcGg6j5dqqo+rurRvQDgDz8IsbM+/w/YvQACCz9Twcg+ANCiPQACCz9Twcg+
AAiCvQAbDz8LGso+/v/1O8Gg6j58UVM+/v/1OwBYGT9QYZw+/+97PQFrHD/82Z8+/v/1OwCk
ED8wnpE+APDRPQBYGT9QYZw+/186vQCkED8wnpE+ACixvQGEBj+o1Lw+/8/BvQATAz/UBIE+
AbDyPQDeBD9w5nc+/v/1OwATAz/UBIE+/+fRvQBvEj/0iYw+/v/1OwBUAz9Eo7s+APDRPQDT
DT+XxcQ+/v9/PQDTDT+XxcQ+AHA+vQEI7D4chas+AbDyPcGg6j72YVM+ugNhPMGg6j72YVM+
Hy2vOgEI7D4chas+/+fRvZwAAAAAAAAAAQAAAAIAAAADAAAAAAAAAAQAAAADAAAAAQAAAAAA
AAAFAAAAAgAAAAEAAAAFAAAABgAAAAIAAAAHAAAAAQAAAAMAAAAIAAAABwAAAAkAAAAIAAAA
BQAAAAEAAAAIAAAAAQAAAAcAAAAKAAAAAAAAAAIAAAALAAAADAAAAAQAAAALAAAABAAAAA0A
AAAOAAAABgAAAAwAAAAOAAAADwAAAAYAAAAQAAAACAAAAAYAAAARAAAAAAAAABIAAAARAAAA
BAAAAAAAAAARAAAADQAAAAQAAAATAAAAEgAAAAIAAAATAAAAAgAAAAYAAAATAAAABgAAAA8A
AAAUAAAAEgAAABMAAAAUAAAAEwAAAA8AAAAUAAAADQAAABEAAAAUAAAAEQAAABIAAAAUAAAA
DwAAAA4AAAAUAAAADgAAAAwAAAAUAAAADAAAAAsAAAAUAAAACwAAAA0AAAAVAAAABAAAAAcA
AAAWAAAACQAAAAcAAAAWAAAABwAAAAQAAAAWAAAABAAAAAwAAAAWAAAADAAAAAkAAAAXAAAA
BgAAAAgAAAAXAAAACAAAAAkAAAAXAAAADAAAAAYAAAAXAAAACQAAAAwAAAAYAAAABwAAAAMA
AAAYAAAAFQAAAAcAAAAYAAAAAwAAAAQAAAAYAAAABAAAABUAAAAZAAAAEgAAAAAAAAAZAAAA
AAAAAAoAAAAZAAAACgAAABIAAAAaAAAAAgAAABIAAAAaAAAAEgAAAAoAAAAaAAAACgAAAAIA
AAAbAAAABQAAAAgAAAAbAAAACAAAABAAAAAbAAAABgAAAAUAAAAbAAAAEAAAAAYAAAAQAAAA
AAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/PwAAAAQAAACAaZy+qd8GvlbV
1L2AaZy+Dq53vkoinL2AaZy+qjt0vgCw8j2AaZy+qd8Gvogp9D0AJDG+8IHWvQCwBz6AaBy+
7ocevUze8z2AaBy+7ocevQJA1L0AGC++hzjWvQCoBr6AaBy+Dt4bvqBenD2AaBy+P2IWvgDo
0b2AaBy+4ycIvvufBj6AaZy+qTt0vgDo0b2AaBy+CaMGvhsl/L2AaBy+QWIWvgCw8j2AaBy+
Dt4bviu4eL2AaZy+Dq53vipuvD2AaBy+uHIavQIA9juAaZy+lI14vgIA9juAaBy+K5QcvgIA
9juAaZy+eD4GvlZOw7yAaZy+XaYmvuni1L1yAAAAAAAAAAEAAAACAAAAAwAAAAAAAAACAAAA
AwAAAAQAAAAFAAAAAwAAAAIAAAAEAAAABgAAAAcAAAAAAAAABgAAAAUAAAAIAAAACQAAAAYA
AAAIAAAACgAAAAQAAAACAAAACgAAAAUAAAAEAAAACgAAAAgAAAAFAAAACwAAAAkAAAABAAAA
CwAAAAEAAAAAAAAADAAAAAkAAAALAAAADAAAAAsAAAAHAAAADAAAAAcAAAAGAAAADAAAAAYA
AAAJAAAADQAAAAIAAAAIAAAADQAAAAgAAAAKAAAADQAAAAoAAAACAAAADgAAAAEAAAAJAAAA
DgAAAAkAAAAIAAAADwAAAAgAAAACAAAADwAAAAIAAAABAAAAEAAAAAUAAAAGAAAAEAAAAAYA
AAAAAAAAEAAAAAMAAAAFAAAAEQAAAAgAAAAPAAAAEQAAAA8AAAABAAAAEQAAAAEAAAAOAAAA
EgAAAA4AAAAIAAAAEgAAAAgAAAARAAAAEgAAABEAAAAOAAAAEwAAAAAAAAADAAAAEwAAAAMA
AAAQAAAAEwAAABAAAAAAAAAAFAAAAAAAAAAHAAAAFAAAAAcAAAALAAAAFAAAAAsAAAAAAAAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPzAAAAAEAAAAgWucPvsp
Az4BsPI9gWucPjlAdz4AAPY7gWucPvwpAz4B6NG9waDqPnxRUz4AAPY7waDqPl2qqj6v6tG9
waDqPl2qqj5asfI9gWucPgwXdj6X/PI9gWucPgwXdj4EgNK9waDqPmUDYT4BsPI9waDqPmUD
YT4B6NG9gWucPiWw7j0AAPY7gWucPucj7z0HwPA8gWucPucj7z3xS2i8waDqPu5Eqz4AAPY7
waDqPvVhUz67A2E8waDqPvVhUz4gLa86VAAAAAAAAAABAAAAAgAAAAMAAAAEAAAABQAAAAYA
AAABAAAAAAAAAAcAAAACAAAAAQAAAAgAAAAFAAAABgAAAAgAAAAGAAAAAAAAAAgAAAADAAAA
BQAAAAkAAAACAAAABwAAAAkAAAAHAAAABAAAAAkAAAAEAAAAAwAAAAoAAAAAAAAAAgAAAAsA
AAAAAAAACgAAAAsAAAAKAAAAAwAAAAsAAAAIAAAAAAAAAAwAAAADAAAACgAAAAwAAAAKAAAA
AgAAAAwAAAACAAAACQAAAA0AAAAEAAAABwAAAA0AAAAHAAAAAQAAAA0AAAABAAAABgAAAA0A
AAAGAAAABQAAAA0AAAAFAAAABAAAAA4AAAADAAAACAAAAA4AAAAIAAAACwAAAA4AAAALAAAA
AwAAAA8AAAAJAAAAAwAAAA8AAAADAAAADAAAAA8AAAAMAAAACQAAABAAAAAAAAAAAAAAAAAA
AAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9FAAAABAAAAAAAADfJbl49rarTvQAAADfJbl49
D5PzPQAAADdXI2K9/ufRvQAAADdgI2K9/q/yPYBoHL7uhx69St7zPYBoHL7uhx69AkDUvYBo
HL7jJwi++58GPgA0Cb687SK+AKQFPoBoHL4+Yha+/ufRvYBoHL4Jowa+FyX8vQA0Cb687SK+
AIDqvQCwnb0A92m7AKwHvgBg5bzwNJK9AKDwvYBoHL4O3hu+oF6cPQCgcb0BmKM8AJQDvv9/
RLygszC9AKDwvQAAADeENYG9AAD2O4BoHL5BYha+/q/yPYBoHL4O3hu+Kbh4vQAAADccHIC9
Kp54PQAAADccHIC9xis5vYBoHL4qlBy+AAD2O4BoHL5X0xu9Vk7DvH4AAAAAAAAAAQAAAAIA
AAADAAAAAgAAAAEAAAAEAAAABQAAAAYAAAAEAAAABgAAAAEAAAAHAAAAAQAAAAYAAAAHAAAA
AwAAAAEAAAAIAAAABgAAAAUAAAAJAAAACgAAAAgAAAAJAAAACAAAAAUAAAAJAAAABQAAAAsA
AAAMAAAACgAAAAkAAAAMAAAACQAAAAsAAAAMAAAAAgAAAAoAAAANAAAABgAAAAgAAAAOAAAA
BAAAAAEAAAAOAAAAAQAAAAAAAAAOAAAACwAAAAUAAAAPAAAADAAAAAsAAAAPAAAACwAAAA4A
AAAPAAAADgAAAAAAAAAPAAAAAAAAAAIAAAAPAAAAAgAAAAwAAAAQAAAABwAAAAoAAAAQAAAA
AgAAAAMAAAARAAAABwAAAAYAAAARAAAABgAAAA0AAAARAAAADQAAAAcAAAASAAAACAAAAAoA
AAASAAAADQAAAAgAAAATAAAAAwAAAAcAAAATAAAABwAAABAAAAATAAAAEAAAAAMAAAAUAAAA
CgAAAAIAAAAUAAAAAgAAABAAAAAUAAAAEAAAAAoAAAAVAAAADQAAABIAAAAVAAAAEgAAAAoA
AAAVAAAACgAAAAcAAAAVAAAABwAAAA0AAAAWAAAABQAAAAQAAAAWAAAABAAAAA4AAAAWAAAA
DgAAAAUAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/MAAAAAQA
AACAaZy+lY14vgIA9juAaZy+qd8GvlbV1L2AaZy+qd8Gvosp9D2AaZy+qjt0vgGw8j0Aahy/
gq2ivgHA9D0AYhC/QofJvgGw8j2AaZy+qDt0vgLo0b0Aahy/gq2ivgAA1r0AYhC/QofJvgLo
0b2AaZy+Dq53vipuvD2AaZy+Dq53vkoinL0AXA+/EljJvgIA9jsA1Ri/eGedvgDAbTwAYhC/
DhrKvgIA9jsAahy/yjyivgIA9juAaZy+eD4GvlhOw7xUAAAAAAAAAAEAAAACAAAAAwAAAAIA
AAAEAAAAAwAAAAQAAAAFAAAAAwAAAAAAAAACAAAABgAAAAEAAAAAAAAABgAAAAcAAAABAAAA
BgAAAAgAAAAHAAAACQAAAAAAAAADAAAACQAAAAMAAAAFAAAACgAAAAgAAAAGAAAACgAAAAYA
AAAAAAAACwAAAAgAAAAKAAAACwAAAAoAAAAAAAAACwAAAAAAAAAJAAAACwAAAAkAAAAFAAAA
DAAAAAQAAAACAAAADAAAAAEAAAAHAAAADQAAAAgAAAALAAAADQAAAAsAAAAFAAAADQAAAAcA
AAAIAAAADQAAAAUAAAAEAAAADQAAAAQAAAAHAAAADgAAAAcAAAAEAAAADgAAAAQAAAAMAAAA
DgAAAAwAAAAHAAAADwAAAAIAAAABAAAADwAAAAEAAAAMAAAADwAAAAwAAAACAAAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAPzAAAAAEAAAAgmucPiWw7j3///U7
gmucPg4Xdj4CgNK9gmucPg4Xdj6V/PI9AAAAN9CzYj3///U7AAAAN1gjYr0B6NG9AAAAN2Aj
Yr0BsPI9AAAAN8huXj2tqtO9AAAAN8huXj0Pk/M9gmucPvspAz4BsPI9gmucPvwpAz4B6NG9
AAAAN4Q1gb3///U7AAAANxwcgL0qnng9AAAANxwcgL3GKzm9gmucPuoj7z0GwPA8gmucPuoj
7z3wS2i8AAAAN8E2/rvOxdO9VAAAAAAAAAABAAAAAgAAAAMAAAAEAAAABQAAAAMAAAACAAAA
AQAAAAYAAAAEAAAAAwAAAAYAAAADAAAAAQAAAAcAAAACAAAAAwAAAAcAAAADAAAABQAAAAgA
AAACAAAABwAAAAgAAAAHAAAABQAAAAgAAAAAAAAAAgAAAAkAAAABAAAAAAAAAAoAAAAFAAAA
BAAAAAsAAAAFAAAACgAAAAsAAAAKAAAAAAAAAAsAAAAIAAAABQAAAAwAAAAAAAAACgAAAAwA
AAAKAAAABAAAAAwAAAAEAAAACQAAAA0AAAAAAAAACAAAAA0AAAAIAAAACwAAAA0AAAALAAAA
AAAAAA4AAAAJAAAAAAAAAA4AAAAAAAAADAAAAA4AAAAMAAAACQAAAA8AAAAGAAAAAQAAAA8A
AAABAAAACQAAAA8AAAAEAAAABgAAAA8AAAAJAAAABAAAAA==]]></BinaryString>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Content name="TextureID"><url>rbxassetid://735230693</url></Content>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<Vector3 name="size">
					<X>1.22200012</X>
					<Y>0.789460003</Y>
					<Z>0.26499939</Z>
				</Vector3>
			</Properties>
		</Item>
		<Item class="Camera" referent="RBXFBCC28F52C7E48678A41012508424739">
			<Properties>
				<CoordinateFrame name="CFrame">
					<X>127.905251</X>
					<Y>0.359646201</Y>
					<Z>-183.861588</Z>
					<R00>0.482669383</R00>
					<R01>-0.0595713034</R01>
					<R02>-0.87377435</R02>
					<R10>-3.7252903e-009</R10>
					<R11>0.997684062</R11>
					<R12>-0.0680190921</R12>
					<R20>0.875802696</R20>
					<R21>0.0328307375</R21>
					<R22>0.481551498</R22>
				</CoordinateFrame>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<float name="FieldOfView">25.0000019</float>
				<CoordinateFrame name="Focus">
					<X>129.652802</X>
					<Y>0.495684564</Y>
					<Z>-184.824692</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="HeadLocked">true</bool>
				<float name="HeadScale">1</float>
				<string name="Name">ThumbnailCamera</string>
			</Properties>
		</Item>
	</Item>
</roblox>